{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/assetss/common/ValidatorsComponents/ElementsValidators.module.css","components/assetss/images/loader1.gif","components/Profile/UserInfo/Contact.module.css","components/assetss/images/viewed1.jpg","components/assetss/images/closeButton.png","components/assetss/images/trash.png","components/assetss/images/userLog.jpg","components/Profile/UserInfo/UserInfo.module.css","components/Dialogs/Message/Messages.module.css","components/Dialogs/Dialogs.module.css","components/ToDoLists/ToDoListTasks/Tasks.module.css","components/ToDoLists/ToDoLists.module.css","serviceWorker.js","API/requests.js","data/ProfileReduser.js","data/DIalogsReduser.js","data/UsersReduser.js","data/AuthReducer.js","data/InitializatonReducer.js","data/ToDoListsReducer.js","data/redux-store.js","components/Header/LogOutButton.jsx","components/Header/AcountIcon.jsx","components/Header/MessagesIcon.jsx","components/Header/UsersIcon.jsx","components/Header/ToDoListsIcon.jsx","components/Header/Header.jsx","components/assetss/common/Loader/Loader.js","data/ProfileSelectors.js","data/AuthSelectors.js","data/InitialozationSelectors.js","components/Header/HeaderContainer.jsx","components/Dialogs/DialogInfo.jsx","components/Dialogs/Dialogs.jsx","components/hocs/AuthRedirect.js","data/DialogsSelectors.js","components/Dialogs/DialogsContainer.jsx","components/assetss/common/Paginator/Paginator.js","components/Users/User.jsx","components/MaterialUI/ModalWindow/UserSearchModal.jsx","components/Users/FindUser.jsx","components/Users/Users.jsx","data/Users-Selectors.js","components/Users/UsersContainer.jsx","components/Profile/UserInfo/ProfileStatusF.jsx","components/Profile/UserInfo/Contact.jsx","components/Profile/UserInfo/ProfileData.jsx","components/Profile/UserInfo/ProfileAvatar.jsx","components/assetss/common/ValidatorsComponents/ElementsValidators.js","components/utils/validators.js","components/Profile/UserInfo/ProfileDataEditorForm.jsx","components/Profile/UserInfo/SendMessageOnUserPage.jsx","components/Profile/UserInfo/UserInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsConteiner.jsx","components/Profile/Profile.jsx","components/Profile/ProfileCOntainer.jsx","components/Dialogs/Message/DeleteConfirmWindow.jsx","components/Dialogs/Message/DeleteMessage.jsx","components/Dialogs/Message/MessagesWithUser.jsx","components/Dialogs/Message/MessagesContainer.jsx","components/Login/Login.jsx","components/MaterialUI/ModalWindow/LoginModal.jsx","components/Login/LoginPage.jsx","components/ToDoLists/CreateNewToDoList/TextFieldToDoLists.jsx","components/ToDoLists/CreateNewToDoList/CreateNewToDoList.jsx","components/ToDoLists/DeleteToDoList.jsx","components/ToDoLists/EditButton.jsx","components/ToDoLists/ListMenu.jsx","components/ToDoLists/SaveButton.jsx","components/ToDoLists/GoBackButton.jsx","components/ToDoLists/TitleChangeField.jsx","components/ToDoLists/AddNewTask/AddNewTaskButton.jsx","components/ToDoLists/AddNewTask/AddNewTaskField.jsx","components/ToDoLists/AddNewTask/AddNewTask.jsx","components/ToDoLists/ToDoListTasks/ShowTasksButton.jsx","components/ToDoLists/ToDoListTasks/HideTasksButton.jsx","components/ToDoLists/ToDoListTasks/DeleteTaskButton.jsx","components/ToDoLists/ToDoListTasks/DoneIcone.jsx","components/ToDoLists/ToDoListTasks/EditTaskButton.jsx","components/ToDoLists/ToDoListTasks/TaskShowDetailsIcon.jsx","components/ToDoLists/ToDoListTasks/TaskHideDetails.jsx","components/ToDoLists/ToDoListTasks/TaskDetails.jsx","components/ToDoLists/ToDoListTasks/Tasks.jsx","components/ToDoLists/ToDoList.jsx","components/ToDoLists/ToDoLists.jsx","data/ToDoListsSelectors.js","components/ToDoLists/ToDoListsContainer.jsx","App.js","index.js","components/assetss/images/userPhoto.jpg","components/Login/login.module.css","components/Users/Users.module.css","components/Users/FindUser.module.css","components/ToDoLists/CreateNewToDoList/CreateNewToDoList.module.css","components/Profile/UserInfo/ProfileData.module.css","components/assetss/common/Paginator/Paginator.module.css"],"names":["module","exports","pp","marginPost","button","item","img","like","header","IconsWrapper","log","loader","MessagesIconStyle","accountIconUserName","loginPosition","loginButton","active","startPosition","LogOutStyle","formControl","error","textarea","input","TextAreaMessage","textareaAboutMe","ContactFormInput","TextAreaDialogsMessage","FindFormInput","__webpack_require__","p","contact","userdescrition","UserPhoto","ProfileName","UserName","FormError","goback","MyContacts","ContactsForm","MyName","buttonSaveChanges","buttonGoBack","EditorFormBG","MessageFormStyle","dateStyle","messageText","UserNameInMessages","viewed","fontStyles","confirmDeletingWindow","confirmDeletingWindowButtons","buttontsDelta","confirmDeletingWindowHeader","confirmDeletingWindowText","imgClose","deleteMessageStyle","wrapper","Main","DialogUserPhoto","padding","dialogs","dialogsItems","messages","DialogArea","activeLink","ConfirmText","ToTrash","MainWrapper","TaskBodyWrapper","deadline","description","Ramka","ToTrashIcon","iconStatus","Title","DetailsButton","detailsWrapper","startDate","descriptionText","ToDoListsPosition","ToDolistsWrapper","ToDoListTitle","ToDolistsChanchingWrapper","ToDoListChangingInput","EditButtonPostition","AddNewTaskWrapper","AddTaskButton","ShowTasksButton","HideTasksButton","TasksContent","tasksposititon","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","API-KEY","API","getUsers","_getUsers","Object","asyncToGenerator","regenerator_default","a","mark","_callee","currentPage","pageSize","response","_args","arguments","wrap","_context","prev","next","length","undefined","get","concat","sent","abrupt","data","stop","apply","this","AuthMe","_AuthMe","_callee2","_context2","getProfile","_getProfile","_callee3","ProfileID","_args3","_context3","DelSub","_DelSub","_callee4","userId","_context4","delete","_x","AddSub","_AddSub","_callee5","_context5","post","_x2","getProfileStatus","_getProfileStatus","_callee6","_args6","_context6","setProfileStatus","_setProfileStatus","_callee7","status","_context7","put","_x3","Login","_Login","_callee8","email","password","rememberMe","captcha","_context8","_x4","_x5","_x6","_x7","LogOut","_LogOut","_callee9","_context9","LoadPhotoOnServer","_LoadPhotoOnServer","_callee10","photo","formdata","_context10","FormData","append","Content-Type","_x8","PutProfileDataOnServer","_PutProfileDataOnServer","_callee11","profile","_context11","_x9","GetCaptchaFromServer","_GetCaptchaFromServer","_callee12","_context12","GetAllDialogs","_GetAllDialogs","_callee13","_context13","GetNewMessagesFromServer","_GetNewMessagesFromServer","_callee14","_context14","_x10","SendNewMessage","_SendNewMessage","_callee15","NewMessage","_context15","body","_x11","_x12","GetNewMessagesCount","_GetNewMessagesCount","_callee16","_context16","DeleteMessage","_DeleteMessage","_callee17","MessageID","_context17","_x13","FindUser","_FindUser","_callee18","_context18","_x14","GetToDoLists","_GetToDoLists","_callee19","_context19","CreateNewToDoList","_CreateNewToDoList","_callee20","title","_context20","_x15","DeleteToDoList","_DeleteToDoList","_callee21","todolistId","_context21","_x16","ChangeToDoListTitle","_ChangeToDoListTitle","_callee22","_context22","_x17","_x18","GetToDoListTasks","_GetToDoListTasks","_callee23","count","page","_args23","_context23","_x19","CreateNewTakForToDoList","_CreateNewTakForToDoList","_callee24","Tasktitle","DataResponse","_context24","_x20","_x21","ChangeTaksInformation","_ChangeTaksInformation","_callee25","taskid","UpdatedTask","_context25","_x22","_x23","_x24","DeleteTaskFromToDoList","_DeleteTaskFromToDoList","_callee26","_context26","_x25","_x26","DefaultState","Posts","TextNewPost","IsMyPage","OwnName","SetStatusOfUser","type","SetPhotoOfUser","GetProfileThunk","_ref","dispatch","getState","MyID","Auth","MyOwnName","fullName","ProfileReducer","state","action","NewPost","id","Post","newtext","likesCount","objectSpread","toConsumableArray","photos","bool","users","avatars","NewMessageText","AllDialogs","DialogsMessages","InterlocutorAvatar","UserAvatar","NewMessagesCount","SetNewMessages","NewMessagesData","setUserAvatarForDialogs","GetNewMessagesThunk","UserId","_ref2","SendNewMessageThunk","_ref3","GetNewMessagesCountThunk","_ref6","DialogsReducer","NewAllDialogs","newInterlocutorAvatar","Set_NewMessagesCount","Portion_Size_Changer","Users","totalUsersCount","IsFetching","InProcess","PortionSize","FoundedUser","OnFollow","userID","onUnFollow","ToggleIsFetching","ToggleInProcess","InProgress","UserID","UsersReducer","map","us","followed","filter","PortionSizeChangingValue","NewFoundedUser","login","IsLogined","CaptchaUrl","SetAuthUser","AuthMeThunk","_data$data","resultCode","GetCaptchaThunk","_ref4","captchaURL","url","CaptchaURLFromServer","AuthReducer","inition","InitializateReducer","ToDoLists","ToDoListTasks","ToDoListTasksPage","ToDoListTasksCount","GetToDoListsThunk","ResponseData","NewToDoLists","GetToDoListTasksThunk","ToDoListID","_ref5","Tasks","ToDoListsReducer","NewToDoListTasksPage","NewToDoListTasksCount","reducers","combineReducers","ProfileData","MessagesData","UsersData","form","formReducer","Init","ToDoListsData","store","createStore","applyMiddleware","thunkMiddleWare","LogOutButton","props","react_default","createElement","className","HS","onClick","LogOutThunk","handleMenuClose","AccountIconComponent","_useState","useState","_useState2","slicedToArray","anchorEl","setAnchorEl","isMenuOpen","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","hs","react_router_dom","to","MenuItem","Header_LogOutButton","IconButton","edge","aria-label","aria-controls","aria-haspopup","event","currentTarget","color","AccountCircle_default","MessagesIcon","Badge_default","badgeContent","Mail_default","People_default","ToDoListsIcon","ListAlt_default","Header","hc","activeClassName","Header_ToDoListsIcon","UsersIcon","MessagesIconPosition","Header_MessagesIcon","AcountIcon","UserProfile","Preloader","src","LoadingSvg","GetProfileSelector","GetStatusSelector","GetIsMyPageSelector","GetPostsSelector","GetOwnNameSelector","GetUserIDSelector","GetIsLoginedSelector","GetLoginSelector","GetIsFetchingSelector","GetinitionSelector","GetNewMessagesCountSelector","HeaderContainer","Fragment","Loader","components_Header_Header","React","Component","connect","OwnID","DialogInfo","date","MessageSendTime","split","time","d","pc","DialogUserName","DialogUserAvatar","Dialogs","el","Dialogs_DialogInfo","key","userName","small","large","newMessagesCount","lastDialogActivityDate","MapStateToPropsForRedirect","AuthRedirect","RedirectComp","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","value","react_router","GetAllDialogsSelector","GetMessagesDataSelector","DialogsContainer","GetAllDialogsThunk","components_Dialogs_Dialogs","compose","withRouter","Paginator","pagesCount","Math","ceil","pages","i","push","PortionNumber","SetPortionNumber","LeftBorderOfPortion","RightBorderOfPortion","PortionCount","PS","setNumbers","NumbersFont","numbers","ev","OnChangedPage","User","um","user","name","disabled","some","OnUnFollow","unfollow","follow","FindUserModal","setOpen","handleClose","Button","variant","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","fullWidth","DialogActions","SubmitModal","SetFoundedUser","useEffect","_useState3","_useState4","FoundingMode","SetFoundingMode","OnSubmitData","FindUserThunk","document","getElementById","FUStyles","foundArea","SearchingResult","items","FoundedUsers","FoundedUsersWrapper","Users_User","GoBack","FindUserButton","UserSearchModal","PurifyUsers","ChangePortionSize","Users_FindUser","UsersWrapper","PaginatorPosition","common_Paginator_Paginator","GetUsers","GetPageSize","GetTotalUsersCount","GetCurrentPage","GetIsFeching","GetInProgress","GetPortionSize","GetFoundedUserSelector","UsersContainer","pageNumber","_this","SetCurrentPage","getUsersThunk","followThunk","unfollowThunk","totalCount","stopSubmit","_error","ProfileStatusF","IsStatusChanging","SetIsStatusChanging","Status","SetStatus","onChange","e","onBlur","SetProfileStatus","onDoubleClick","Contact","ContactValue","cs","ContactName","ProfileContacts","keys","contacts","ProfileContactsValues","pds","aboutME","aboutMe","lookingForAJob","lookingForAJobDescription","buttonEditInformation","ContactsEditingOn","values","UserInfo_Contact","SetIsAnyContact","ProfileAvatar","SelectPhoto","target","files","SetProfilePhoto","accept","htmlFor","TextArea","meta","objectWithoutProperties","touched","EVS","assign","TextAreaAboutMe","Input","InputName","_ref7","CreateField","placeholder","validators","component","text","Field","validate","required","MaxLengthCreator","MaxLengthValue","max300","ProfileDataEditorForm","onSubmit","handleSubmit","ContactsEditingOFF","maxLength300","ReduxSendMessageOnUserPageForm","reduxForm","lm","AuthError","MessageSendingModOFF","SendMessageOnUserPage","ChosedSendMessage","SetChosedSendMessage","Formdata","MessageFromUserPage","ProfileDataEditorFormRedux","UserInfo","ContactsIsEditing","SetContactsIsEditing","UserInfo_ProfileAvatar","UserInfo_ProfileStatusF","UserInfo_SendMessageOnUserPage","initialValues","formData","SaveProfileData","then","UserInfo_ProfileData","message","likecount","maxValue250","ReduxMyPostForm","MyPosts","memo","posts","MyPosts_Post_Post","formDatas","addpost","postArea","MyPostsConteiner","MyPosts_MyPosts","PureComponent","Profile","Profile_UserInfo_UserInfo","MyPosts_MyPostsConteiner","ProfileContainer","params","SetIsMyPage","history","GetProfileStatusThunk","ProfileDataToPaint","prevProps","prevState","snapshot","components_Profile_Profile","SetProfileStatusThunk","SetProfilePhotoThunk","UpdateProfileInfoThunk","profileID","Promise","reject","DeleteConfirmWindow","closeWindow","SetToConfirmDeleting","ms","ToConfirmDeleting","CloseButton","deleteMessage","MessageToRestore","SetMessageToRestore","Message_DeleteConfirmWindow","DeleteMessageThunk","DialoguserID","maxValue300","ReduxMessageWithUserForm","MessagesWithUser","SetMessagesData","mwuStyles","addedAt","senderName","senderId","Message_DeleteMessage","Viewed","MessageTextArea","MessagesContainer","GetInterlocutorAvatarThunk","GetProfileAvatarThunk","Message_MessagesWithUser","maxLength50","ReduxLoginForm","LoginUserPhoto","imgUser","LoginThunk","withStyles","theme","root","spacing","closeButton","position","right","top","palette","grey","children","classes","other","disableTypography","Typography","Close_default","LoginModalWindow","MuiDialogContent","CustomizedDialogs","_React$useState","_React$useState2","aria-labelledby","LoginModal_DialogTitle","dividers","components_Login_Login","LoginPage","LoginPageAlarm","AuthButton","useStyles","makeStyles","InputWithIcon","Grid","container","alignItems","OnTextFieldCreateNewToDoListChanging","CreateNewToDoListMode","SetCreateNewToDoListMode","CurrentValueOfCreateNewToDoListInput","SetCurrentValueOfCreateNewToDoListInput","TDlistS","CreateAndGoBackButtons","AddNewListButton","GoBacktButton","AddNewListWrapper","AddNewToDoListsThunk","Addbutton","DeleteToDoListButton","Del","ListID","size","startIcon","Delete_default","EditButton","Fab","ButtonSize","Edit_default","HandleOnEdit","ToDoListMenuIcon","TDLS","ToDoLists_EditButton","EditTitleModeON","ToDoLists_DeleteToDoList","MoreVert_default","SaveButton","CurrentToDoListTitle","ChangeToDoListTitleThunk","EditTitleModeOFF","Save_default","GoBackButton","HandleOnClick","ArrowBack_default","display","flexWrap","textField","marginLeft","marginRight","width","TitleChangingField","noValidate","autoComplete","OnToDoListTitleChanging","helperText","AddNewTaskButton","AddNewTaskFieldCurrentValue","AddNewTaskThunk","AddTaskField","OnAddNewTaskFieldChange","AddNewTask","SetAddNewTaskFieldCurrentValue","AddNewTaskField","AddNewTask_AddNewTaskButton","ButtonIsDesabled","KeyboardArrowDown_default","KeyboardArrowUp_default","DeleteButton","DeleteTaskThunk","TaskID","DeleteOutline_default","TaskDoneIcon","Done_default","EditTaskButton","TaskShowDetailsIcon","ShowButtonBlocked","TaskHideDetailsIcon","TaskDetails","ShowDetails","SetShowDetails","ts","TaskHideDetails","ShowButtonBlockedOFF","ToDoListTasks_TaskShowDetailsIcon","ShowButtonBlockedON","SetTasksData","SetShowButtonBlocked","classNames","","ss","task","TaskEditButton","ToDoListTasks_EditTaskButton","DoneIcone","DeleteTaskButton","todoListId","ToDoListTasks_TaskDetails","ToDoList","EditTitleMode","SetEditTitleMode","ShowTasksMode","SetShowTasksMode","_useState5","_useState6","SetToDoListTitle","ToDoLists_SaveButton","ToDoLists_GoBackButton","TitleChangeField","ListMenu","DeleteToDoListThunk","ToDoLists_AddNewTask_AddNewTask","ToDoListTasks_Tasks","ToDoListTasks_HideTasksButton","ButtonIsDesabledOFF","ToDoListTasks_ShowTasksButton","ButtonIsDesabledON","SetButtonIsDesabled","ToDoLists_CreateNewToDoList_CreateNewToDoList","ToDoLists_ToDoList","GetToDoListTasksPage","GetToDoListTasksCount","GetToDoListIsFetching","ToDoListsContainer","components_ToDoLists_ToDoLists","SetToDoListTasksPage","SetToDoListTasksCount","Newtitle","TaskTitle","TaskId","App","InitializationAPPthunk","Header_HeaderContainer","exact","path","render","Dialogs_DialogsContainer","Message_MessagesContainer","ProfileCOntainer","Users_UsersContainer","Login_LoginPage","ToDoLists_ToDoListsContainer","promise","MyId","all","ReactDOM","basename","process","react_redux_es","src_App_0","navigator","serviceWorker","ready","registration","unregister","bg","bg10","logModalWindow","Names","Country","City"],"mappings":"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","file":"static/js/main.62c18dce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pp\":\"MyPosts_pp__oOvBm\",\"marginPost\":\"MyPosts_marginPost__1eXDQ\",\"button\":\"MyPosts_button__BRsVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__GvU_X\",\"img\":\"Post_img__1drkR\",\"like\":\"Post_like__VlEH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3L50G\",\"IconsWrapper\":\"Header_IconsWrapper__O29iG\",\"item\":\"Header_item__2BL1D\",\"log\":\"Header_log__2oet5\",\"loader\":\"Header_loader__1oqn8\",\"MessagesIconStyle\":\"Header_MessagesIconStyle__4F9-k\",\"accountIconUserName\":\"Header_accountIconUserName__1yn7c\",\"loginPosition\":\"Header_loginPosition__1Mv6C\",\"loginButton\":\"Header_loginButton__1rOO6\",\"active\":\"Header_active__wKwwX\",\"startPosition\":\"Header_startPosition__18IcE\",\"LogOutStyle\":\"Header_LogOutStyle__2lzry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"ElementsValidators_formControl__2NyA5\",\"error\":\"ElementsValidators_error__3FUa5\",\"textarea\":\"ElementsValidators_textarea__3cIBd\",\"button\":\"ElementsValidators_button__tZ8xv\",\"input\":\"ElementsValidators_input__23YpE\",\"TextAreaMessage\":\"ElementsValidators_TextAreaMessage__16qP9\",\"textareaAboutMe\":\"ElementsValidators_textareaAboutMe__1i4aL\",\"ContactFormInput\":\"ElementsValidators_ContactFormInput__2F0Oc\",\"TextAreaDialogsMessage\":\"ElementsValidators_TextAreaDialogsMessage__3UVNe\",\"FindFormInput\":\"ElementsValidators_FindFormInput__2CswA\"};","module.exports = __webpack_public_path__ + \"static/media/loader1.54c96e01.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__8hXUq\"};","module.exports = __webpack_public_path__ + \"static/media/viewed1.1334aba6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/closeButton.8c53b830.png\";","module.exports = __webpack_public_path__ + \"static/media/trash.99ef094b.png\";","module.exports = __webpack_public_path__ + \"static/media/userLog.ae20f8de.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userdescrition\":\"UserInfo_userdescrition__3mhuU\",\"UserPhoto\":\"UserInfo_UserPhoto__28MeR\",\"ProfileName\":\"UserInfo_ProfileName__ioqSD\",\"UserName\":\"UserInfo_UserName__3jEfi\",\"FormError\":\"UserInfo_FormError__EPiL-\",\"goback\":\"UserInfo_goback__3tajc\",\"MyContacts\":\"UserInfo_MyContacts__3Cxig\",\"input\":\"UserInfo_input__1T4oP\",\"ContactsForm\":\"UserInfo_ContactsForm__1gWsD\",\"MyName\":\"UserInfo_MyName__ybeTv\",\"buttonSaveChanges\":\"UserInfo_buttonSaveChanges__28dF5\",\"buttonGoBack\":\"UserInfo_buttonGoBack__1urJa\",\"EditorFormBG\":\"UserInfo_EditorFormBG__1shzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageFormStyle\":\"Messages_MessageFormStyle__3_75P\",\"dateStyle\":\"Messages_dateStyle__1z3DB\",\"img\":\"Messages_img__3OsI6\",\"messageText\":\"Messages_messageText__1fb-7\",\"UserNameInMessages\":\"Messages_UserNameInMessages__1eMkc\",\"viewed\":\"Messages_viewed__2S_Ep\",\"fontStyles\":\"Messages_fontStyles__1kczt\",\"confirmDeletingWindow\":\"Messages_confirmDeletingWindow__1l7zx\",\"confirmDeletingWindowButtons\":\"Messages_confirmDeletingWindowButtons___hBhx\",\"buttontsDelta\":\"Messages_buttontsDelta__FwB_z\",\"confirmDeletingWindowHeader\":\"Messages_confirmDeletingWindowHeader__3O44g\",\"confirmDeletingWindowText\":\"Messages_confirmDeletingWindowText__1CX63\",\"imgClose\":\"Messages_imgClose__2UMNq\",\"deleteMessageStyle\":\"Messages_deleteMessageStyle__1uqFk\",\"wrapper\":\"Messages_wrapper__miyNy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Dialogs_Main__fgm98\",\"DialogUserPhoto\":\"Dialogs_DialogUserPhoto__2S4Tu\",\"padding\":\"Dialogs_padding__3E-h0\",\"dialogs\":\"Dialogs_dialogs__BjYAn\",\"dialogsItems\":\"Dialogs_dialogsItems__1VDH2\",\"active\":\"Dialogs_active__2EN3N\",\"messages\":\"Dialogs_messages__1bTDr\",\"img\":\"Dialogs_img__1DEd5\",\"header\":\"Dialogs_header__xOCfp\",\"button\":\"Dialogs_button__30gtx\",\"DialogArea\":\"Dialogs_DialogArea__2YCQ-\",\"item\":\"Dialogs_item__be1yr\",\"activeLink\":\"Dialogs_activeLink__309Uh\",\"deleteMessageStyle\":\"Dialogs_deleteMessageStyle__3GrY8\",\"ConfirmText\":\"Dialogs_ConfirmText__3Xy4I\",\"ToTrash\":\"Dialogs_ToTrash__3Py0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Tasks_Main__3BWH0\",\"MainWrapper\":\"Tasks_MainWrapper__2pj1b\",\"TaskBodyWrapper\":\"Tasks_TaskBodyWrapper__3ij9J\",\"deadline\":\"Tasks_deadline__1U-ZC\",\"description\":\"Tasks_description__KV7_2\",\"Ramka\":\"Tasks_Ramka__37PWH\",\"ToTrashIcon\":\"Tasks_ToTrashIcon__1Bzva\",\"iconStatus\":\"Tasks_iconStatus__1GMe_\",\"Title\":\"Tasks_Title__2ZCqX\",\"DetailsButton\":\"Tasks_DetailsButton__2e43T\",\"detailsWrapper\":\"Tasks_detailsWrapper__1fEsw\",\"startDate\":\"Tasks_startDate__3m-5Q\",\"descriptionText\":\"Tasks_descriptionText__2aPsR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToDoListsPosition\":\"ToDoLists_ToDoListsPosition__3MkVI\",\"ToDolistsWrapper\":\"ToDoLists_ToDolistsWrapper__220tE\",\"ToDoListTitle\":\"ToDoLists_ToDoListTitle__LyiG1\",\"ToDolistsChanchingWrapper\":\"ToDoLists_ToDolistsChanchingWrapper__2Edj6\",\"ToDoListChangingInput\":\"ToDoLists_ToDoListChangingInput__aFOXL\",\"EditButtonPostition\":\"ToDoLists_EditButtonPostition__2h4K0\",\"AddNewTaskWrapper\":\"ToDoLists_AddNewTaskWrapper__3B8fo\",\"AddTaskButton\":\"ToDoLists_AddTaskButton__2QYQ2\",\"ShowTasksButton\":\"ToDoLists_ShowTasksButton__23yFD\",\"HideTasksButton\":\"ToDoLists_HideTasksButton__1OJJX\",\"TasksContent\":\"ToDoLists_TasksContent__NmQUx\",\"tasksposititon\":\"ToDoLists_tasksposititon__2Frvl\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"96428d9a-0d9d-4cb1-8a30-3ebf6693ac4b\"\r\n    }\r\n})\r\n\r\nexport const API = {\r\n\r\n    async getUsers(currentPage = 1, pageSize = 10) {\r\n        const response = await instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        return response.data\r\n    },\r\n\r\n    async AuthMe() {\r\n        const response = await instance.get(`auth/me`)\r\n        return response.data\r\n    },\r\n\r\n    async getProfile(ProfileID = 2) {\r\n        const response = await instance.get(`profile/` + ProfileID)\r\n        return response.data\r\n    },\r\n\r\n    async DelSub(userId) {\r\n        const response = await instance.delete(`follow/${userId}`)\r\n        return response.data\r\n    },\r\n\r\n    async AddSub(userId) {\r\n        const response = await instance.post(`follow/${userId}`)\r\n        return response.data\r\n    },\r\n\r\n    async getProfileStatus(ProfileID = 2) {\r\n        const response = await instance.get(`profile/status/` + ProfileID)\r\n        return response.data\r\n    },\r\n\r\n    async setProfileStatus(status) {\r\n        const response = await instance.put(`profile/status/`, {status: status})\r\n        return response.data\r\n\r\n    },\r\n\r\n    async Login(email, password, rememberMe, captcha) {\r\n        const response = await instance.post(`auth/login/`, {\r\n            email: email,\r\n            password: password,\r\n            rememberMe: rememberMe,\r\n            captcha: captcha\r\n        })\r\n        return response.data\r\n    },\r\n\r\n    async LogOut() {\r\n        const response = await instance.delete(`auth/login`)\r\n        return response.data\r\n\r\n    },\r\n\r\n    async LoadPhotoOnServer(photo) {\r\n        const formdata = new FormData()\r\n        formdata.append(\"image\", photo)\r\n        const response = await instance.put('profile/photo', formdata, {\r\n            'Content-Type': 'multipart/form-data'\r\n        })\r\n        return response.data\r\n    },\r\n    async PutProfileDataOnServer(profile) {\r\n        const response = await instance.put('profile', profile)\r\n        return response.data\r\n    },\r\n    async GetCaptchaFromServer() {\r\n        const response = await instance.get('security/get-captcha-url')\r\n        return response.data\r\n    },\r\n    async GetAllDialogs() {\r\n        const response = await instance.get('dialogs')\r\n        return response.data\r\n    },\r\n    async GetNewMessagesFromServer(userId) {\r\n        const response = await instance.get(`dialogs/${userId}/messages`)\r\n        return response.data\r\n    },\r\n    async SendNewMessage(userId, NewMessage) {\r\n        const response = await instance.post(`dialogs/${userId}/messages`, {\r\n            body: NewMessage\r\n        })\r\n        return response.data\r\n    },\r\n    async GetNewMessagesCount() {\r\n        const response = await instance.get('dialogs/messages/new/count')\r\n        return response\r\n    },\r\n    async DeleteMessage(MessageID) {\r\n        const response = await instance.delete(`dialogs//messages/${MessageID}`)\r\n        return response\r\n    },\r\n    async FindUser(UserName) {\r\n        const response = await instance.get(`users?term=${UserName}`)\r\n        return response\r\n    },\r\n    async GetToDoLists() {\r\n        const response = await instance.get('todo-lists')\r\n        return response\r\n    },\r\n    async CreateNewToDoList(title) {\r\n        const response = await instance.post('todo-lists', {title: title})\r\n        return response\r\n    },\r\n    async DeleteToDoList(todolistId) {\r\n        await instance.delete(`todo-lists/${todolistId}`)\r\n    },\r\n    async ChangeToDoListTitle(todolistId, title) {\r\n        await instance.put(`todo-lists/${todolistId}`, {\r\n            title: title\r\n        })\r\n    },\r\n    async GetToDoListTasks(todolistId, count = 10, page = 1) {\r\n        const response = await instance.get(`todo-lists/${todolistId}/tasks?count=${count}&page=${page}`)\r\n        return response\r\n    },\r\n\r\n    async CreateNewTakForToDoList(todolistId, Tasktitle) {\r\n        const DataResponse = await instance.post(`todo-lists/${todolistId}/tasks`, {\r\n            title: Tasktitle\r\n        })\r\n        return DataResponse\r\n    },\r\n\r\n    async ChangeTaksInformation(todolistId, taskid, UpdatedTask) {\r\n        const DataResponse = await instance.put(`todo-lists/${todolistId}/tasks/${taskid}`, UpdatedTask)\r\n        return DataResponse\r\n    },\r\n\r\n    async DeleteTaskFromToDoList(todolistId, taskid) {\r\n        const DataResponse = await instance.delete(`todo-lists/${todolistId}/tasks/${taskid}`)\r\n        return DataResponse\r\n    },\r\n}\r\n","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst add_post = 'Profile/ADD_POST'\r\nconst Set_Profile_Of_User = 'Profile/Set_Profile_Of_User'\r\nconst Set_Status_Of_User = '/Profile/Set_Status_Of_User'\r\nconst Set_Photo_Of_User = '/Profile/Set_Photo_Of_User'\r\nconst Set_Is_My_Page = '/Profile/Set_Is_My_Page'\r\nconst Set_Own_Name= '/Profile/Set_Own_Name'\r\n\r\n\r\nlet DefaultState = {\r\n    Posts: [],\r\n    TextNewPost: '',\r\n    profile: null,\r\n    status: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n    IsMyPage: false,\r\n    OwnName : \"\"\r\n}\r\n\r\nconst ProfileReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case add_post: {\r\n            let NewPost = {\r\n                id: 6,\r\n                Post: action.newtext,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n\r\n                Posts: [...state.Posts, NewPost],\r\n            }\r\n        }\r\n        case Set_Profile_Of_User: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case Set_Status_Of_User: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case Set_Photo_Of_User: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photo}\r\n            }\r\n        }\r\n        case Set_Is_My_Page: {\r\n            return {...state, IsMyPage: action.bool}\r\n        }\r\n        case Set_Own_Name: {\r\n            return {...state, OwnName: action.MyOwnName}\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addpost = (text) => {\r\n    return {type: add_post, newtext: text}\r\n}\r\n\r\nexport const setProfileOfUser = (profile) => {\r\n    return {type: Set_Profile_Of_User, profile}\r\n}\r\n\r\nexport const SetStatusOfUser = (status) => {\r\n    return {type: Set_Status_Of_User, status}\r\n}\r\n\r\nexport const SetPhotoOfUser = (photo) => {\r\n    return {type: Set_Photo_Of_User, photo}\r\n}\r\n\r\nexport const SetIsMyPage = (bool) => {\r\n    return {type: Set_Is_My_Page, bool}\r\n}\r\nexport const SetOwnName = (MyOwnName) => {\r\n    return {type: Set_Own_Name, MyOwnName}\r\n}\r\n\r\n\r\n\r\n\r\nexport const GetProfileThunk = (ProfileID) => async (dispatch,getState) => {\r\n    const MyID = getState().Auth.userId\r\n    const data = await API.getProfile(ProfileID)\r\n    dispatch(setProfileOfUser(data))\r\n    if (data.userId === MyID) {\r\n        dispatch(SetOwnName(data.fullName))\r\n    }\r\n}\r\n\r\n\r\nexport const GetProfileStatusThunk = (userID) => async (dispatch) => {\r\n    const data = await API.getProfileStatus(userID)\r\n    dispatch(SetStatusOfUser(data))\r\n}\r\n\r\nexport const SetProfileStatusThunk = (status) => async (dispatch) => {\r\n    const data = await API.setProfileStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetStatusOfUser(status))\r\n    }\r\n}\r\n\r\nexport const SetProfilePhotoThunk = (photo) => async (dispatch) => {\r\n    const data = await API.LoadPhotoOnServer(photo)\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetPhotoOfUser(data.data.photos))\r\n    }\r\n}\r\n\r\nexport const UpdateProfileInfoThunk = (profile) => async (dispatch, getState) => {\r\n    const profileID = getState().Auth.userId\r\n    const data = await API.PutProfileDataOnServer(profile)\r\n    if (data.resultCode === 0) {\r\n        dispatch(GetProfileThunk(profileID))\r\n    } else {\r\n        dispatch(stopSubmit(\"ProfileDataEditorForm\",{_error : data.messages[0]}))\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileReducer","import {API} from \"../API/requests\";\r\n\r\nconst Set_All_Dialogs = 'Dialogs/Set_All_Dialogs'\r\nconst Set_New_Messages = 'Dialogs/Set_New_Messages'\r\nconst Set_InterlocutorAvatar = 'Dialogs/Set_InterlocutorAvatar'\r\nconst Set_UserAvatarForDialogs = 'Dialogs/Set_UserAvatarForDialogs'\r\nconst Set_NewMessagesCount = 'Dialogs/Set_NewMessagesCount'\r\n\r\nlet DefaultState = {\r\n    users: [],\r\n    messages: [],\r\n    avatars: [{}],\r\n    NewMessageText: '',\r\n    AllDialogs: [],\r\n    DialogsMessages: null,\r\n    InterlocutorAvatar : \"\",\r\n    UserAvatar : \"\",\r\n    NewMessagesCount : 0\r\n}\r\nconst DialogsReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n\r\n        case Set_All_Dialogs : {\r\n            return {...state, AllDialogs: action.NewAllDialogs}\r\n        }\r\n        case  Set_New_Messages : {\r\n            return {...state, DialogsMessages: action.NewMessagesData}\r\n        }\r\n        case Set_InterlocutorAvatar :{\r\n            return {\r\n                ...state, InterlocutorAvatar : action.newInterlocutorAvatar\r\n            }\r\n        }\r\n        case Set_UserAvatarForDialogs :{\r\n            return {\r\n                ...state, UserAvatar : action.UserAvatar\r\n            }\r\n        }\r\n        case Set_NewMessagesCount :{\r\n            return {\r\n                ...state, Set_NewMessagesCount : action.UserAvatar\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const SetAllDialogs = (NewAllDialogs) => {\r\n    return {type: Set_All_Dialogs, NewAllDialogs}\r\n}\r\nexport const SetNewMessages = (NewMessagesData) => {\r\n    return {type: Set_New_Messages, NewMessagesData}\r\n}\r\nexport const setInterlocutorAvatar = (newInterlocutorAvatar) => {\r\n    return {type: Set_InterlocutorAvatar , newInterlocutorAvatar}\r\n}\r\nexport const SetNewMessagesCount = (NewMessagesCount) => {\r\n    return {type: Set_NewMessagesCount , NewMessagesCount}\r\n}\r\nexport const setUserAvatarForDialogs = (UserAvatar) => {\r\n    return {type: Set_UserAvatarForDialogs , UserAvatar}\r\n}\r\n\r\nexport const GetAllDialogsThunk = () => async (dispatch) => {\r\n    const data = await API.GetAllDialogs()\r\n    dispatch(SetAllDialogs(data))\r\n}\r\nexport const GetNewMessagesThunk = (UserId) => async (dispatch) => {\r\n    const data = await API.GetNewMessagesFromServer(UserId)\r\n    if (!data.error) {\r\n        dispatch(SetNewMessages(data))\r\n    }\r\n\r\n}\r\nexport const SendNewMessageThunk = (UserId, NewMessage) => async (dispatch) => {\r\n    const data = await API.SendNewMessage(UserId, NewMessage)\r\n    if (!data.error) {\r\n        dispatch(GetNewMessagesThunk(UserId))\r\n    }\r\n}\r\nexport const GetInterlocutorAvatarThunk = (UserId) => async (dispatch) => {\r\n    const data = await API.getProfile(UserId)\r\n        dispatch(setInterlocutorAvatar(data.photos.small))\r\n}\r\nexport const GetProfileAvatarThunk = (UserID) => async (dispatch) => {\r\n    const data = await API.getProfile(UserID)\r\n        dispatch(setUserAvatarForDialogs(data.photos.small))\r\n}\r\nexport const GetNewMessagesCountThunk = () => async (dispatch) => {\r\n    const data = await API.GetNewMessagesCount()\r\n    dispatch(SetNewMessagesCount(data))\r\n}\r\nexport const DeleteMessageThunk = (MessageID,UserID) => async (dispatch) => {\r\n   await API.DeleteMessage(MessageID)\r\n    dispatch(GetNewMessagesThunk(UserID))\r\n\r\n}\r\n\r\n\r\nexport default DialogsReducer","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst follow = 'Users/FOLLOW'\r\nconst unfollow = 'Users/UNFOLLOW'\r\nconst setusers = 'Users/SET_USERS'\r\nconst Set_Current_Page= 'Users/SET_CURRENT_PAGE'\r\nconst Set_Total_Count_Of_Users = 'Users/Set_Total_Count_Of_Users'\r\nconst IsFetching_Toggle = 'Users/Toggle_is_fetching'\r\nconst IsInProcess_Togle = 'Users/IsInProcess_Togle'\r\nconst Portion_Size_Changer='Users/Portion_Size_C                                                                hanger'\r\nconst Set_Founded_User='Users/Set_Founded_User'\r\n\r\nlet DefaultState = {\r\n        Users: [],\r\n        pageSize : 20,\r\n        totalUsersCount:0,\r\n        currentPage : 1,\r\n         IsFetching : false,\r\n        InProcess : [],\r\n    PortionSize : 1,\r\n    FoundedUser : null\r\n}\r\n\r\nconst UsersReducer =  (state = DefaultState,action) => {\r\n    switch (action.type) {\r\n        case follow: {\r\n        return {\r\n          ...state,\r\n          Users:state.Users.map(us =>  {\r\n              if (us.id === action.userID) {\r\n                  return {\r\n                      ...us,\r\n                      followed:true\r\n                  }\r\n              }\r\n              return us\r\n          })\r\n        }\r\n    }\r\n        case unfollow: {\r\n            return {\r\n                ...state,\r\n                Users: state.Users.map(us =>{\r\n                    if(us.id === action.userID){\r\n                        return {\r\n                            ...us,\r\n                            followed:false\r\n                        }\r\n                    }\r\n                    return us\r\n                })\r\n            }\r\n        }\r\n        case setusers:{\r\n            return {...state, Users: action.users}\r\n        }\r\n        case Set_Current_Page:{\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case Set_Total_Count_Of_Users:{\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case IsFetching_Toggle:{\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        case IsInProcess_Togle:{\r\n            return {...state,\r\n                InProcess : action.InProgress ?\r\n                    [...state.InProcess, action.UserID]\r\n                    : state.InProcess.filter(id => id !== action.UserID)\r\n            }\r\n        }\r\n        case Portion_Size_Changer:{\r\n            return {...state,PortionSize : action.PortionSizeChangingValue}\r\n        }\r\n        case Set_Founded_User:{\r\n            return {...state, FoundedUser : action.NewFoundedUser}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const OnFollow = (userID) => {\r\n    return {type : follow,userID:userID }\r\n}\r\nexport const onUnFollow = (userID) => {\r\n    return {type : unfollow, userID:userID }\r\n}\r\nexport const setUsers = (users) => {\r\n    return {type : setusers, users:users }\r\n}\r\nexport const SetCurrentPage = (currentPage) => {\r\n    return {type : Set_Current_Page, currentPage: currentPage}\r\n}\r\nexport const SetTotalCountOfUsers = (totalCount) => {\r\n    return {type : Set_Total_Count_Of_Users, totalUsersCount: totalCount}\r\n}\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type : IsFetching_Toggle, IsFetching}\r\n}\r\nexport const ToggleInProcess = (InProgress,UserID) => {\r\n    return {type : IsInProcess_Togle, InProgress,UserID}\r\n}\r\n\r\nexport const ChangePortionSize = (value) => {\r\n    return {type : Portion_Size_Changer, PortionSizeChangingValue : value }\r\n}\r\nexport const SetFoundedUser = (NewFoundedUser) => {\r\n    return {type : Set_Founded_User, NewFoundedUser }\r\n}\r\n\r\nexport const getUsersThunk = (currentPage,pageSize) =>async (dispatch) =>{\r\n        dispatch (ToggleIsFetching(true))\r\n       const data = await API.getUsers(currentPage,pageSize)\r\n            dispatch(ToggleIsFetching(false))\r\n            dispatch( setUsers(data.items))\r\n            dispatch(SetTotalCountOfUsers(data.totalCount))\r\n    }\r\n\r\nexport  const  unfollowThunk = (userID) =>async (dispatch) =>{\r\n        dispatch(ToggleInProcess(true,userID))\r\n       const data = await API.DelSub(userID)\r\n            if (data.resultCode == 0) {\r\n                dispatch(onUnFollow(userID))\r\n            }\r\n            dispatch(ToggleInProcess(false,userID))\r\n    }\r\n\r\nexport  const  followThunk = (userID) =>async (dispatch) =>{\r\n        dispatch(ToggleInProcess(true,userID))\r\n      const data = await API.AddSub(userID)\r\n            if (data.resultCode == 0) {\r\n                dispatch(OnFollow(userID))\r\n            }\r\n            dispatch(ToggleInProcess(false,userID))\r\n    }\r\n\r\nexport const FindUserThunk = (UserName) =>async (dispatch) =>{\r\n    dispatch (ToggleIsFetching(true))\r\n    const data = await API.FindUser(UserName)\r\n    if(!data.data.error)\r\n    {\r\n        dispatch(ToggleIsFetching(false))\r\n        dispatch(SetFoundedUser(data.data))\r\n    }else {\r\n        dispatch(stopSubmit(\"FindUser\", {_error: data.data.error.messages[0]}))\r\n    }\r\n}\r\n\r\nexport default UsersReducer","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'Auth/SET_USER_DATA'\r\nconst IsFetching_Toggle = 'Auth/IsFetching_Toggle'\r\nconst Set_Captcha_Url = 'Auth/Set_Captcha_Url'\r\n\r\nlet DefaultState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    IsLogined: false,\r\n    IsFetching: false,\r\n    CaptchaUrl : null\r\n}\r\n\r\nconst AuthReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA : {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        case IsFetching_Toggle: {\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        case Set_Captcha_Url: {\r\n            return {...state, CaptchaUrl: action.CaptchaURLFromServer}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetAuthUser = (userId, email, login, IsLogined) =>\r\n    ({type: SET_USER_DATA, data: {userId, email, login, IsLogined}})\r\n\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type: IsFetching_Toggle, IsFetching}\r\n}\r\nexport const SetCaptchaUrl = (CaptchaURLFromServer) => {\r\n    return {type: Set_Captcha_Url, CaptchaURLFromServer}\r\n}\r\n\r\nexport const AuthMeThunk = () => async (dispatch) => {\r\n    ToggleIsFetching(true)\r\n    const data = await API.AuthMe() //возвращает данные авторизованного юзера\r\n    dispatch(ToggleIsFetching(false))\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data\r\n        dispatch(SetAuthUser(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const LoginThunk = (email, password, rememberMe = false,captcha) =>\r\n    async (dispatch) => {\r\n        const data = await API.Login(email, password, rememberMe,captcha)\r\n        if (data.resultCode === 0) {\r\n            dispatch(AuthMeThunk())\r\n        } else {\r\n            if(data.resultCode === 10){\r\n                dispatch(GetCaptchaThunk())\r\n            }\r\n            dispatch(stopSubmit(\"login\", {_error: data.messages[0]}))\r\n        }\r\n    }\r\n\r\nexport const LogOutThunk = () => async (dispatch) => {\r\n    const data = await API.LogOut()\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetAuthUser(null, null, null, false))\r\n    }\r\n}\r\nexport const GetCaptchaThunk = () => async (dispatch) => {\r\n    const data = await API.GetCaptchaFromServer()\r\n    const captchaURL= data.url\r\n        dispatch(SetCaptchaUrl(captchaURL))\r\n\r\n}\r\n\r\n\r\nexport default AuthReducer","import {AuthMeThunk} from \"../data/AuthReducer\"\r\nimport {GetProfileThunk} from \"./ProfileReduser\";\r\n\r\nconst INITIALIZATED = 'Init/INITIALIZATED'\r\n\r\nlet DefaultState = {inition: false}\r\n\r\nconst InitializateReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZATED : {\r\n            return {\r\n                ...state,\r\n                inition: true\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializating = () => ({type: INITIALIZATED})\r\n\r\n\r\n\r\nexport const InitializationAPPthunk = () => async (dispatch,getState) => {\r\n\r\n        let promise = dispatch(AuthMeThunk())\r\n       await Promise.all([promise]);\r\n    const MyId = getState().Auth.userId\r\n            dispatch(GetProfileThunk(MyId))\r\n            dispatch(initializating())\r\n    }\r\n\r\nexport default InitializateReducer","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_TO_DO_LISTS = 'ToDoLists/SET_TO_DO_LISTS';\r\nconst SET_TO_DO_LIST_TASKS_Page = 'ToDoLists/SET_TO_DO_LIST_TASKS_Page';\r\nconst SET_TO_DO_LISTS_TASKS_Count = 'ToDoLists/SET_TO_DO_LISTS_TASKS_Count';\r\nconst SET_TO_DO_LIST_TASKS = 'ToDoLists/SET_TO_DO_LIST_TASKS';\r\nconst IsFetching_Toggle = 'ToDoLists/IsFetching_Toggle';\r\n\r\n\r\nlet DefaultState = {\r\n    ToDoLists: [],\r\n    ToDoListTasks : [],\r\n    ToDoListTasksPage: 1,\r\n    ToDoListTasksCount: 10,\r\n    IsFetching : false\r\n}\r\n\r\nconst ToDoListsReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_TO_DO_LISTS: {\r\n            return {...state, ToDoLists: action.NewToDoLists}\r\n        }\r\n        case SET_TO_DO_LIST_TASKS_Page: {\r\n            return {...state, ToDoListTasksPage: action.NewToDoListTasksPage}\r\n        }\r\n        case SET_TO_DO_LISTS_TASKS_Count: {\r\n            return {...state, ToDoListTasksCount: action.NewToDoListTasksCount}\r\n        }\r\n       case SET_TO_DO_LIST_TASKS: {\r\n            return {...state, ToDoListTasks: action.Tasks}\r\n        }\r\n\r\n        /*case SET_TO_DO_LIST_TASKS: {\r\n            let NewTask = {\r\n                ListId: action.ListID,\r\n                TaskData: action.Tasks,\r\n\r\n            };\r\n\r\n          if(state.ToDoListTasks.every(el=>el.ListId !== action.ListID)) {\r\n                return {\r\n                    ...state,\r\n                    ToDoListTasks: [...state.ToDoListTasks, NewTask]\r\n                }\r\n            }\r\n          else return {\r\n              ...state,\r\n              ToDoListTasks: [...state.ToDoListTasks.filter(item=>{return item.ListId === action.ListID}).TaskData, action.Tasks]\r\n              }\r\n        }*/\r\n\r\n        case IsFetching_Toggle:{\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const SetToDoLists = (NewToDoLists) => {\r\n    return {type: SET_TO_DO_LISTS, NewToDoLists}\r\n}\r\nexport const SetToDoListTasksPage = (NewToDoListTasksPage) => {\r\n    return {type: SET_TO_DO_LIST_TASKS_Page, NewToDoListTasksPage}\r\n}\r\nexport const SetToDoListTasksCount = (NewToDoListTasksCount) => {\r\n    return {type: SET_TO_DO_LISTS_TASKS_Count, NewToDoListTasksCount}\r\n}\r\nexport const SetToDoListTasks = (Tasks) => {\r\n    return {type: SET_TO_DO_LIST_TASKS, Tasks}\r\n}\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type : IsFetching_Toggle, IsFetching}\r\n}\r\n\r\n\r\n\r\nexport const GetToDoListsThunk = () => async (dispatch) => {\r\n    const ResponseData = await API.GetToDoLists()\r\n    dispatch(SetToDoLists(ResponseData.data))\r\n}\r\n\r\nexport const AddNewToDoListsThunk = (title) => async (dispatch) => {\r\n await API.CreateNewToDoList(title)\r\n        dispatch(GetToDoListsThunk())\r\n}\r\n\r\nexport const DeleteToDoListThunk = (ToDoListID) => async (dispatch) => {\r\n    await API.DeleteToDoList(ToDoListID)\r\n    dispatch(GetToDoListsThunk())\r\n}\r\n\r\nexport const ChangeToDoListTitleThunk = (ToDoListID, Newtitle) => async (dispatch) => {\r\n    await API.ChangeToDoListTitle(ToDoListID, Newtitle)\r\n        dispatch(GetToDoListsThunk())\r\n}\r\n\r\nexport const GetToDoListTasksThunk = (ToDoListID, count,page) => async (dispatch) => {\r\n    dispatch(ToggleIsFetching(true))\r\n   const DataResponse = await API.GetToDoListTasks(ToDoListID, count, page)\r\n    if(!DataResponse.data.error) {\r\n        dispatch(SetToDoListTasks(DataResponse.data))\r\n    }\r\n    dispatch(ToggleIsFetching(false))\r\n}\r\n\r\nexport const AddNewTaskThunk = (ToDoListID, TaskTitle) => async (dispatch) => {\r\n  const DataResponse = await API.CreateNewTakForToDoList(ToDoListID, TaskTitle)\r\n    if(DataResponse.data.resultCode === 0) {\r\n        dispatch(GetToDoListTasksThunk(ToDoListID))\r\n    }\r\n}\r\nexport const DeleteTaskThunk = (ToDoListID,TaskId) => async (dispatch) => {\r\n    const DataResponse = await API.DeleteTaskFromToDoList(ToDoListID,TaskId)\r\n    if(DataResponse.data.resultCode === 0) {\r\n        dispatch(GetToDoListTasksThunk(ToDoListID))\r\n    }\r\n}\r\n\r\n\r\nexport default ToDoListsReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport ProfileReducer from \"./ProfileReduser\";\r\nimport DialogsReducer from \"./DIalogsReduser\";\r\nimport UsersReducer from \"./UsersReduser\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport  thunkMiddleWare from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport InitializateReducer from \"./InitializatonReducer\";\r\nimport ToDoListsReducer from \"./ToDoListsReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfileData: ProfileReducer,\r\n    MessagesData: DialogsReducer,\r\n    UsersData : UsersReducer,\r\n    Auth : AuthReducer,\r\n    form : formReducer,\r\n    Init :  InitializateReducer,\r\n    ToDoListsData : ToDoListsReducer\r\n})\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunkMiddleWare))\r\n\r\nwindow.store = store;\r\nexport default store\r\n","import React from 'react';\r\nimport HS from \"./Header.module.css\"\r\n\r\n\r\n\r\nconst LogOutButton =(props) =>{\r\n    const LogOut = ()=>{\r\n        props.LogOutThunk()\r\n        props.handleMenuClose()\r\n    }\r\n\r\nreturn <div>\r\n    <div className={HS.LogOutStyle} onClick={LogOut}>\r\n        Logout\r\n    </div>\r\n</div>\r\n}\r\n\r\nexport default LogOutButton","import React, {useState} from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport AccountCircleHeader from '@material-ui/icons/AccountCircle';\r\nimport hs from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport LogOutButton from \"./LogOutButton\";\r\n\r\n\r\nconst AccountIconComponent = (props) => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n\r\n    const handleProfileMenuOpen = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <div className={hs.accountIconUserName}>\r\n                    {props.OwnName && props.OwnName}\r\n            </div>\r\n\r\n            <div className={`${hs.item} ${hs.active}`}>\r\n            <NavLink to=\"/Profile/\">\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            </NavLink>\r\n            </div>\r\n            <MenuItem onClick={handleMenuClose}>\r\n                     My account\r\n            </MenuItem>\r\n\r\n            <MenuItem >\r\n                <LogOutButton\r\n                    handleMenuClose={handleMenuClose}\r\n                    LogOutThunk={props.LogOutThunk}\r\n                />\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return <div>\r\n            <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleProfileMenuOpen}\r\n                color=\"inherit\"\r\n            >\r\n                <AccountCircleHeader />\r\n            </IconButton>\r\n                {renderMenu}\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default AccountIconComponent;\r\n","import React from \"react\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge/Badge\";\r\nimport MailIconHeader from '@material-ui/icons/Mail';\r\n\r\n\r\n\r\nconst MessagesIcon = (props) =>{\r\n    return <div>\r\n        <div >\r\n            <IconButton aria-label= \"show 11 new mails\" color=\"inherit\">\r\n                <Badge\r\n                    badgeContent={props.NewMessagesCount !== 0 ? props.NewMessagesCount : null }\r\n                    color=\"primary\">\r\n                    <MailIconHeader />\r\n                </Badge>\r\n            </IconButton></div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default MessagesIcon","import React from \"react\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport UsersIcon from '@material-ui/icons/People';\r\n\r\n\r\n\r\nconst MessagesIcon = (props) =>{\r\n    return <div>\r\n        <div >\r\n            <IconButton  color=\"inherit\">\r\n                    <UsersIcon />\r\n            </IconButton>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MessagesIcon","import React from \"react\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ListIcon from '@material-ui/icons/ListAlt';\r\n\r\n\r\n\r\nconst ToDoListsIcon = (props) =>{\r\n    return <div>\r\n        <div >\r\n            <IconButton  color=\"inherit\">\r\n                <ListIcon />\r\n            </IconButton>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ToDoListsIcon","import React from 'react';\r\nimport hc from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport AccountIconComponent from \"./AcountIcon\";\r\nimport MessagesIcon from \"./MessagesIcon\";\r\nimport UsersIcon from \"./UsersIcon\"\r\nimport ToDoListsIcon from \"./ToDoListsIcon\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return <header className={hc.header}>\r\n        <div className={hc.item}>\r\n            {props.IsLogined\r\n                ?\r\n                <div className={hc.IconsWrapper}>\r\n\r\n                    <div className={hc.startPosition}>\r\n\r\n                    </div>\r\n                    <div className={`${hc.item} ${hc.active}`}>\r\n                        <NavLink activeClassName={hc.active} to={\"/ToDoLists/\"}>\r\n                            <ToDoListsIcon/>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <div className={`${hc.item} ${hc.active}`}>\r\n                        <NavLink activeClassName={hc.active} to={\"/Users/\"}>\r\n                            <UsersIcon/>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <div className={hc.MessagesIconPosition}>\r\n                        <div className={`${hc.item} ${hc.active}`}>\r\n                            <NavLink activeClassName={hc.active} to={\"/Dialogs/\"}>\r\n                                <MessagesIcon NewMessagesCount={props.NewMessagesCount}/>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <AccountIconComponent LogOutThunk={props.LogOutThunk}\r\n                                          UserProfile={props.UserProfile}\r\n                                          OwnName={props.OwnName}\r\n                    />\r\n                </div>\r\n                :\r\n                <div className={hc.loginPosition}>\r\n                    <NavLink className={hc.loginButton} to={'/login'}>\r\n                        Login\r\n                    </NavLink>\r\n                </div>\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\nexport default Header;\r\n","import React from 'react'\r\nimport LoadingSvg from '../../../assetss/images/loader1.gif';\r\nimport hc from '../../../Header/Header.module.css'\r\n\r\nlet Preloader = (props) =>{\r\n    return <img className={hc.loader} src={LoadingSvg}/>\r\n}\r\nexport default Preloader","export const GetProfileSelector = (state) =>{\r\n    return state.ProfileData.profile\r\n}\r\nexport const GetStatusSelector = (state) =>{\r\n    return state.ProfileData.status\r\n}\r\nexport const GetIsMyPageSelector = (state) =>{\r\n    return state.ProfileData.IsMyPage\r\n}\r\nexport const GetPostsSelector = (state) =>{\r\n    return state.ProfileData.Posts\r\n}\r\nexport const GetOwnNameSelector = (state) =>{\r\n    return state.ProfileData.OwnName\r\n}\r\n\r\n\r\n","export const GetUserIDSelector = (state) =>{\r\n    return state.Auth.userId\r\n}\r\nexport const GetIsLoginedSelector = (state) => {\r\n    return state.Auth.IsLogined\r\n}\r\nexport const GetLoginSelector = (state) => {\r\n    return state.Auth.login\r\n}\r\nexport const GetIsFetchingSelector = (state) => {\r\n    return state.Auth.IsFetching\r\n}","export const GetinitionSelector = (state) =>{\r\n    return state.Init.inition\r\n}\r\nexport const GetNewMessagesCountSelector = (state) =>{\r\n    return state.MessagesData.NewMessagesCount\r\n}","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {LogOutThunk} from \"../../data/AuthReducer\";\r\nimport {GetOwnNameSelector, GetProfileSelector} from \"../../data/ProfileSelectors\";\r\nimport {GetNewMessagesCountThunk} from \"../../data/DIalogsReduser\"\r\nimport {\r\n    GetIsFetchingSelector,\r\n    GetIsLoginedSelector,\r\n    GetLoginSelector,\r\n    GetUserIDSelector\r\n} from \"../../data/AuthSelectors\";\r\nimport {GetNewMessagesCountSelector} from \"../../data/InitialozationSelectors\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\ncomponentDidMount() {\r\n    this.props.GetNewMessagesCountThunk()\r\n}\r\n\r\n    render() {\r\n        return <>\r\n        {this.props.IsFetching ? <Preloader/> :null}\r\n          <Header {...this.props} />\r\n          </>\r\n    }\r\n\r\n}\r\nlet MapStateToProps = (state) => ({\r\n    IsFetching : GetIsFetchingSelector(state),\r\n    IsLogined: GetIsLoginedSelector(state),\r\n    login:GetLoginSelector(state),\r\n    UserProfile: GetProfileSelector(state),\r\n    OwnID : GetUserIDSelector(state),\r\n    OwnName : GetOwnNameSelector(state),\r\n    NewMessagesCount : GetNewMessagesCountSelector(state)\r\n})\r\n\r\nexport default HeaderContainer = connect(MapStateToProps,\r\n    {LogOutThunk,GetNewMessagesCountThunk})\r\n(HeaderContainer);\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport d from \"./Dialogs.module.css\";\r\nimport UserPhoto from \"./../assetss/images/userPhoto.jpg\"\r\nimport pc from \"../Profile/UserInfo/UserInfo.module.css\";\r\n\r\n\r\nconst DialogInfo = (props) => {\r\n\r\n    const date = props.MessageSendTime.split(\"T\")[0]\r\n    const time = props.MessageSendTime.split(\"T\")[1].split(\".\")[0]\r\n    return <div className={d.DialogArea}>\r\n        <div className={`${d.item} ${d.active}`}>\r\n        <NavLink   to={`/messages/${props.UserID}`}>\r\n        <div className={d.Main}>\r\n            <div className={pc.UserName}>\r\n                   {props.DialogUserName}\r\n                   <div>\r\n                {props.DialogUserAvatar ?\r\n                    <NavLink to={'/Profile/' + props.UserID}>\r\n                    <img className={d.DialogUserPhoto} src={props.DialogUserAvatar}/>\r\n                    </NavLink>\r\n                    :\r\n                    <NavLink to={'/Profile/' + props.UserID}>\r\n                    <img  className={d.DialogUserPhoto} src = {UserPhoto} />\r\n                    </NavLink>\r\n                }\r\n                   </div>\r\n            </div >\r\n            <div className={d.padding}>\r\n                    {props.NewMessagesCount  !== 0 ?\r\n                        \"you have a \" + props.NewMessagesCount + \" new messages\"\r\n                        : \"you don't have a new messages\"}\r\n            </div>\r\n            <div className={d.padding}>\r\n                {\r\n                    props.MessageSendTime ?\r\n                    <div>\r\n                        last message was :\r\n                        <div>\r\n                            {date}\r\n                        </div>\r\n                        <div>\r\n                            {time}\r\n                        </div>\r\n                    </div>\r\n                        : null\r\n                }\r\n            </div>\r\n        </div>\r\n        </NavLink>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default DialogInfo;","import React from 'react'\r\nimport DialogInfo from \"./DialogInfo\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return (<div >\r\n\r\n            {props.MessagesData.AllDialogs.map(el => {\r\n                return <DialogInfo key={el.id} DialogUserName={el.userName}\r\n                               DialogUserAvatar={el.photos.small ?\r\n                                   el.photos.small\r\n                                   : el.photos.large}\r\n                               NewMessagesCount={el.newMessagesCount}\r\n                               MessageSendTime={el.lastDialogActivityDate}\r\n                               UserID={el.id}\r\n                />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import React from \"react\"\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet MapStateToPropsForRedirect = (state)=>{\r\n    return{\r\n        IsLogined : state.Auth.IsLogined\r\n    }\r\n}\r\n\r\nexport const AuthRedirect = (Component) =>{\r\nclass RedirectComp extends React.Component {\r\n    render() {\r\n        if (!this.props.IsLogined) {\r\n            // редирект на страничку авторизации\r\n            return <Redirect to={\"/Login\"} />\r\n        }\r\n        return <Component {...this.props} />\r\n    }\r\n}\r\nlet ConectedAuthRedirectComp = connect(MapStateToPropsForRedirect)(RedirectComp)\r\nreturn ConectedAuthRedirectComp\r\n}","export const GetAllDialogsSelector = (state) =>{\r\n    return state.MessagesData.AllDialogs\r\n}\r\nexport const GetMessagesDataSelector = (state) =>{\r\n    return state.MessagesData\r\n}\r\n/*export const GetDialogsMessagesSelector = (state) =>{\r\n    return state.MessagesData.DialogsMessages\r\n}\r\nexport const GetUserAvatarSelector = (state) =>{\r\n    return state.MessagesData.UserAvatar\r\n}\r\nexport const GetinterlocutorAvatarSelector = (state) =>{\r\n    return state.MessagesData.InterlocutorAvatar\r\n}*/\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {SetNewMessages,GetAllDialogsThunk,\r\n    GetNewMessagesThunk,SendNewMessageThunk} from \"../../data/DIalogsReduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthRedirect} from \"../hocs/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {GetAllDialogsSelector, GetMessagesDataSelector} from \"../../data/DialogsSelectors\";\r\nimport { withRouter} from 'react-router-dom'\r\n\r\n\r\nclass DialogsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n      this.props.GetAllDialogsThunk()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialogs {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => ({\r\n MessagesData: GetMessagesDataSelector(state),\r\n    AllDialogs : GetAllDialogsSelector(state)\r\n})\r\n\r\nexport default compose(connect(StateToProps, {SetNewMessages,\r\n        GetAllDialogsThunk,GetNewMessagesThunk,SendNewMessageThunk}),\r\n    AuthRedirect,\r\n    withRouter)(DialogsContainer)","import PS from \"./Paginator.module.css\";\r\nimport React, {useState} from \"react\"\r\n\r\nconst Paginator = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize) // расчет кол-ва страниц\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let [PortionNumber, SetPortionNumber] = useState(1)\r\n    let LeftBorderOfPortion = (PortionNumber - 1) * props.PortionSize + 1\r\n    let RightBorderOfPortion = PortionNumber * props.PortionSize\r\n    let PortionCount = Math.ceil(pagesCount / props.PortionSize) // расчет кол-ва порций\r\n\r\n    return <div className={PS.setNumbers}>\r\n        <div className={PS.NumbersFont}>\r\n        {PortionNumber > 1 &&\r\n        <button className={PS.button} onClick={() => {\r\n            SetPortionNumber(PortionNumber - 1)\r\n        }}> back </button>}\r\n        {pages.filter(p => p >= LeftBorderOfPortion && p <= RightBorderOfPortion).map((p) => {\r\n            // нумерация страниц\r\n            return (\r\n\r\n                <span className={props.currentPage === p && PS.numbers}\r\n                      onClick={(ev) => {\r\n                          props.OnChangedPage(p)\r\n                      }}>\r\n                            {\"    \" + p}\r\n                        </span>\r\n\r\n            )\r\n        })}\r\n        &nbsp;&nbsp;\r\n        {PortionCount > PortionNumber &&\r\n\r\n        <button className={PS.button} onClick={() => {\r\n            SetPortionNumber(PortionNumber + 1)\r\n        }}>next </button>}\r\n    </div>\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport um from \"./Users.module.css\";\r\nimport UserPhoto from \"../assetss/images/userPhoto.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport pc from \"../Profile/UserInfo/UserInfo.module.css\";\r\n\r\n\r\nlet User = (props) => {\r\n\r\n    return <div className={um.Main}>\r\n        <div>\r\n\r\n            <NavLink to={'/Profile/' + props.user.id}>\r\n                <img className={um.img} src={props.user.photos.small != null ? props.user.photos.small : UserPhoto}/>\r\n            </NavLink>\r\n            <div  className={pc.UserName}>\r\n                {props.user.name}\r\n            </div>\r\n            { props.IsLogined ?\r\n            <div>\r\n\r\n                { props.user.followed\r\n                        ? <button disabled={props.InProcess.some(id =>  id === props.user.id)}\r\n                                  onClick={() => {\r\n                                      props.OnUnFollow(props.user.id)\r\n                                  }} className={um.unfollow}>\r\n                            unfollow\r\n                        </button>\r\n\r\n\r\n                        : <button disabled={props.InProcess.some(id => id === props.user.id)}\r\n                                  onClick={() => {\r\n                                      props.OnFollow(props.user.id)\r\n                                  }} className={um.follow}>\r\n                            follow\r\n                        </button>\r\n                }\r\n            </div>\r\n                :null\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default User","import React,{useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n const  FindUserModal = (props)=> {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleSubmit = () => {\r\n        alert(document.getElementById('FindingUserName').value)\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Button  variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                Search user\r\n            </Button>\r\n            <Dialog    open={open} onClose={handleClose} >\r\n                <DialogTitle >Search user by name</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                       enter user name with you looking for\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"FindingUserName\"\r\n                        type=\"userName\"\r\n                        fullWidth\r\n                        name=\"finduser\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Go back\r\n                    </Button>\r\n                    <Button onClick={props.SubmitModal} color=\"primary\">\r\n                        Search\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\nexport default FindUserModal","import React, {useEffect, useState} from \"react\"\r\nimport FUStyles from \"./FindUser.module.css\";\r\nimport User from \"./User\";\r\nimport FindUserModal from \"../MaterialUI/ModalWindow/UserSearchModal\";\r\n\r\n\r\nconst FindUser = (props) => {\r\n    let [FoundedUser, SetFoundedUser] = useState(props.FoundedUser)\r\n    useEffect(() => {\r\n            SetFoundedUser(props.FoundedUser)\r\n        }, [props.FoundedUser]\r\n    )\r\n\r\n    let [FoundingMode, SetFoundingMode] = useState(false)\r\n\r\n    const FoundingModeON = () => {\r\n        SetFoundingMode(true)\r\n\r\n    }\r\n    const FoundingModeOFF = () => {\r\n        SetFoundingMode(false)\r\n    }\r\n\r\n\r\n    const FindUser = (OnSubmitData) => {\r\n        props.FindUserThunk(document.getElementById('FindingUserName').value)\r\n        FoundingModeON()\r\n    }\r\n\r\n\r\n    return <div>\r\n        {!FoundingMode ?\r\n            <div className={FUStyles.FindUserButton}>\r\n                <FindUserModal SubmitModal={FindUser}/>\r\n            </div>\r\n\r\n            :\r\n            <div>\r\n                <div className={FUStyles.foundArea}>\r\n\r\n\r\n\r\n                    {FoundedUser &&\r\n                    <div>\r\n                        <h2 className={FUStyles.SearchingResult}>\r\n                            Searching result :\r\n                            <div>\r\n\r\n                                {FoundedUser && FoundedUser.items.length === 0 ?\r\n                                    \"no one user with this name\"\r\n                                    : \"founded \" + FoundedUser.items.length + \" users \"}\r\n\r\n                            </div>\r\n                        </h2>\r\n\r\n                        <div className={FUStyles.FoundedUsers}>\r\n                            <div className={FUStyles.FoundedUsersWrapper}>\r\n                            {FoundedUser.items.map(item => <User user={item}\r\n                                                                 key={item.id}\r\n                                                                 InProcess={props.InProcess}\r\n                                                                 OnUnFollow={props.OnUnFollow}\r\n                                                                 OnFollow={props.OnFollow}\r\n                                                                 IsLogined={props.IsLogined}/>)}\r\n                        </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    }\r\n\r\n                </div>\r\n                <button\r\n                    className={FUStyles.GoBack}\r\n                    onClick={FoundingModeOFF}>\r\n                    go back\r\n                </button>\r\n            </div>\r\n\r\n        }\r\n\r\n    </div>\r\n\r\n}\r\nexport default FindUser","import React from 'react'\r\nimport Paginator from \"../assetss/common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport FindUser from \"./FindUser\";\r\nimport us from \"./Users.module.css\"\r\n\r\n\r\n\r\n\r\nlet PurifyUsers = (props) => {\r\n\r\n\r\n    {props.ChangePortionSize(15)}\r\n    return <div>\r\n\r\n            <FindUser  FindUserThunk={props.FindUserThunk}\r\n                      FoundedUser={props.FoundedUser}\r\n                      InProcess={props.InProcess}\r\n                      OnUnFollow={props.OnUnFollow}\r\n                      OnFollow={props.OnFollow}\r\n                      IsLogined={props.IsLogined}\r\n            />\r\n\r\n        <div className={us.UsersWrapper}>\r\n        { props.Users.map(us =>  <User\r\n            user={us}\r\n            key={us.id}\r\n            InProcess={props.InProcess}\r\n            OnUnFollow={props.OnUnFollow}\r\n            OnFollow={props.OnFollow}\r\n            IsLogined={props.IsLogined}\r\n        />)\r\n        }\r\n        </div>\r\n\r\n        <div className={us.PaginatorPosition}>\r\n       <Paginator OnChangedPage={props.OnChangedPage}\r\n                  currentPage={props.currentPage}\r\n                  totalUsersCount={props.totalUsersCount}\r\n                      pageSize={props.pageSize}\r\n                  PortionSize={props.PortionSize}\r\n       />\r\n        </div>\r\n    </div>\r\n}\r\nexport default PurifyUsers","export const GetUsers = (state) =>{\r\n    return state.UsersData.Users\r\n}\r\nexport const GetPageSize = (state) =>{\r\n    return state.UsersData.pageSize\r\n}\r\nexport const GetTotalUsersCount = (state) =>{\r\n    return state.UsersData.totalUsersCount\r\n}\r\n\r\nexport const GetCurrentPage = (state) =>{\r\n    return  state.UsersData.currentPage\r\n}\r\nexport const GetIsFeching = (state) =>{\r\n    return state.UsersData.IsFetching\r\n}\r\nexport const GetInProgress = (state) => {\r\n    return state.UsersData.InProcess\r\n}\r\n\r\nexport const GetPortionSize = (state) => {\r\n    return state.UsersData.PortionSize\r\n}\r\nexport const GetFoundedUserSelector = (state) => {\r\n    return state.UsersData.FoundedUser\r\n}\r\n\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followThunk,\r\n    unfollowThunk,\r\n    SetCurrentPage,\r\n    getUsersThunk,\r\n    ToggleInProcess,\r\n    ChangePortionSize,FindUserThunk\r\n} from \"../../data/UsersReduser\";\r\nimport PurifyUsers from \"./Users\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    GetCurrentPage,\r\n    GetInProgress,\r\n    GetIsFeching,\r\n    GetPageSize,\r\n    GetTotalUsersCount,\r\n    GetUsers,\r\n    GetPortionSize, GetFoundedUserSelector\r\n} from \"../../data/Users-Selectors\";\r\nimport { GetIsLoginedSelector} from \"../../data/AuthSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    /* this component using for make requests on server for a new users and drawing\r\nUi component (Users)*/\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    OnChangedPage = (pageNumber) => {\r\n        this.props.SetCurrentPage(pageNumber)\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.IsFetching ? <Preloader/> : null}\r\n            <PurifyUsers Users={this.props.Users}\r\n                         totalUsersCount={this.props.totalUsersCount}\r\n                         pageSize={this.props.pageSize}\r\n                         OnChangedPage={this.OnChangedPage}\r\n                         OnFollow={this.props.followThunk}\r\n                         OnUnFollow={this.props.unfollowThunk}\r\n                         currentPage={this.props.currentPage}\r\n                         ToggleInProcess={this.props.ToggleInProcess}\r\n                         InProcess={this.props.InProcess}\r\n                         IsLogined={this.props.IsLogined}\r\n                         ChangePortionSize={this.props.ChangePortionSize}\r\n                         PortionSize={this.props.PortionSize}\r\n                         FindUserThunk={this.props.FindUserThunk}\r\n                         FoundedUser={this.props.FoundedUser}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => {\r\n    return {\r\n        IsLogined : GetIsLoginedSelector(state),\r\n        Users: GetUsers(state),\r\n        pageSize: GetPageSize(state),\r\n        totalUsersCount: GetTotalUsersCount(state),\r\n        currentPage: GetCurrentPage(state),\r\n        IsFetching: GetIsFeching(state),\r\n        InProcess: GetInProgress(state),\r\n        PortionSize : GetPortionSize(state),\r\n        FoundedUser : GetFoundedUserSelector(state)\r\n    }\r\n}\r\n\r\n/*let DispatchToProps = (dispatch) => {\r\n    return {\r\n        onFollow: (userID) => {\r\n\r\n            dispatch(follow_AC(userID))\r\n        },\r\n        onUnFollow: (userID) => {\r\n\r\n            dispatch(unfollow_AC(userID))\r\n        },\r\n        setUsers: (Users) => {\r\n            dispatch(setUsers_AC(Users))\r\n        },\r\n        SetCurrentPage: (NumberOfPage) => {\r\n            dispatch(setCurrentPage_AC(NumberOfPage))\r\n        },\r\n        SetTotalCountOfUsers: (totalCount) => {\r\n            dispatch(SetTotalCountOfUsers_AC(totalCount))\r\n        },\r\n        ToggleIsFetching: (IsFetching) => {\r\n            dispatch(IsFetchingToggle_AC(IsFetching))\r\n        }\r\n    }\r\n}*/\r\n\r\n\r\nexport default compose(\r\n    connect(StateToProps,\r\n        {followThunk, unfollowThunk, SetCurrentPage,\r\n            ToggleInProcess, getUsersThunk,ChangePortionSize,FindUserThunk})\r\n)(UsersContainer)","import React, {useState, useEffect} from \"react\"\r\n\r\nconst ProfileStatusF = (props) => {\r\n\r\n\r\n    let [IsStatusChanging, SetIsStatusChanging] = useState(false)\r\n    let [Status, SetStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n            SetStatus(props.status)\r\n        }, [props.status]\r\n    )\r\n\r\n    const StatusChangingON = () => {\r\n        SetIsStatusChanging(true)\r\n    }\r\n\r\n    const StatusChangingOFF = () => {\r\n        SetIsStatusChanging(false)\r\n        props.SetProfileStatus(Status)\r\n\r\n    }\r\n\r\n    const OnStatusChange = (e) => {\r\n        SetStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (<div>\r\n            {props.IsMyPage ?\r\n                <div>\r\n                    {!IsStatusChanging ?\r\n                        <div>\r\n                <span onDoubleClick={StatusChangingON}>\r\n                Status  : {Status || \"the status is empty\"\r\n                }\r\n                </span>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <input onChange={OnStatusChange} onBlur={StatusChangingOFF} autoFocus={true}\r\n                                   value={Status}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                : Status || \"the status is empty\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusF","import React from \"react\"\r\nimport cs from \"./Contact.module.css\"\r\n\r\nconst Contact = (props) =>{\r\n\r\n\r\n    return <span>\r\n        {props.ContactValue &&\r\n        <div className={cs.contact} >\r\n        {props.ContactName} : {props.ContactValue}\r\n        </div>\r\n        }\r\n    </span>\r\n}\r\n\r\n\r\nexport default Contact","import React from \"react\"\r\nimport Contact from \"./Contact\";\r\nimport pds from \"./ProfileData.module.css\"\r\n\r\nconst ProfileData = (props) => {\r\nconst ProfileContacts = Object.keys(props.profile.contacts)\r\nconst ProfileContactsValues = ProfileContacts.map(el => props.profile.contacts[el])\r\nconst ValueNotNull = (values) =>{\r\n        return values !== null\r\n    }\r\n\r\n    return <div className={pds.aboutME}>\r\n        {\r\n            props.profile.aboutMe && <div>\r\n            {props.profile.aboutMe}\r\n        </div>\r\n        }\r\n\r\n        {\r\n            props.profile.lookingForAJob ?\r\n            <div>\r\n                Im looking for a job\r\n            </div>\r\n            :\r\n            <div>\r\n                Im have a job\r\n            </div>\r\n        }\r\n        {props.profile.lookingForAJobDescription &&\r\n        <div>\r\n            {props.profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div className={pds.contacts}>\r\n            <div>\r\n                {props.IsMyPage && <button className={pds.buttonEditInformation}\r\n                                           onClick={props.ContactsEditingOn}>\r\n                    edit information\r\n                </button>}\r\n            </div>\r\n            {\r\n                ProfileContactsValues.some(ValueNotNull) ?\r\n                    \"My contacts :\"\r\n                    : null\r\n            }\r\n\r\n            {ProfileContacts.map(key => {\r\n                return <Contact key={key} ContactName={key}\r\n                                ContactValue={props.profile.contacts[key]}\r\n                                SetIsAnyContact={props.SetIsAnyContact}/>\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileData","\r\nimport UserPhoto from \"../../assetss/images/userPhoto.jpg\";\r\nimport React from \"react\"\r\nimport pc from './UserInfo.module.css'\r\n\r\nconst ProfileAvatar = (props) => {\r\n\r\n    const OnPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.SetProfilePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return <div>\r\n        <div>\r\n            <img id={\"avatar\"} className={pc.UserPhoto}\r\n                 src={(props.photos.large && props.photos.small) == null ? UserPhoto : props.photos.large}/>\r\n        </div>\r\n        <div>\r\n            {props.IsMyPage &&\r\n            <div>\r\n                <input className={pc.SelectPhoto} type={\"file\"}\r\n                       onChange={OnPhotoSelected}\r\n                       accept=\"image/*\"\r\n                       id={\"file\"}/>\r\n                <label htmlFor=\"file\">Click for change avatar</label>\r\n                <label htmlFor=\"file\"><i className=\"material-icons\"></i></label>\r\n            </div>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default ProfileAvatar","import React from 'react'\r\nimport EVS from \"./ElementsValidators.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const TextArea = ({input,meta,...props}) =>{\r\n\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n         <textarea className={EVS.textarea} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n            </div>\r\n    )\r\n\r\n}\r\nexport const TextAreaAboutMe = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <textarea className={EVS.textareaAboutMe} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport const TextAreaMessage = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <textarea className={EVS.TextAreaMessage} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport const TextAreaDialogsMessage = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <textarea className={EVS.TextAreaDialogsMessage} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport const Input = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <div>\r\n            <input className={EVS.input} {...input} {...props}/>\r\n            </div>\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const InputName = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n\r\n                <input className={EVS.input} {...input} {...props}/>\r\n\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\nexport const ContactFormInput = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n                <input className={EVS.ContactFormInput} {...input} {...props}/>\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\nexport const FindUserFormInput = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <input className={EVS.FindFormInput} {...input} {...props}/>\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const CreateField = (placeholder,name,validators,component,props ={},text =\"\") =>{\r\n  return  <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators}\r\n        component={component} {...props}/> {text}\r\n\r\n    </div>\r\n}","export const required = (value) =>{\r\n\r\nif(value ){\r\n    return undefined\r\n}\r\nelse return \"This field is required\"\r\n}\r\n\r\n\r\nexport const MaxLengthCreator = (MaxLengthValue) =>{\r\n    return(value =0 )=>{\r\nif(value.length > MaxLengthValue) {\r\n    return `Maximal length is a ${MaxLengthValue} symbols`\r\n}\r\nelse return undefined\r\n    }\r\n}\r\n\r\n\r\n","import React from \"react\"\r\nimport {\r\n    Input,\r\n    CreateField,\r\n    TextAreaAboutMe,\r\n    ContactFormInput,InputName\r\n} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport pc from './UserInfo.module.css'\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nconst max300=MaxLengthCreator(300)\r\n\r\nconst ProfileDataEditorForm = (props) => {\r\n\r\n    return <div className={pc.EditorFormBG}>\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <button className={pc.buttonSaveChanges}>\r\n                Save changes\r\n            </button>\r\n            <button className={pc.buttonGoBack } onClick={props.ContactsEditingOFF}>\r\n                go back\r\n            </button>\r\n\r\n            <div className={pc.MyName}>\r\n                <b>My name is : </b>\r\n                {CreateField(\"Enter your full name\", \"fullName\", [required], InputName)}\r\n\r\n            </div>\r\n\r\n            <div>\r\n                <b>are u looking for a job? :</b>\r\n                {CreateField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills:</b>\r\n                {CreateField(\"Enter description\", \"lookingForAJobDescription\", [],\r\n                    TextAreaAboutMe)}\r\n            </div>\r\n            <div>\r\n                <b> about me:</b>\r\n                {CreateField(\"print something about you\", \"aboutMe\", [max300],\r\n                    TextAreaAboutMe)}\r\n            </div>\r\n\r\n            <div className={pc.MyContacts}>My contacts :</div>\r\n            {props.error\r\n                ?\r\n                <div className={pc.FormError}>\r\n                    {props.error}\r\n                </div>\r\n                : null}\r\n            <div className={pc.ContactsForm}>\r\n                {Object.keys(props.contacts).map(key => {\r\n                    return <div key={key}>\r\n                        {key} : {CreateField(key, \"contacts.\" + key, [], ContactFormInput)}\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n\r\n\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default ProfileDataEditorForm","import React, {useState} from \"react\"\r\nimport pds from \"./ProfileData.module.css\";\r\nimport lm from \"../../Login/login.module.css\";\r\nimport {CreateField, TextAreaMessage} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport d from \"../../Dialogs/Dialogs.module.css\";\r\nimport pc from \"./UserInfo.module.css\";\r\n\r\nlet maxLength300 = MaxLengthCreator(300)\r\n\r\nconst SendMessageOnUserPageForm = (props) => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    {CreateField(\"Enter message text\", \"MessageFromUserPage\",\r\n                        [required, maxLength300], TextAreaMessage)}\r\n                </div>\r\n\r\n                {props.error\r\n                    ?\r\n                    <div className={lm.AuthError}>\r\n                        {props.error}\r\n                    </div>\r\n                    : null\r\n                }\r\n                <div>\r\n                    <button className={pc.buttonSaveChanges}> send message</button>\r\n                    <button className={pc.buttonGoBack }\r\n                            onClick={props.MessageSendingModOFF}> go back </button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>)\r\n}\r\nconst ReduxSendMessageOnUserPageForm = reduxForm({form: 'SendMessageForm'})(SendMessageOnUserPageForm)\r\n\r\nconst SendMessageOnUserPage = (props) => {\r\n\r\n    let [ChosedSendMessage, SetChosedSendMessage] = useState(false)\r\n\r\n\r\n    const MessageSendingModON = () => {\r\n        SetChosedSendMessage(true)\r\n    }\r\n\r\n    const MessageSendingModOFF = () => {\r\n        SetChosedSendMessage(false)\r\n    }\r\n\r\n    const SendNewMessage = (Formdata) => {\r\n        props.SendNewMessageThunk(props.UserID, Formdata.MessageFromUserPage)\r\n        SetChosedSendMessage(false)\r\n    }\r\n\r\n\r\n    return (<div>\r\n\r\n\r\n            {!props.IsMyPage ?\r\n                <div>\r\n                    {!ChosedSendMessage ?\r\n                        <div>\r\n                            <button className={pds.buttonEditInformation} onClick={MessageSendingModON}>\r\n                                send message to {props.UserName}\r\n                            </button>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            < ReduxSendMessageOnUserPageForm\r\n                                onSubmit={SendNewMessage}\r\n                                MessageSendingModOFF={MessageSendingModOFF}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                : \"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SendMessageOnUserPage","import React, {useState} from \"react\"\r\nimport pc from './UserInfo.module.css'\r\nimport Preloader from \"../../assetss/common/Loader/Loader\";\r\nimport ProfileStatusF from \"./ProfileStatusF\";\r\nimport ProfileData from \"./ProfileData\"\r\nimport ProfileAvatar from \"./ProfileAvatar\";\r\nimport ProfileDataEditorForm from \"./ProfileDataEditorForm\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport SendMessageOnUserPage from \"./SendMessageOnUserPage\";\r\n\r\n\r\nconst UserInfo = (props) => {\r\n\r\n    let [ContactsIsEditing, SetContactsIsEditing] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    const ContactsEditingOn = () => {\r\n        SetContactsIsEditing(true)\r\n    }\r\n\r\n    const ContactsEditingOFF = () => {\r\n        SetContactsIsEditing(false)\r\n    }\r\n\r\n    const PutNewProfileInfoToServer = (formData) => {\r\n\r\n      props.SaveProfileData(formData).then(()=>{\r\n          SetContactsIsEditing(false)\r\n      })\r\n    }\r\n\r\n    return <div className={pc.userdescrition}>\r\n        <div className={pc.ProfileName}>\r\n            {props.profile.fullName != null ? props.profile.fullName : null}\r\n        </div>\r\n\r\n        <ProfileAvatar IsMyPage={props.IsMyPage}\r\n                       photos={props.profile.photos}/>\r\n\r\n\r\n        <ProfileStatusF status={props.status}\r\n                        SetProfileStatus={props.SetProfileStatus}\r\n                        IsMyPage={props.IsMyPage}/>\r\n        {props.IsLogined &&\r\n            <SendMessageOnUserPage UserName={props.profile.fullName}\r\n                                   IsMyPage={props.IsMyPage}\r\n                                   UserID={props.profile.userId}\r\n                                   SendNewMessageThunk={props.SendNewMessageThunk}\r\n            />\r\n        }\r\n\r\n\r\n        {\r\n            ContactsIsEditing ?\r\n            <div>\r\n                <ProfileDataEditorFormRedux initialValues={props.profile}\r\n                                            contacts={props.profile.contacts}\r\n                                            onSubmit={PutNewProfileInfoToServer}\r\n                       ContactsEditingOFF={ContactsEditingOFF}/>\r\n            </div>\r\n            : <div>\r\n                <ProfileData profile={props.profile}\r\n                             IsMyPage={props.IsMyPage}\r\n                             ContactsEditingOn={ContactsEditingOn}/>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\nconst ProfileDataEditorFormRedux = reduxForm({form: 'ProfileDataEditorForm'})(ProfileDataEditorForm)\r\nexport default UserInfo;","import React from 'react';\r\nimport pc from './Post.module.css'\r\nimport UserPhoto from \"../../../assetss/images/userPhoto.jpg\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={pc.item}>\r\n            <img className={pc.img} src={(props.profile.photos.large && props.profile.photos.small) == null ? UserPhoto : props.profile.photos.large}/>\r\n            {props.message}\r\n            <div>\r\n                {props.likecount} <span>\r\n                    <img className={pc.like} src='https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/Ei-like.svg/1024px-Ei-like.svg.png'/>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Post;","import React from 'react';\r\nimport pc from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, MaxLengthCreator} from \"../../utils/validators\";\r\nimport {TextArea} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\"\r\n\r\n\r\nconst maxValue250 = MaxLengthCreator(250)\r\n    const MyPostForm = (props) => {\r\n\r\n        return <div>\r\n            {props.IsMyPage &&\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field name={'postArea'}\r\n                           placeholder={\"type any info here\"}\r\n                           component={TextArea}\r\n                           validate={[required, maxValue250]}/>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                    <button className={pc.button}> Send post</button>\r\n                </div>\r\n\r\n            </form>\r\n            }\r\n        </div>\r\n    }\r\n\r\nconst ReduxMyPostForm = reduxForm({form: 'mypost'})(MyPostForm )\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    const SendPost = (formDatas) => {\r\n        props.addpost(formDatas.postArea)\r\n\r\n    }\r\n\r\n    let Posts = props.posts.map(p => <Post message={p.Post} likecount={p.likesCount} profile={props.profile}/>);\r\n\r\n    return (\r\n        <div className={pc.pp}>\r\n            {props.IsMyPage ?  <h3>My posts</h3> :  <h3>Posts</h3>}\r\n            {<ReduxMyPostForm onSubmit={SendPost} {...props}/>}\r\n            <div className={pc.marginPost}>\r\n                {Posts}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nexport default MyPosts","import React from 'react';\r\nimport {addpost} from \"../../../data/ProfileReduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {GetIsMyPageSelector, GetPostsSelector} from \"../../../data/ProfileSelectors\";\r\n\r\n\r\nclass MyPostsConteiner extends React.PureComponent {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <MyPosts posts={this.props.posts}\r\n                     addpost={this.props.addpost}\r\n                     profile={this.props.profile}\r\n                     IsMyPage={this.props.IsMyPage}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet StateProps = (state) => ({\r\n    posts: GetPostsSelector(state),\r\n    IsMyPage: GetIsMyPageSelector(state)\r\n})\r\n\r\nexport default connect(StateProps, {addpost})(MyPostsConteiner)\r\n","import React from 'react';\r\nimport UserInfo from \"./UserInfo/UserInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsConteiner\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div>\r\n        <UserInfo profile={props.profile}\r\n                  status={props.status}\r\n                  SetProfileStatus={props.SetProfileStatus}\r\n                  IsMyPage={props.IsMyPage}\r\n                  SetProfilePhoto={props.SetProfilePhoto}\r\n                  SaveProfileData={props.SaveProfileData}\r\n                  SendNewMessageThunk={props.SendNewMessageThunk}\r\n                  IsLogined={props.IsLogined}\r\n                  />\r\n        <MyPostsContainer  profile={props.profile} />\r\n    </div>\r\n\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport { withRouter} from 'react-router-dom'\r\nimport {GetProfileThunk,\r\n    GetProfileStatusThunk,\r\n    SetProfileStatusThunk,\r\n    SetProfilePhotoThunk,\r\n    SetIsMyPage,UpdateProfileInfoThunk}\r\n    from '../../data/ProfileReduser'\r\nimport {compose} from \"redux\";\r\nimport { GetIsMyPageSelector,\r\n    GetProfileSelector, GetStatusSelector} from \"../../data/ProfileSelectors\";\r\nimport {GetIsLoginedSelector, GetUserIDSelector} from \"../../data/AuthSelectors\";\r\nimport {SendNewMessageThunk} from \"../../data/DIalogsReduser\"\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    ProfileDataToPaint(){\r\n        let ProfileID = this.props.match.params.userID\r\n        if(!ProfileID){\r\n            ProfileID = this.props.userID\r\n            this.props.SetIsMyPage(true) //  if this branch is going so we are in own page\r\n            if(!ProfileID){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        else{\r\n            this.props.SetIsMyPage(false) // if this branch is going so we are in some user page\r\n        }\r\n        this.props.GetProfileThunk(ProfileID)\r\n        this.props.GetProfileStatusThunk(ProfileID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.ProfileDataToPaint()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props.match.params.userID !== prevProps.match.params.userID ){\r\n            this.ProfileDataToPaint()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile  profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     SetProfileStatus={this.props.SetProfileStatusThunk}\r\n                      SetProfilePhoto={this.props.SetProfilePhotoThunk}\r\n                      IsMyPage={this.props.IsMyPage}\r\n                      SaveProfileData={this.props.UpdateProfileInfoThunk}\r\n                      SendNewMessageThunk={this.props.SendNewMessageThunk}\r\n                      IsLogined={this.props.IsLogined}\r\n                        />\r\n        )\r\n    }\r\n}\r\n\r\nlet MapStateToProps = (state) => ({\r\n    profile: GetProfileSelector(state),\r\n    status : GetStatusSelector(state),\r\n    userID : GetUserIDSelector(state),\r\n    IsMyPage : GetIsMyPageSelector(state),\r\n    IsLogined : GetIsLoginedSelector(state)})\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {GetProfileThunk,GetProfileStatusThunk,\r\n        SetProfileStatusThunk,SetProfilePhotoThunk,SetIsMyPage,\r\n        UpdateProfileInfoThunk,SendNewMessageThunk}),\r\n    withRouter)(ProfileContainer)","import React from \"react\"\r\nimport ms from \"./Messages.module.css\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport CloseButton from \"../../assetss/images/closeButton.png\"\r\n\r\n\r\nconst DeleteConfirmWindow = (props) => {\r\n    const closeWindow = () => {\r\n        props.SetToConfirmDeleting(false)\r\n    }\r\n\r\n    return <div>\r\n\r\n        <Dialog\r\n            className={ms.confirmDeletingWindow} open={props.ToConfirmDeleting}>\r\n\r\n            <div className={ms.wrapper}>\r\n                <img onClick={closeWindow} className={ms.imgClose} src={CloseButton}/>\r\n                <h3 className={ms.confirmDeletingWindowHeader}>\r\n                    Delete messages confirm\r\n                </h3>\r\n                <div className={ms.confirmDeletingWindowText}>\r\n                    Are you sure about this? you will can't restored this message.\r\n                    You will delete message only for your own\r\n                </div>\r\n                <div className={ms.confirmDeletingWindowButtons}>\r\n                    <button className={ms.deleteMessageStyle} onClick={props.deleteMessage}>\r\n                        yes\r\n                    </button>\r\n                    <span className={ms.buttontsDelta}>\r\n                       <button className={ms.deleteMessageStyle} onClick={closeWindow}>\r\n                           no\r\n                       </button>\r\n                </span>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </Dialog>\r\n\r\n    </div>\r\n\r\n}\r\nexport default DeleteConfirmWindow","import React,{useState} from \"react\"\r\nimport d from \"../Dialogs.module.css\";\r\nimport DeleteConfirmWindow from \"./DeleteConfirmWindow\";\r\nimport ToTrash from \"../../assetss/images/trash.png\"\r\n\r\nconst DeleteMessage = (props) =>{\r\nlet [ToConfirmDeleting,SetToConfirmDeleting]=useState(false)\r\nlet [MessageToRestore,SetMessageToRestore]=useState(false)\r\n\r\nconst deleteMessage = () =>{\r\n    props.DeleteMessageThunk(props.MessageID,props.DialoguserID)\r\n    SetMessageToRestore(true)\r\n    SetToConfirmDeleting(false)\r\n}\r\n\r\n\r\n\r\n    return <div className={d.ConfirmText}>\r\n        {!ToConfirmDeleting && !MessageToRestore ?\r\n            <img src={ToTrash} className={d.ToTrash} onClick={()=>{\r\n                SetToConfirmDeleting(true)}\r\n            }/>\r\n\r\n            :null\r\n        }\r\n\r\n        {MessageToRestore &&\r\n            <button className={d.deleteMessageStyle} onClick={()=>{\r\n                SetMessageToRestore(false)\r\n                SetToConfirmDeleting(false)\r\n            }}>\r\n                restore message\r\n            </button>\r\n        }\r\n\r\n\r\n            <DeleteConfirmWindow\r\n                SetToConfirmDeleting={SetToConfirmDeleting}\r\n                ToConfirmDeleting={ToConfirmDeleting}\r\n                deleteMessage={deleteMessage}\r\n\r\n            />\r\n\r\n        </div>\r\n\r\n}\r\n\r\nexport default DeleteMessage","import React, {useEffect,useState} from \"react\"\r\nimport Preloader from \"../../assetss/common/Loader/Loader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport mwuStyles from \"./Messages.module.css\"\r\nimport UserPhoto from \"../../assetss/images/userPhoto.jpg\";\r\nimport Viewed from \"../../assetss/images/viewed1.jpg\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport d from \"../Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextAreaDialogsMessage} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport Paginator from \"../../assetss/common/Paginator/Paginator\";\r\nimport DeleteMessage from \"./DeleteMessage\";\r\n\r\n\r\nconst maxValue300 = MaxLengthCreator(300)\r\n\r\nconst MessageWithUserForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div >\r\n\r\n                <div className={d.messages}>\r\n                    <div>\r\n                        <div>\r\n                            <Field name={\"MessageTextArea\"}\r\n                                   component={TextAreaDialogsMessage}\r\n                                   placeholder={\"Enter your message here\"}\r\n                                   validate={[required, maxValue300]}/>\r\n                        </div>\r\n                        <div>\r\n                            <button className={d.button}> send message</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxMessageWithUserForm = reduxForm({form: 'messages'})(MessageWithUserForm)\r\n\r\n\r\nconst MessagesWithUser = (props) => {\r\n\r\n    const SendNewMessage = (Formdata) => {\r\n        props.SendNewMessageThunk(props.DialoguserID, Formdata.MessageTextArea)\r\n    }\r\n\r\n    let [MessagesData, SetMessagesData] = useState(props.MessagesData)\r\n\r\n    useEffect(() => {\r\n        SetMessagesData(props.MessagesData)\r\n        }, [props.MessagesData]\r\n    )\r\n\r\n    return <div>\r\n        {MessagesData.DialogsMessages  ?\r\n            MessagesData.DialogsMessages.items.map(item => {\r\n                return (\r\n                    <div  className={mwuStyles.fontStyles} key={item.id} >\r\n                        <div className={mwuStyles.dateStyle}>\r\n                            Sended at : &nbsp;&nbsp;\r\n                            {item.addedAt.split(\"T\")[0]}\r\n                        </div>\r\n\r\n                        <div className={mwuStyles.MessageFormStyle}>\r\n                            <div>\r\n\r\n                                {item.senderName}  &nbsp;&nbsp;\r\n                                {item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[0]}:\r\n                                {item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[1]}\r\n                            </div>\r\n\r\n\r\n\r\n                            <NavLink to={`/Profile/${item.senderId}`}>\r\n                                {item.senderId !== props.MyID ?\r\n                                    <img className={mwuStyles.img}\r\n                                         src={props.MessagesData.InterlocutorAvatar != null\r\n                                             ? props.MessagesData.InterlocutorAvatar\r\n                                             : UserPhoto}/>\r\n                                    :\r\n                                    <img className={mwuStyles.img}\r\n                                         src={props.MessagesData.UserAvatar!= null ?\r\n                                             props.MessagesData.UserAvatar\r\n                                             : UserPhoto}/>\r\n                                }\r\n                            </NavLink>\r\n\r\n                            <div className={mwuStyles.messageText}>\r\n                                &nbsp;&nbsp;  {item.body}\r\n                            </div>\r\n                            <DeleteMessage DialoguserID={props.DialoguserID}\r\n                                           MessageID={item.id}\r\n                                           DeleteMessageThunk={props.DeleteMessageThunk}\r\n                            />\r\n                            <div>\r\n                                {item.viewed &&\r\n                                <img src={Viewed} className={mwuStyles.viewed}/>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n\r\n            : <Preloader/>\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        {props.MessagesData.DialogsMessages ?\r\n            <>\r\n                <ReduxMessageWithUserForm onSubmit={SendNewMessage} {...props} />\r\n            {/*<Paginator OnChangedPage={props.OnChangedPage}\r\n                       currentPage={props.currentPage}\r\n                       totalUsersCount={props.MessagesData.DialogsMessages.totalCount}\r\n                       pageSize={props.pageSize}\r\n                       PortionSize={props.PortionSize}\r\n            />*/}\r\n            </>\r\n            : <Preloader/>\r\n        }\r\n    </div>\r\n\r\n}\r\nexport default MessagesWithUser","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport {\r\n    GetMessagesDataSelector,\r\n} from \"../../../data/DialogsSelectors\";\r\nimport MessagesWithUser from \"./MessagesWithUser\";\r\nimport {AuthRedirect} from \"../../hocs/AuthRedirect\";\r\nimport {\r\n    SendNewMessageThunk, GetNewMessagesThunk,\r\n    GetInterlocutorAvatarThunk, setUserAvatarForDialogs,GetProfileAvatarThunk,DeleteMessageThunk\r\n} from \"../../../data/DIalogsReduser\"\r\nimport {GetUserIDSelector} from \"../../../data/AuthSelectors\";\r\n\r\nclass MessagesContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const DialoguserID = this.props.match.params.userID\r\n        this.props.GetNewMessagesThunk(DialoguserID)\r\n        this.props.GetInterlocutorAvatarThunk(DialoguserID)\r\n        this.props.GetProfileAvatarThunk(this.props.MyID)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <MessagesWithUser {...this.props} DialoguserID={this.props.match.params.userID}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => ({\r\n    MessagesData: GetMessagesDataSelector(state),\r\n    MyID: GetUserIDSelector(state)\r\n})\r\n\r\nexport default compose(connect(StateToProps,\r\n    {\r\n        GetNewMessagesThunk, SendNewMessageThunk,\r\n        GetInterlocutorAvatarThunk, setUserAvatarForDialogs, GetProfileAvatarThunk,DeleteMessageThunk\r\n    }),\r\n    AuthRedirect,\r\n    withRouter)(MessagesContainer)","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {LoginThunk} from \"../../data/AuthReducer\"\r\nimport {required, MaxLengthCreator} from \"../utils/validators\"\r\nimport {CreateField, Input, InputName} from \"../assetss/common/ValidatorsComponents/ElementsValidators\"\r\nimport lm from \"../Login/login.module.css\"\r\nimport LoginUserPhoto from \"../assetss/images/userLog.jpg\"\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst maxLength50 = MaxLengthCreator(50)\r\n\r\nconst MapStateToProps = (state) => ({\r\n    IsLogined: state.Auth.IsLogined,\r\n    CaptchaUrl: state.Auth.CaptchaUrl\r\n})\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={lm.login}>\r\n            <form onSubmit={props.handleSubmit}>\r\n\r\n                <div>\r\n                    <img src={LoginUserPhoto} className={lm.imgUser}/>\r\n                    {CreateField(\"Enter the email\", \"email\", [required, maxLength50], Input)}\r\n                </div>\r\n\r\n                <div>\r\n                    {CreateField(\"Enter the password\", \"password\", [required, maxLength50],\r\n                        Input, {type: \"password\"})}\r\n                </div>\r\n\r\n                <div className={lm.rememberMe}>\r\n                    {CreateField(\"\", \"rememberMe\", [], \"input\", {type: \"checkbox\"},\r\n                        \"remember me\")}\r\n                </div>\r\n\r\n                {props.CaptchaUrl &&\r\n                <div>\r\n                    <img src={props.CaptchaUrl}/>\r\n                    {CreateField(\"Enter captcha symbols\", \"captcha\", [required],\r\n                        InputName)}\r\n                </div>\r\n                }\r\n                {props.error\r\n                    ?\r\n                    <div className={lm.AuthError}>\r\n                        {props.error}\r\n                    </div>\r\n                    : null}\r\n                <div>\r\n                    <button className={lm.button}> Enter</button>\r\n                </div>\r\n            </form>\r\n        </div>)\r\n}\r\nconst ReduxLoginForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nlet Login = (props) => {\r\n    const PostUserDataToServer = (formDatas) => {\r\n        props.LoginThunk(formDatas.email, formDatas.password, formDatas.rememberMe)\r\n        //here is all datas of forms, we can do here use some thunk for a make request on server\r\n    }\r\n\r\n    if (props.IsLogined) {\r\n        return <Redirect to={\"/Profile\"}/>\r\n    }\r\n    return (<div>\r\n\r\n        <ReduxLoginForm onSubmit={PostUserDataToServer}\r\n                        CaptchaUrl={props.CaptchaUrl}/>\r\n    </div>)\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {LoginThunk}),\r\n)(Login)","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Login from \"../../Login/Login\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst LoginModalWindow = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\n\r\nexport default function CustomizedDialogs() {\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button  variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\r\n                authorise\r\n            </Button>\r\n            <Dialog   onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                    Authentication windows\r\n                </DialogTitle>\r\n                <LoginModalWindow dividers>\r\n                <Login/>\r\n                </LoginModalWindow>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from \"react\"\r\nimport LoginModalWindow from \"../MaterialUI/ModalWindow/LoginModal\"\r\nimport lm from \"../Login/login.module.css\"\r\n\r\n\r\nconst LoginPage = (props) => {\r\n    return <div className={lm.LoginPageAlarm}>\r\n        <h1>\r\n            you need authorization for watching this\r\n        </h1>\r\n        <div className={lm.AuthButton}>\r\n            <LoginModalWindow/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default LoginPage","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListIcon from '@material-ui/icons/ListAlt';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function InputWithIcon(props) {\r\n    const classes = useStyles();\r\n    return (\r\n            <div className={classes.margin}>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                    <Grid item>\r\n                        <ListIcon />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField onChange={props.OnTextFieldCreateNewToDoListChanging}\r\n                                   id=\"input-with-icon-grid\"\r\n                                   placeholder={\"Enter new list name\"} />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    );\r\n}","import React,{useState} from \"react\"\r\nimport InputWithIcon from \"./TextFieldToDoLists\";\r\nimport TDlistS from \"./CreateNewToDoList.module.css\"\r\n\r\n\r\nconst CreateNewToDoList = (props) =>{\r\n    let[CreateNewToDoListMode,SetCreateNewToDoListMode] = useState(false);\r\n    let[CurrentValueOfCreateNewToDoListInput,SetCurrentValueOfCreateNewToDoListInput] = useState(\"\");\r\n\r\n    const OnTextFieldCreateNewToDoListChanging = (el) =>{\r\n     SetCurrentValueOfCreateNewToDoListInput(el.currentTarget.value)\r\n    }\r\n\r\n    const CreateToDoListON = () =>{\r\n        SetCreateNewToDoListMode(true)\r\n    };\r\n    const CreateToDoListOFF = () =>{\r\n        SetCreateNewToDoListMode(false)\r\n    }\r\n\r\n    const AddNewToDoList = () => {\r\n        if (CurrentValueOfCreateNewToDoListInput.length > 0 && CurrentValueOfCreateNewToDoListInput.length < 100) {\r\n            props.AddNewToDoListsThunk(CurrentValueOfCreateNewToDoListInput)\r\n            SetCreateNewToDoListMode(false)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return <div>\r\n        {!CreateNewToDoListMode &&\r\n            <div   className={TDlistS.CreateAndGoBackButtons}>\r\n                <button className={TDlistS.AddNewListButton} onClick={CreateToDoListON}>\r\n                    ADD NEW LIST\r\n                </button>\r\n            </div>\r\n\r\n        }\r\n\r\n        { CreateNewToDoListMode &&\r\n            <>\r\n                <div className={TDlistS.CreateAndGoBackButtons}>\r\n                    <button className={TDlistS.GoBacktButton} onClick={CreateToDoListOFF}>\r\n                       GO BACK\r\n                    </button>\r\n                </div>\r\n                <div className={TDlistS.AddNewListWrapper} >\r\n                    <InputWithIcon OnTextFieldCreateNewToDoListChanging={OnTextFieldCreateNewToDoListChanging} />\r\n                    <button onClick={AddNewToDoList} className={TDlistS.Addbutton} > add </button>\r\n                </div>\r\n        </>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default CreateNewToDoList","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst DeleteToDoListButton =(props) =>{\r\n    const classes = useStyles();\r\n\r\n    const DeleteList = () =>{\r\n        props.Del(props.ListID)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                onClick={DeleteList}\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<DeleteIcon />}\r\n            >\r\n                Delete\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default DeleteToDoListButton","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\n const EditButton =(props)=> {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Fab size={props.ButtonSize} color=\"secondary\" aria-label=\"edit\" >\r\n                <EditIcon onClick={props.HandleOnEdit} />\r\n            </Fab>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default EditButton","import React, {useState} from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListMenuIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteToDoListButton from \"./DeleteToDoList\";\r\nimport EditButton from \"./EditButton\";\r\nimport TDLS from \"./ToDoLists.module.css\"\r\n\r\nconst ToDoListMenuIcon = (props) => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n\r\n    const handleProfileMenuOpen = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    const menuId = 'todo_list_menu_id';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <div className={TDLS.EditButtonPostition}>\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <EditButton HandleOnEdit={props.EditTitleModeON}\r\n                            ButtonSize={\"small\"}/>\r\n            </MenuItem>\r\n            </div>\r\n            <MenuItem >\r\n                <DeleteToDoListButton ListID={props.ListID} Del={props.Del} />\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return <div>\r\n        <IconButton\r\n            edge=\"end\"\r\n            size=\"medium\"\r\n            aria-label=\"ToDo list menu\"\r\n            aria-controls={menuId}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleProfileMenuOpen}\r\n            color=\"primary\"\r\n        >\r\n            <ListMenuIcon />\r\n        </IconButton>\r\n        {renderMenu}\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default ToDoListMenuIcon;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst  SaveButton = (props)=> {\r\n    const classes = useStyles();\r\n\r\nconst SaveNewToDoListTitle = ()=>{\r\n    if(props.CurrentToDoListTitle.length !== 0 && props.CurrentToDoListTitle.length < 100 ) {\r\n        props.ChangeToDoListTitleThunk(props.ListID, props.CurrentToDoListTitle)\r\n        props.EditTitleModeOFF()\r\n    }\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={SaveNewToDoListTitle}\r\n                size=\"small\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n            >\r\n                Save\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default SaveButton","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GoBackIcon from '@material-ui/icons/ArrowBack';\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst GoBackButton = (props)=> {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={props.HandleOnClick}\r\n                size=\"small\"\r\n                className={classes.button}\r\n                startIcon={<GoBackIcon  />}\r\n            >\r\n                Back\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default GoBackButton","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nconst TitleChangingField = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <div>\r\n                <TextField\r\n                    onChange={props.OnToDoListTitleChanging}\r\n                    id=\"ToDoListChangingField\"\r\n                    value={props.CurrentToDoListTitle}\r\n                    className={classes.textField}\r\n                    helperText=\"maximum 100 symbols\"\r\n                    margin=\"normal\"\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\nexport default TitleChangingField","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst  AddNewTaskButton = (props)=> {\r\n    const classes = useStyles();\r\n\r\n    const AddNewTask = ()=>{\r\n        if(props.AddNewTaskFieldCurrentValue.length >0 && props.AddNewTaskFieldCurrentValue.length <100) {\r\n            props.AddNewTaskThunk(props.ListID, props.AddNewTaskFieldCurrentValue)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={AddNewTask}\r\n                size=\"small\"\r\n                className={classes.button}\r\n            >\r\n                add task\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default AddNewTaskButton","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 600,\r\n    },\r\n}));\r\n\r\nconst AddTaskField = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <div>\r\n                <TextField\r\n                    onChange={props.OnAddNewTaskFieldChange}\r\n                    id=\"AddTaskFieldID\"\r\n                    className={classes.textField}\r\n                    placeholder=\"Enter new task title\"\r\n                    helperText=\"maximum 100 symbols\"\r\n                    margin=\"normal\"\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\nexport default AddTaskField","import React,{useState} from \"react\"\r\nimport TDLS from \"../ToDoLists.module.css\";\r\nimport AddNewTaskButton from \"./AddNewTaskButton\";\r\nimport AddTaskField from \"./AddNewTaskField\";\r\n\r\n\r\nconst AddNewTask = (props) => {\r\n    let [AddNewTaskFieldCurrentValue,SetAddNewTaskFieldCurrentValue] = useState(\"\")\r\n\r\n    const OnAddNewTaskFieldChange = (el)=>{\r\n        SetAddNewTaskFieldCurrentValue(el.currentTarget.value)\r\n    }\r\n   return  <div className={TDLS.AddNewTaskWrapper}>\r\n            <div >\r\n                <AddTaskField OnAddNewTaskFieldChange={OnAddNewTaskFieldChange}/>\r\n            </div>\r\n\r\n            <div className={TDLS.AddTaskButton}>\r\n                <AddNewTaskButton ListID={props.ListID}\r\n                                  AddNewTaskThunk={props.AddNewTaskThunk}\r\n                                  AddNewTaskFieldCurrentValue={AddNewTaskFieldCurrentValue}\r\n                />\r\n            </div>\r\n\r\n    </div>\r\n}\r\nexport default AddNewTask","import React from 'react';\r\nimport ShowIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport Fab from \"@material-ui/core/Fab\";\r\n\r\n\r\n\r\nconst  ShowTasksButton = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Fab disabled={props.ButtonIsDesabled} onClick={props.HandleOnClick}  size=\"small\" color=\"primary\" aria-label=\"edit\" >\r\n                <ShowIcon/>\r\n            </Fab>\r\n        </div>\r\n    );\r\n}\r\nexport default ShowTasksButton","import React from 'react';\r\nimport HideIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Fab from \"@material-ui/core/Fab\";\r\n\r\n\r\n\r\nconst  HideTasksButton = (props)=> {\r\n    return (\r\n        <div>\r\n            <Fab onClick={props.HandleOnClick} size=\"small\" color=\"primary\" aria-label=\"edit\" >\r\n                <HideIcon  />\r\n            </Fab>\r\n        </div>\r\n    );\r\n}\r\nexport default HideTasksButton","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst DeleteButton = (props)=> {\r\n\r\n    const DeleteTask = ()=>{\r\n        props.DeleteTaskThunk(props.ListID,props.TaskID)\r\n        debugger\r\n    }\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"text\"\r\n                color=\"inherit\"\r\n                onClick={DeleteTask}\r\n                size=\"large\"\r\n                startIcon={<DeleteIcon />}\r\n            >\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default DeleteButton","import React from 'react';\r\nimport Done from '@material-ui/icons/Done';\r\n\r\nconst TaskDoneIcon = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n            <Done color=\"secondary\"  />\r\n        </div>\r\n    );\r\n}\r\nexport default TaskDoneIcon","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport EditButton from '@material-ui/icons/Edit';\r\n\r\nconst EditTaskButton = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                onClick={props.HandleOnClick}\r\n                size=\"large\"\r\n                startIcon={<EditButton />}\r\n            >\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default EditTaskButton","import React from 'react';\r\nimport DetailsIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst TaskShowDetailsIcon = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"text\"\r\n                disabled={props.ShowButtonBlocked}\r\n                color=\"primary\"\r\n                onClick={props.HandleOnClick}\r\n                size=\"large\"\r\n                startIcon={<DetailsIcon />}\r\n            >\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default TaskShowDetailsIcon","import React from 'react';\r\nimport DetailsIconUP from '@material-ui/icons/KeyboardArrowUp';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst TaskHideDetailsIcon = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                onClick={props.HandleOnClick}\r\n                size=\"large\"\r\n                startIcon={<DetailsIconUP />}\r\n            >\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default TaskHideDetailsIcon","import React,{useState} from \"react\"\r\nimport ts from \"./Tasks.module.css\";\r\nimport TaskShowDetailsIcon from \"./TaskShowDetailsIcon\";\r\nimport TaskHideDetailsIcon from \"./TaskHideDetails\";\r\n\r\n\r\n\r\nconst TaskDetails = (props) => {\r\n\r\n    let [ShowDetails, SetShowDetails] = useState(false)\r\n\r\n    const ShowDetailsON = () => {\r\n        SetShowDetails(true)\r\n        props.ShowButtonBlockedON()\r\n    }\r\n\r\n    const ShowDetailsOFF = () => {\r\n        SetShowDetails(false)\r\n        props.ShowButtonBlockedOFF()\r\n    }\r\n    return <div >\r\n\r\n        {ShowDetails ?\r\n            <div>\r\n            <div className={ts.detailsWrapper}>\r\n\r\n                <div className={ts.startDate}>\r\n                    start : 09/11/21\r\n                </div>\r\n\r\n                <div className={ts.deadline}>\r\n                    DeadLine : 12/12/2221\r\n                </div>\r\n            </div>\r\n                <div className={ts.description}>\r\n                    description :\r\n                    <div className={ts.descriptionText}>\r\n                        {props.description}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={ts.DetailsButton}>\r\n                    <TaskHideDetailsIcon HandleOnClick={ShowDetailsOFF} />\r\n                </div>\r\n            </div>\r\n            :\r\n\r\n            <div className={ts.DetailsButton}>\r\n                <TaskShowDetailsIcon ShowButtonBlocked={props.ShowButtonBlocked}\r\n                                     HandleOnClick={ShowDetailsON}/>\r\n            </div>\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default TaskDetails","import React, {useState, useEffect} from \"react\"\r\nimport ts from \"./Tasks.module.css\"\r\nimport classNames from 'classnames';\r\nimport DeleteButton from \"./DeleteTaskButton\";\r\nimport TaskDoneIcon from \"./DoneIcone\";\r\nimport EditTaskButton from \"./EditTaskButton\";\r\nimport TaskDetails from \"./TaskDetails\";\r\n\r\n\r\nconst Tasks = (props) => {\r\n\r\n    let [TasksData, SetTasksData] = useState(props.ToDoListTasks.items)\r\n    let [ShowButtonBlocked, SetShowButtonBlocked] = useState(false)\r\n\r\n    const ShowButtonBlockedON = () => {\r\n        SetShowButtonBlocked(true)\r\n    }\r\n\r\n    const ShowButtonBlockedOFF = () => {\r\n        SetShowButtonBlocked(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n            SetTasksData(props.ToDoListTasks.items)\r\n        }, [props.ToDoListTasks.items]\r\n    )\r\n\r\n    const TaskDonedStyleForIcon = classNames({\r\n        '': true,\r\n        'ss': false\r\n    })\r\n    const TaskDonedStyleForWindow = classNames({})\r\n    //сделать стили, что бы при завершении таски она обводилась зеленым и икнока была обычной, как сейчас,\r\n    // в случае, если не сделана - иконка дизейблед + начать добавлять снекбар\r\n\r\n    return <div>\r\n        {\r\n            /*  props.ToDoListTasks.map(el => el.ListId === props.ListID && el.TaskData.items.map(key =>{\r\n                  return <div key={key.id}>\r\n                      {key.title}\r\n                  </div>\r\n                  })\r\n              )*/\r\n            props.ToDoListTasks.items.map(task => {\r\n                return <div key={task.id} className={ts.Main}>\r\n\r\n                    <div className={classNames(ts.MainWrapper)}>\r\n\r\n                        <div className={ts.TaskEditButton}>\r\n                            <EditTaskButton ButtonSize={\"small\"}/>\r\n                        </div>\r\n\r\n                        <div className={ts.Ramka}>\r\n                            <div className={ts.TaskBodyWrapper}>\r\n                                <div className={ts.iconStatus}>\r\n                                    <TaskDoneIcon/>\r\n                                </div>\r\n\r\n                                <div className={ts.Title}>\r\n                                    {task.title}\r\n                                </div>\r\n\r\n\r\n                                <div className={ts.ToTrashIcon}>\r\n                                    <DeleteButton DeleteTaskThunk={props.DeleteTaskThunk}\r\n                                                  ListID={task.todoListId} TaskID={task.id}/>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div>\r\n                                <TaskDetails\r\n                                    ShowButtonBlocked={ShowButtonBlocked}\r\n                                    ShowButtonBlockedON={ShowButtonBlockedON}\r\n                                    ShowButtonBlockedOFF={ShowButtonBlockedOFF}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            })\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Tasks","import React, {useState, useEffect} from \"react\"\r\nimport TDLS from \"./ToDoLists.module.css\";\r\nimport ToDoListMenuIcon from \"./ListMenu\";\r\nimport SaveButton from \"./SaveButton\";\r\nimport GoBackButton from \"./GoBackButton\";\r\nimport TitleChangingField from \"./TitleChangeField\";\r\nimport AddNewTask from \"./AddNewTask/AddNewTask\";\r\nimport ShowTasksButton from \"./ToDoListTasks/ShowTasksButton\";\r\nimport HideTasksButton from \"./ToDoListTasks/HideTasksButton\";\r\nimport Tasks from \"./ToDoListTasks/Tasks\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\n\r\n\r\nconst ToDoList = (props) => {\r\n    let [EditTitleMode, SetEditTitleMode] = useState(false)\r\n    let [ShowTasksMode, SetShowTasksMode] = useState(false)\r\n\r\n\r\n    let [CurrentToDoListTitle, SetToDoListTitle] = useState(props.title)\r\n\r\n    const EditTitleModeON = () => {\r\n        SetEditTitleMode(true)\r\n    }\r\n    const EditTitleModeOFF = () => {\r\n        SetEditTitleMode(false)\r\n    }\r\n\r\n    const OnToDoListTitleChanging = (el) => {\r\n        SetToDoListTitle(el.currentTarget.value)\r\n    }\r\n\r\n    const ShowTask = () => {\r\n        props.GetToDoListTasksThunk(props.ListID, props.ToDoListTasksCount, props.ToDoListTasksPage)\r\n        SetShowTasksMode(true)\r\n        props.ButtonIsDesabledON()\r\n\r\n\r\n\r\n    }\r\n    const ShowTaskModeOFF = () => {\r\n        SetShowTasksMode(false)\r\n        props.ButtonIsDesabledOFF()\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n            SetToDoListTitle(props.title)\r\n        }, [props.title]\r\n    )\r\n\r\n\r\n    return <div>\r\n        {!EditTitleMode ?\r\n            <div className={TDLS.ToDolistsWrapper}>\r\n\r\n                <ToDoListMenuIcon ListID={props.ListID}\r\n                                  EditTitleModeON={EditTitleModeON}\r\n                                  Del={props.DeleteToDoListThunk}/>\r\n\r\n                <div className={TDLS.ToDoListTitle}>\r\n                    {props.title}\r\n                </div>\r\n            </div>\r\n\r\n            :\r\n            <div className={TDLS.ToDolistsChanchingWrapper}>\r\n                <div>\r\n                    <SaveButton ListID={props.ListID} ChangeToDoListTitleThunk={props.ChangeToDoListTitleThunk}\r\n                                EditTitleModeOFF={EditTitleModeOFF} CurrentToDoListTitle={CurrentToDoListTitle}/>\r\n                    <GoBackButton HandleOnClick={EditTitleModeOFF}/>\r\n                </div>\r\n                <div className={TDLS.ToDoListChangingInput}>\r\n                    <TitleChangingField OnToDoListTitleChanging={OnToDoListTitleChanging}\r\n                                        CurrentToDoListTitle={CurrentToDoListTitle}/>\r\n                </div>\r\n\r\n            </div>\r\n        }\r\n\r\n        {ShowTasksMode ?\r\n\r\n            <div>\r\n\r\n                <AddNewTask ListID={props.ListID} AddNewTaskThunk={props.AddNewTaskThunk}/>\r\n\r\n                <div>\r\n                    {props.ToDoListTasks.items ?\r\n                        <div className={TDLS.tasksposititon}>\r\n                            <Tasks\r\n                                   DeleteTaskThunk={props.DeleteTaskThunk}\r\n                                   ToDoListTasks={props.ToDoListTasks}\r\n                            />\r\n                        </div>\r\n\r\n                        :\r\n                        <Preloader/>\r\n                    }\r\n\r\n\r\n                    <div className={TDLS.HideTasksButton}>\r\n                        <HideTasksButton HandleOnClick={ShowTaskModeOFF}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            :\r\n            <div className={TDLS.ShowTasksButton}>\r\n                <ShowTasksButton ShowTasksMode={ShowTasksMode}\r\n                                 HandleOnClick={ShowTask}\r\n                                 ButtonIsDesabled={props.ButtonIsDesabled}\r\n                />\r\n            </div>\r\n\r\n        }\r\n    </div>\r\n}\r\nexport default ToDoList","import React,{useState} from \"react\"\r\nimport CreateNewToDoList from \"./CreateNewToDoList/CreateNewToDoList\";\r\nimport TDLS from \"./ToDoLists.module.css\"\r\nimport ToDoList from \"./ToDoList\";\r\n\r\n\r\nconst ToDoLists = (props) => {\r\nlet [ButtonIsDesabled,SetButtonIsDesabled] = useState(false)\r\n    const ButtonIsDesabledON=()=>{\r\n        SetButtonIsDesabled(true)\r\n    }\r\n    const ButtonIsDesabledOFF=()=>{\r\n        SetButtonIsDesabled(false)\r\n    }\r\n    return <div>\r\n        <CreateNewToDoList AddNewToDoListsThunk={props.AddNewToDoListsThunk}\r\n                          />\r\n        {props.ToDoLists &&\r\n        props.ToDoLists.map(key => {\r\n            return <div className={TDLS.ToDoListsPosition} key={key.id}>\r\n\r\n                <ToDoList {...props}\r\n                          ListID={key.id}\r\n                          title={key.title}\r\n                          ButtonIsDesabled={ButtonIsDesabled}\r\n                          ButtonIsDesabledON={ButtonIsDesabledON}\r\n                          ButtonIsDesabledOFF={ButtonIsDesabledOFF}\r\n                />\r\n            </div>\r\n        })\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default ToDoLists","export const GetToDoLists = (state) =>{\r\n    return state.ToDoListsData.ToDoLists\r\n}\r\nexport const GetToDoListTasksPage = (state) =>{\r\n    return state.ToDoListsData.ToDoListTasksPage\r\n}\r\nexport const GetToDoListTasksCount = (state) =>{\r\n    return state.ToDoListsData.ToDoListTasksCount\r\n}\r\nexport const GetToDoListTasks = (state) =>{\r\n    return state.ToDoListsData.ToDoListTasks\r\n}\r\nexport const GetToDoListIsFetching = (state) =>{\r\n    return state.ToDoListsData.IsFetching\r\n}","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {AuthRedirect} from \"../hocs/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport ToDoLists from \"./ToDoLists\";\r\nimport {\r\n    GetToDoListIsFetching,\r\n    GetToDoLists,\r\n    GetToDoListTasks,\r\n    GetToDoListTasksCount,\r\n    GetToDoListTasksPage\r\n} from \"../../data/ToDoListsSelectors\";\r\nimport {\r\n    SetToDoListTasksPage, SetToDoListTasksCount, GetToDoListsThunk, AddNewToDoListsThunk,\r\n    DeleteToDoListThunk,ChangeToDoListTitleThunk,\r\n    GetToDoListTasksThunk,AddNewTaskThunk,DeleteTaskThunk\r\n} from \"../../data/ToDoListsReducer\"\r\n\r\nclass ToDoListsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.GetToDoListsThunk();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ToDoLists {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => ({\r\n    ToDoLists: GetToDoLists(state),\r\n    ToDoListTasksPage: GetToDoListTasksPage(state),\r\n    ToDoListTasksCount: GetToDoListTasksCount(state),\r\n    ToDoListTasks : GetToDoListTasks(state),\r\n    IsFetching : GetToDoListIsFetching(state)\r\n})\r\n\r\nexport default compose(connect(StateToProps,\r\n    {\r\n        SetToDoListTasksPage, SetToDoListTasksCount,\r\n        GetToDoListsThunk, AddNewToDoListsThunk,\r\n        DeleteToDoListThunk,ChangeToDoListTitleThunk,\r\n        GetToDoListTasksThunk,AddNewTaskThunk,DeleteTaskThunk\r\n    }),\r\n    AuthRedirect)(ToDoListsContainer)","import React, {Component} from 'react';\nimport './App.css';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {Redirect, Route, withRouter} from \"react-router-dom\";\n/*import News from \"./components/News/News\";*/\n/*import Music from \"./components/Music/Music\";*/\n/*import Settings from \"./components/Settings/Settings\";*/\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileCOntainer\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {InitializationAPPthunk} from \"./data/InitializatonReducer\";\nimport Preloader from \"./components/assetss/common/Loader/Loader\";\n// import {WithSuspense} from \"./components/hocs/WithSuspense\";\nimport MessagesContainer from \"./components/Dialogs/Message/MessagesContainer\";\nimport {GetinitionSelector} from \"./data/InitialozationSelectors\";\nimport {GetNewMessagesCountThunk} from \"./data/DIalogsReduser\";\nimport LoginPage from \"./components/Login/LoginPage\";\nimport ToDoListsContainer from \"./components/ToDoLists/ToDoListsContainer\";\n\n/*const Music = React.lazy(() => import('./components/Music/Music'))*/\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.InitializationAPPthunk()\n        this.props.GetNewMessagesCountThunk()\n    }\n\n    render() {\n\n\n        if (!this.props.inition) {\n            return <Preloader/>\n        }\n        return (\n\n            <div className='wrapper'>\n                <HeaderContainer  />\n\n                <div className=\"app-wrapper-content\">\n\n                    <Route exact path='/'\n                           render={() => <Redirect to={\"Profile/\"}/>}/>\n\n                    <Route path='/dialogs/'\n                           render={() => <DialogsContainer/>}/>\n                    <Route path='/messages/:userID?'\n                           render={() => <MessagesContainer/>}/>\n\n                    <Route path='/Profile/:userID?'\n                           render={() => <ProfileContainer/>}/>\n\n\n                    <Route exact path='/Users' render={() => <UsersContainer/>}/>\n\n                    <Route exact path='/Login' render={() => <LoginPage/>}/>\n\n                    <Route exact path='/ToDoLists' render={() => <ToDoListsContainer/>}/>\n\n             {       /* to the new updates\n                    <Route exact path='/News' render={() => <News/>}/>\n\n                    <Route exact path='/Music' render={WithSuspense(Music)}/>\n\n                    <Route exact path='/Settings' render={() => <Settings/>}/>*/}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst MapStateToProps = (state) => ({inition: GetinitionSelector(state)})\n\nexport default compose(\n    connect(MapStateToProps, {InitializationAPPthunk,GetNewMessagesCountThunk}),\n    withRouter)(App)\n","\nimport React from 'react'\nimport * as serviceWorker from './serviceWorker';\nimport store from './data/redux-store'\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter,HashRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\n/*ussing Hash router couz git can't work correctly with BrowserRouter ,\n           so we need to use anchors\n      /* <HashRouter>*/\n\n/* </HashRouter>,*/\n    ReactDOM.render(\n       <HashRouter basename={process.env.PUBLIC_URL}>\n\n        <Provider store={store}>\n            <App  />\n        </Provider>\n       </HashRouter>,\n        document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/userPhoto.f86bd3d2.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__2XLpg\",\"imgUser\":\"login_imgUser__3RvPz\",\"rememberMe\":\"login_rememberMe__1T4hC\",\"button\":\"login_button__1BAOG\",\"bg\":\"login_bg__3ae0b\",\"bg10\":\"login_bg10__O5xrp\",\"AuthError\":\"login_AuthError__1kfh-\",\"LoginPageAlarm\":\"login_LoginPageAlarm__19tn1\",\"logModalWindow\":\"login_logModalWindow__1r3QB\",\"AuthButton\":\"login_AuthButton__242Z_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UsersWrapper\":\"Users_UsersWrapper__3r0iU\",\"Main\":\"Users_Main__2xXSo\",\"img\":\"Users_img__2oaoF\",\"follow\":\"Users_follow__2uAmx\",\"Names\":\"Users_Names__1_6so\",\"Posts\":\"Users_Posts__3kZD6\",\"Country\":\"Users_Country__3gYtG\",\"City\":\"Users_City__2_dM7\",\"unfollow\":\"Users_unfollow__1O1QN\",\"PaginatorPosition\":\"Users_PaginatorPosition__2Q4mW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FoundedUsersWrapper\":\"FindUser_FoundedUsersWrapper__m1B-E\",\"GoBack\":\"FindUser_GoBack__2YgqT\",\"foundArea\":\"FindUser_foundArea__2UM3r\",\"SearchingResult\":\"FindUser_SearchingResult__1rxlW\",\"FoundedUsers\":\"FindUser_FoundedUsers__Z4_bH\",\"FindUserButton\":\"FindUser_FindUserButton__1BxTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddNewListWrapper\":\"CreateNewToDoList_AddNewListWrapper__3QLwt\",\"Addbutton\":\"CreateNewToDoList_Addbutton__38Fgq\",\"CreateAndGoBackButtons\":\"CreateNewToDoList_CreateAndGoBackButtons__3WyiO\",\"AddNewListButton\":\"CreateNewToDoList_AddNewListButton__15LRB\",\"GoBacktButton\":\"CreateNewToDoList_GoBacktButton__1yyLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ProfileData_contacts__1hcZY\",\"aboutME\":\"ProfileData_aboutME__2RKXo\",\"buttonEditInformation\":\"ProfileData_buttonEditInformation__DJ_Eq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numbers\":\"Paginator_numbers__1V04X\",\"setNumbers\":\"Paginator_setNumbers__L_c7_\",\"button\":\"Paginator_button__24DIp\",\"NumbersFont\":\"Paginator_NumbersFont__2D9CN\"};"],"sourceRoot":""}