{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/ToDoLists/ToDoListTasks/Tasks.module.css","components/Header/Header.module.css","components/assetss/images/loader1.gif","components/assetss/common/Loader/LoaderStyles.module.css","components/Profile/UserInfo/Contact.module.css","components/assetss/images/viewed1.jpg","components/assetss/images/closeButton.png","components/assetss/images/trash.png","components/assetss/images/userLog.jpg","components/assetss/common/ValidatorsComponents/ElementsValidators.module.css","components/Profile/UserInfo/UserInfo.module.css","components/Dialogs/Message/Messages.module.css","components/Dialogs/Dialogs.module.css","components/ToDoLists/ToDoLists.module.css","serviceWorker.js","API/requests.js","data/ProfileReduser.js","data/DIalogsReduser.js","data/UsersReduser.js","data/AuthReducer.js","data/InitializatonReducer.js","data/ToDoListsReducer.js","data/redux-store.js","components/Header/LogOutButton.jsx","components/Header/AcountIcon.jsx","components/Header/MessagesIcon.jsx","components/Header/UsersIcon.jsx","components/Header/ToDoListsIcon.jsx","components/Header/Header.jsx","components/assetss/common/Loader/Loader.js","data/ProfileSelectors.js","data/AuthSelectors.js","data/InitialozationSelectors.js","components/Header/HeaderContainer.jsx","components/Dialogs/DialogInfo.jsx","components/Dialogs/Dialogs.jsx","components/hocs/AuthRedirect.js","data/DialogsSelectors.js","components/Dialogs/DialogsContainer.jsx","components/assetss/common/Paginator/Paginator.js","components/Users/User.jsx","components/MaterialUI/ModalWindow/UserSearchModal.jsx","components/Users/FindUser.jsx","components/Users/Users.jsx","data/Users-Selectors.js","components/Users/UsersContainer.jsx","components/Profile/UserInfo/ProfileStatusF.jsx","components/Profile/UserInfo/Contact.jsx","components/Profile/UserInfo/ProfileData.jsx","components/Profile/UserInfo/ProfileAvatar.jsx","components/assetss/common/ValidatorsComponents/ElementsValidators.js","components/utils/validators.js","components/Profile/UserInfo/ProfileDataEditorForm.jsx","components/Profile/UserInfo/SendMessageOnUserPage.jsx","components/Profile/UserInfo/UserInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsConteiner.jsx","components/Profile/Profile.jsx","components/Profile/ProfileCOntainer.jsx","components/Dialogs/Message/DeleteConfirmWindow.jsx","components/Dialogs/Message/DeleteMessage.jsx","components/Dialogs/Message/MessagesWithUser.jsx","components/Dialogs/Message/MessagesContainer.jsx","components/Login/Login.jsx","components/MaterialUI/ModalWindow/LoginModal.jsx","components/Login/LoginPage.jsx","components/ToDoLists/CreateNewToDoList/TextFieldToDoLists.jsx","components/ToDoLists/CreateNewToDoList/CreateNewToDoList.jsx","components/ToDoLists/DeleteToDoList.jsx","components/ToDoLists/EditButton.jsx","components/ToDoLists/ListMenu.jsx","components/ToDoLists/SaveButton.jsx","components/ToDoLists/GoBackButton.jsx","components/ToDoLists/TitleChangeField.jsx","components/ToDoLists/AddNewTask/AddNewTaskButton.jsx","components/ToDoLists/AddNewTask/AddNewTaskField.jsx","components/ToDoLists/AddNewTask/AddNewTask.jsx","components/ToDoLists/ToDoListTasks/ShowTasksButton.jsx","components/ToDoLists/ToDoListTasks/HideTasksButton.jsx","components/ToDoLists/ToDoListTasks/DeleteTaskButton.jsx","components/ToDoLists/ToDoListTasks/DoneIcone.jsx","components/ToDoLists/ToDoListTasks/EditTaskButton.jsx","components/ToDoLists/ToDoListTasks/TaskShowDetailsIcon.jsx","components/ToDoLists/ToDoListTasks/TaskHideDetails.jsx","components/utils/dateTransform.js","components/ToDoLists/ToDoListTasks/TaskDetails.jsx","components/ToDoLists/ToDoListTasks/NotDoneIcon.jsx","components/ToDoLists/ToDoListTasks/TaskEditForm.jsx","components/ToDoLists/ToDoListTasks/Task.jsx","components/ToDoLists/ToDoListTasks/Tasks.jsx","components/ToDoLists/ToDoList.jsx","components/ToDoLists/ToDoLists.jsx","data/ToDoListsSelectors.js","components/ToDoLists/ToDoListsContainer.jsx","App.js","index.js","components/assetss/images/userPhoto.jpg","components/Login/login.module.css","components/Users/Users.module.css","components/Users/FindUser.module.css","components/ToDoLists/CreateNewToDoList/CreateNewToDoList.module.css","components/Profile/UserInfo/ProfileData.module.css","components/assetss/common/Paginator/Paginator.module.css"],"names":["module","exports","pp","marginPost","button","item","img","like","Main","MainWrapper","TaskBodyWrapper","deadline","description","Ramka","DoneRamka","ToTrashIcon","iconStatus","Title","DetailsButton","detailsWrapper","startDate","descriptionText","TaskEditButton","TaskFormWrapper","TaskEditFromButtons","GoBackButton","MainFormWrapper","CompletedInput","FormDescription","priority","TaskFormSaveButton","CompletedFieldWrapper","cc","header","IconsWrapper","log","MessagesIconStyle","accountIconUserName","loginPosition","loginButton","active","startPosition","LogOutStyle","unloginedHeader","unloginedUsersIcon","__webpack_require__","p","small","medium","large","contact","formControl","error","textarea","input","TextAreaMessage","textareaAboutMe","ContactFormInput","TextAreaDialogsMessage","TaskFormInput","userdescrition","UserPhoto","ProfileName","UserName","FormError","goback","MyContacts","ContactsForm","MyName","buttonSaveChanges","buttonGoBack","EditorFormBG","AddPhotoButtonPosition","MessageFormStyle","dateStyle","messageText","UserNameInMessages","viewed","fontStyles","confirmDeletingWindow","confirmDeletingWindowButtons","buttontsDelta","confirmDeletingWindowHeader","confirmDeletingWindowText","imgClose","deleteMessageStyle","wrapper","DialogUserPhoto","padding","dialogs","dialogsItems","messages","DialogArea","activeLink","ConfirmText","ToTrash","ToDoListsPosition","ToDolistsWrapper","ToDoListTitle","ToDolistsChanchingWrapper","ToDoListChangingInput","EditButtonPostition","AddNewTaskWrapper","AddTaskButton","ShowTasksButton","HideTasksButton","TasksContent","tasksposititon","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","API-KEY","instanceToDoLists","API","getUsers","_getUsers","Object","asyncToGenerator","regenerator_default","a","mark","_callee","currentPage","pageSize","response","_args","arguments","wrap","_context","prev","next","length","undefined","get","concat","sent","abrupt","data","stop","apply","this","AuthMe","_AuthMe","_callee2","_context2","getProfile","_getProfile","_callee3","ProfileID","_args3","_context3","DelSub","_DelSub","_callee4","userId","_context4","delete","_x","AddSub","_AddSub","_callee5","_context5","post","_x2","getProfileStatus","_getProfileStatus","_callee6","_args6","_context6","setProfileStatus","_setProfileStatus","_callee7","status","_context7","put","_x3","Login","_Login","_callee8","email","password","rememberMe","captcha","_context8","_x4","_x5","_x6","_x7","LogOut","_LogOut","_callee9","_context9","LoadPhotoOnServer","_LoadPhotoOnServer","_callee10","photo","formdata","_context10","FormData","append","Content-Type","_x8","PutProfileDataOnServer","_PutProfileDataOnServer","_callee11","profile","_context11","_x9","GetCaptchaFromServer","_GetCaptchaFromServer","_callee12","_context12","GetAllDialogs","_GetAllDialogs","_callee13","_context13","GetNewMessagesFromServer","_GetNewMessagesFromServer","_callee14","_context14","_x10","SendNewMessage","_SendNewMessage","_callee15","NewMessage","_context15","body","_x11","_x12","GetNewMessagesCount","_GetNewMessagesCount","_callee16","_context16","DeleteMessage","_DeleteMessage","_callee17","MessageID","_context17","_x13","FindUser","_FindUser","_callee18","_context18","_x14","GetToDoLists","_GetToDoLists","_callee19","_context19","CreateNewToDoList","_CreateNewToDoList","_callee20","title","_context20","_x15","DeleteToDoList","_DeleteToDoList","_callee21","todolistId","_context21","_x16","ChangeToDoListTitle","_ChangeToDoListTitle","_callee22","_context22","_x17","_x18","GetToDoListTasks","_GetToDoListTasks","_callee23","count","page","_args23","_context23","_x19","CreateNewTakForToDoList","_CreateNewTakForToDoList","_callee24","Tasktitle","DataResponse","_context24","_x20","_x21","ChangeTaskInformation","_ChangeTaskInformation","_callee25","taskid","_context25","_x22","_x23","_x24","DeleteTaskFromToDoList","_DeleteTaskFromToDoList","_callee26","_context26","_x25","_x26","DefaultState","Posts","TextNewPost","IsMyPage","OwnName","IsFetching","SetStatusOfUser","type","SetPhotoOfUser","SetIsFetching","GetProfileThunk","_ref","dispatch","getState","MyID","Auth","MyOwnName","fullName","ProfileReducer","state","action","NewPost","id","Post","newtext","likesCount","objectSpread","toConsumableArray","photos","bool","users","avatars","NewMessageText","AllDialogs","DialogsMessages","InterlocutorAvatar","UserAvatar","NewMessagesCount","SetNewMessages","NewMessagesData","setUserAvatarForDialogs","SetIsFetchingDialogs","GetNewMessagesThunk","UserId","_ref2","SendNewMessageThunk","_ref3","GetNewMessagesCountThunk","_ref6","DialogsReducer","NewAllDialogs","newInterlocutorAvatar","Portion_Size_Changer","Users","totalUsersCount","FindUserIsFetching","InProcess","PortionSize","FoundedUser","OnFollow","userID","onUnFollow","ToggleIsFetching","ToggleFindUserIsFetching","ToggleInProcess","InProgress","UserID","UsersReducer","map","us","followed","filter","PortionSizeChangingValue","NewFoundedUser","login","IsLogined","CaptchaUrl","SetAuthUser","AuthMeThunk","_data$data","resultCode","GetCaptchaThunk","_ref4","captchaURL","url","CaptchaURLFromServer","AuthReducer","inition","InitializateReducer","ToDoLists","ToDoListTasks","ToDoListTasksPage","ToDoListTasksCount","TaskIsFetching","SetTaskIsFetching","GetToDoListsThunk","ResponseData","NewToDoLists","GetToDoListTasksThunk","ToDoListID","_ref5","Tasks","ToDoListsReducer","NewToDoListTasksPage","NewToDoListTasksCount","reducers","combineReducers","ProfileData","MessagesData","UsersData","form","formReducer","Init","ToDoListsData","store","createStore","applyMiddleware","thunkMiddleWare","LogOutButton","props","react_default","createElement","className","HS","onClick","LogOutThunk","handleMenuClose","AccountIconComponent","_useState","useState","_useState2","slicedToArray","anchorEl","setAnchorEl","isMenuOpen","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","hs","react_router_dom","to","MenuItem","Header_LogOutButton","IconButton","edge","aria-label","aria-controls","aria-haspopup","event","currentTarget","color","AccountCircle_default","MessagesIcon","Badge_default","badgeContent","toString","Mail_default","People_default","ToDoListsIcon","ListAlt_default","Header","NMC","SetNMC","useEffect","hc","activeClassName","Header_ToDoListsIcon","UsersIcon","MessagesIconPosition","Header_MessagesIcon","AcountIcon","UserProfile","Preloader","ls","src","LoadingSvg","GetProfileSelector","GetStatusSelector","GetIsMyPageSelector","GetPostsSelector","GetOwnNameSelector","GetProfileIsFetching","GetUserIDSelector","GetIsLoginedSelector","GetLoginSelector","GetIsFetchingSelector","GetinitionSelector","GetNewMessagesCountSelector","HeaderContainer","prevProps","prevState","snapshot","Fragment","Loader","components_Header_Header","React","Component","connect","OwnID","DialogInfo","date","MessageSendTime","split","time","d","pc","DialogUserName","DialogUserAvatar","Dialogs","el","Dialogs_DialogInfo","key","userName","newMessagesCount","lastDialogActivityDate","MapStateToPropsForRedirect","AuthRedirect","RedirectComp","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","value","react_router","GetAllDialogsSelector","GetMessagesDataSelector","GetIsFetchingDialogs","DialogsContainer","GetAllDialogsThunk","components_Dialogs_Dialogs","compose","withRouter","Paginator","pagesCount","Math","ceil","pages","i","push","PortionNumber","SetPortionNumber","LeftBorderOfPortion","RightBorderOfPortion","PortionCount","PS","setNumbers","NumbersFont","numbers","ev","OnChangedPage","User","um","user","name","disabled","some","OnUnFollow","unfollow","follow","FindUserModal","setOpen","handleClose","Button","variant","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","onChange","OnFindUserFieldValueChanging","autoFocus","margin","fullWidth","DialogActions","SubmitModal","SetFoundedUser","_useState3","_useState4","FindUserFieldValue","SetFindUserFieldValue","_useState5","_useState6","FoundingMode","SetFoundingMode","FindUserThunk","size","FUStyles","foundArea","SearchingResult","items","FoundedUsers","FoundedUsersWrapper","Users_User","GoBack","FindUserButton","UserSearchModal","PurifyUsers","ChangePortionSize","Users_FindUser","UsersWrapper","PaginatorPosition","common_Paginator_Paginator","GetUsers","GetPageSize","GetTotalUsersCount","GetCurrentPage","GetIsFeching","GetInProgress","GetPortionSize","GetFoundedUserSelector","UsersContainer","pageNumber","_this","SetCurrentPage","getUsersThunk","followThunk","unfollowThunk","totalCount","stopSubmit","_error","ProfileStatusF","IsStatusChanging","SetIsStatusChanging","Status","SetStatus","e","onBlur","SetProfileStatus","onDoubleClick","Contact","ContactValue","cs","ContactName","ProfileContacts","keys","contacts","ProfileContactsValues","pds","aboutME","aboutMe","lookingForAJob","lookingForAJobDescription","buttonEditInformation","ContactsEditingOn","values","UserInfo_Contact","SetIsAnyContact","ProfileAvatar","SelectPhoto","target","files","SetProfilePhoto","accept","htmlFor","AddAPhoto_default","TextArea","meta","objectWithoutProperties","touched","EVS","assign","TextAreaAboutMe","Input","InputName","_ref7","_ref8","CreateField","placeholder","validators","component","text","Field","validate","required","MaxLengthCreator","MaxLengthValue","max300","max150","max50","ProfileDataEditorForm","onSubmit","handleSubmit","ContactsEditingOFF","maxLength300","ReduxSendMessageOnUserPageForm","reduxForm","lm","AuthError","MessageSendingModOFF","SendMessageOnUserPage","ChosedSendMessage","SetChosedSendMessage","Formdata","MessageFromUserPage","ProfileDataEditorFormRedux","UserInfo","ContactsIsEditing","SetContactsIsEditing","UserInfo_ProfileAvatar","UserInfo_ProfileStatusF","UserInfo_SendMessageOnUserPage","initialValues","formData","SaveProfileData","then","UserInfo_ProfileData","message","likecount","maxValue250","ReduxMyPostForm","MyPosts","memo","posts","MyPosts_Post_Post","formDatas","addpost","postArea","MyPostsConteiner","MyPosts_MyPosts","PureComponent","Profile","Profile_UserInfo_UserInfo","MyPosts_MyPostsConteiner","ProfileContainer","params","SetIsMyPage","history","GetProfileStatusThunk","ProfileDataToPaint","components_Profile_Profile","SetProfileStatusThunk","SetProfilePhotoThunk","UpdateProfileInfoThunk","profileID","Promise","reject","DeleteConfirmWindow","closeWindow","SetToConfirmDeleting","ms","ToConfirmDeleting","CloseButton","deleteMessage","MessageToRestore","SetMessageToRestore","Message_DeleteConfirmWindow","DeleteMessageThunk","DialoguserID","maxValue300","ReduxMessageWithUserForm","MessagesWithUser","SetMessagesData","mwuStyles","addedAt","senderName","senderId","Message_DeleteMessage","Viewed","MessageTextArea","MessagesContainer","GetInterlocutorAvatarThunk","GetProfileAvatarThunk","Message_MessagesWithUser","maxLength50","ReduxLoginForm","LoginUserPhoto","imgUser","LoginThunk","withStyles","theme","root","spacing","closeButton","position","right","top","palette","grey","children","classes","other","disableTypography","Typography","Close_default","LoginModalWindow","MuiDialogContent","CustomizedDialogs","_React$useState","_React$useState2","aria-labelledby","LoginModal_DialogTitle","dividers","components_Login_Login","LoginPage","LoginPageAlarm","AuthButton","useStyles","makeStyles","InputWithIcon","Grid","container","alignItems","OnTextFieldCreateNewToDoListChanging","CreateNewToDoListMode","SetCreateNewToDoListMode","CurrentValueOfCreateNewToDoListInput","SetCurrentValueOfCreateNewToDoListInput","TDlistS","CreateAndGoBackButtons","AddNewListButton","GoBacktButton","AddNewListWrapper","AddNewToDoListsThunk","Addbutton","DeleteToDoListButton","ShowTasksMode","Del","ListID","startIcon","Delete_default","EditButton","Fab","ButtonSize","Edit_default","HandleOnEdit","ToDoListMenuIcon","TDLS","ToDoLists_EditButton","EditTitleModeON","ToDoLists_DeleteToDoList","MoreVert_default","SaveButton","CurrentToDoListTitle","ChangeToDoListTitleThunk","EditTitleModeOFF","Save_default","HandleOnClick","ArrowBack_default","display","flexWrap","textField","marginLeft","marginRight","width","TitleChangingField","noValidate","autoComplete","OnToDoListTitleChanging","helperText","AddNewTaskButton","AddNewTaskFieldCurrentValue","AddNewTaskThunk","AddTaskField","OnAddNewTaskFieldChange","AddNewTask","SetAddNewTaskFieldCurrentValue","AddNewTaskField","AddNewTask_AddNewTaskButton","ButtonIsDesabled","KeyboardArrowDown_default","KeyboardArrowUp_default","DeleteButton","ShowButtonBlocked","DeleteTaskThunk","TaskID","DeleteOutline_default","TaskDoneIcon","Done_default","EditTaskButton","TaskShowDetailsIcon","TaskHideDetailsIcon","DateTransform","join","reverse","TaskDetails","ShowDetails","SetShowDetails","AddedDate","CurrentTask","DeadLineDate","ts","TaskHideDetails","ShowButtonBlockedOFF","ToDoListTasks_TaskShowDetailsIcon","ShowButtonBlockedON","NotDoneIcon","Clear_default","maxlength50","maxlength100","TaskEditForm","ToDoLists_GoBackButton","TaskEditModeOFF","TaskExecutedStyleForWindow","TaskEditFormRedux","Task","_classNames","TaskEditMode","SetTaskEditMode","TrueStartDate","TrueDeadLine","classNames","defineProperty","completed","TrueObjMaker","console","UpdateTaskInformationThunk","ToDoListTasks_EditTaskButton","DoneIcone","ToDoListTasks_NotDoneIcon","TaskTitle","DeleteTaskButton","ToDoListTasks_TaskDetails","TasksData","SetTasksData","SetShowButtonBlocked","task","ToDoListTasks_Task","todoListId","TaskAddedDate","addedDate","TaskDeadline","TaskDescription","ToDoList","EditTitleMode","SetEditTitleMode","SetShowTasksMode","SetToDoListTitle","ToDoLists_SaveButton","TitleChangeField","ListMenu","DeleteToDoListThunk","ToDoLists_AddNewTask_AddNewTask","ToDoListTasks_Tasks","ToDoListTasks_HideTasksButton","ButtonIsDesabledOFF","ToDoListTasks_ShowTasksButton","ButtonIsDesabledON","SetButtonIsDesabled","ToDoLists_CreateNewToDoList_CreateNewToDoList","ToDoLists_ToDoList","GetToDoListTasksPage","GetToDoListTasksCount","GetToDoListIsFetching","GetToDoListTaskIsFetching","ToDoListsContainer","components_ToDoLists_ToDoLists","SetToDoListTasksPage","SetToDoListTasksCount","Newtitle","TaskId","App","InitializationAPPthunk","Header_HeaderContainer","exact","path","render","Dialogs_DialogsContainer","Message_MessagesContainer","ProfileCOntainer","Users_UsersContainer","Login_LoginPage","ToDoLists_ToDoListsContainer","promise","MyId","all","ReactDOM","basename","process","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","bg","bg10","logModalWindow","Names","Country","City"],"mappings":"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","file":"static/js/main.501eff6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pp\":\"MyPosts_pp__oOvBm\",\"marginPost\":\"MyPosts_marginPost__1eXDQ\",\"button\":\"MyPosts_button__BRsVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__GvU_X\",\"img\":\"Post_img__1drkR\",\"like\":\"Post_like__VlEH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Tasks_Main__3BWH0\",\"MainWrapper\":\"Tasks_MainWrapper__2pj1b\",\"TaskBodyWrapper\":\"Tasks_TaskBodyWrapper__3ij9J\",\"deadline\":\"Tasks_deadline__1U-ZC\",\"description\":\"Tasks_description__KV7_2\",\"Ramka\":\"Tasks_Ramka__37PWH\",\"DoneRamka\":\"Tasks_DoneRamka__2sVcb\",\"ToTrashIcon\":\"Tasks_ToTrashIcon__1Bzva\",\"iconStatus\":\"Tasks_iconStatus__1GMe_\",\"Title\":\"Tasks_Title__2ZCqX\",\"DetailsButton\":\"Tasks_DetailsButton__2e43T\",\"detailsWrapper\":\"Tasks_detailsWrapper__1fEsw\",\"startDate\":\"Tasks_startDate__3m-5Q\",\"descriptionText\":\"Tasks_descriptionText__2aPsR\",\"TaskEditButton\":\"Tasks_TaskEditButton__1ow_D\",\"TaskFormWrapper\":\"Tasks_TaskFormWrapper__16blE\",\"TaskEditFromButtons\":\"Tasks_TaskEditFromButtons__4TxdW\",\"GoBackButton\":\"Tasks_GoBackButton__egsQ4\",\"MainFormWrapper\":\"Tasks_MainFormWrapper__10W0X\",\"CompletedInput\":\"Tasks_CompletedInput__3ka7Y\",\"FormDescription\":\"Tasks_FormDescription__3jOQy\",\"priority\":\"Tasks_priority__1YFGo\",\"TaskFormSaveButton\":\"Tasks_TaskFormSaveButton__3p1s_\",\"CompletedFieldWrapper\":\"Tasks_CompletedFieldWrapper__15geq\",\"cc\":\"Tasks_cc__2tHYr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3L50G\",\"IconsWrapper\":\"Header_IconsWrapper__O29iG\",\"item\":\"Header_item__2BL1D\",\"log\":\"Header_log__2oet5\",\"MessagesIconStyle\":\"Header_MessagesIconStyle__4F9-k\",\"accountIconUserName\":\"Header_accountIconUserName__1yn7c\",\"loginPosition\":\"Header_loginPosition__1Mv6C\",\"loginButton\":\"Header_loginButton__1rOO6\",\"active\":\"Header_active__wKwwX\",\"startPosition\":\"Header_startPosition__18IcE\",\"LogOutStyle\":\"Header_LogOutStyle__2lzry\",\"unloginedHeader\":\"Header_unloginedHeader__3-WWO\",\"unloginedUsersIcon\":\"Header_unloginedUsersIcon__1vMde\"};","module.exports = __webpack_public_path__ + \"static/media/loader1.54c96e01.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small\":\"LoaderStyles_small__vpz8E\",\"medium\":\"LoaderStyles_medium__1KoLf\",\"large\":\"LoaderStyles_large__3v2ZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__8hXUq\"};","module.exports = __webpack_public_path__ + \"static/media/viewed1.1334aba6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/closeButton.8c53b830.png\";","module.exports = __webpack_public_path__ + \"static/media/trash.99ef094b.png\";","module.exports = __webpack_public_path__ + \"static/media/userLog.ae20f8de.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"ElementsValidators_formControl__2NyA5\",\"error\":\"ElementsValidators_error__3FUa5\",\"textarea\":\"ElementsValidators_textarea__3cIBd\",\"button\":\"ElementsValidators_button__tZ8xv\",\"input\":\"ElementsValidators_input__23YpE\",\"TextAreaMessage\":\"ElementsValidators_TextAreaMessage__16qP9\",\"textareaAboutMe\":\"ElementsValidators_textareaAboutMe__1i4aL\",\"ContactFormInput\":\"ElementsValidators_ContactFormInput__2F0Oc\",\"TextAreaDialogsMessage\":\"ElementsValidators_TextAreaDialogsMessage__3UVNe\",\"TaskFormInput\":\"ElementsValidators_TaskFormInput__TDX_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userdescrition\":\"UserInfo_userdescrition__3mhuU\",\"UserPhoto\":\"UserInfo_UserPhoto__28MeR\",\"ProfileName\":\"UserInfo_ProfileName__ioqSD\",\"UserName\":\"UserInfo_UserName__3jEfi\",\"FormError\":\"UserInfo_FormError__EPiL-\",\"goback\":\"UserInfo_goback__3tajc\",\"MyContacts\":\"UserInfo_MyContacts__3Cxig\",\"input\":\"UserInfo_input__1T4oP\",\"ContactsForm\":\"UserInfo_ContactsForm__1gWsD\",\"MyName\":\"UserInfo_MyName__ybeTv\",\"buttonSaveChanges\":\"UserInfo_buttonSaveChanges__28dF5\",\"buttonGoBack\":\"UserInfo_buttonGoBack__1urJa\",\"EditorFormBG\":\"UserInfo_EditorFormBG__1shzc\",\"AddPhotoButtonPosition\":\"UserInfo_AddPhotoButtonPosition__1puDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageFormStyle\":\"Messages_MessageFormStyle__3_75P\",\"dateStyle\":\"Messages_dateStyle__1z3DB\",\"img\":\"Messages_img__3OsI6\",\"messageText\":\"Messages_messageText__1fb-7\",\"UserNameInMessages\":\"Messages_UserNameInMessages__1eMkc\",\"viewed\":\"Messages_viewed__2S_Ep\",\"fontStyles\":\"Messages_fontStyles__1kczt\",\"confirmDeletingWindow\":\"Messages_confirmDeletingWindow__1l7zx\",\"confirmDeletingWindowButtons\":\"Messages_confirmDeletingWindowButtons___hBhx\",\"buttontsDelta\":\"Messages_buttontsDelta__FwB_z\",\"confirmDeletingWindowHeader\":\"Messages_confirmDeletingWindowHeader__3O44g\",\"confirmDeletingWindowText\":\"Messages_confirmDeletingWindowText__1CX63\",\"imgClose\":\"Messages_imgClose__2UMNq\",\"deleteMessageStyle\":\"Messages_deleteMessageStyle__1uqFk\",\"wrapper\":\"Messages_wrapper__miyNy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Dialogs_Main__fgm98\",\"DialogUserPhoto\":\"Dialogs_DialogUserPhoto__2S4Tu\",\"padding\":\"Dialogs_padding__3E-h0\",\"dialogs\":\"Dialogs_dialogs__BjYAn\",\"dialogsItems\":\"Dialogs_dialogsItems__1VDH2\",\"active\":\"Dialogs_active__2EN3N\",\"messages\":\"Dialogs_messages__1bTDr\",\"img\":\"Dialogs_img__1DEd5\",\"header\":\"Dialogs_header__xOCfp\",\"button\":\"Dialogs_button__30gtx\",\"DialogArea\":\"Dialogs_DialogArea__2YCQ-\",\"item\":\"Dialogs_item__be1yr\",\"activeLink\":\"Dialogs_activeLink__309Uh\",\"deleteMessageStyle\":\"Dialogs_deleteMessageStyle__3GrY8\",\"ConfirmText\":\"Dialogs_ConfirmText__3Xy4I\",\"ToTrash\":\"Dialogs_ToTrash__3Py0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToDoListsPosition\":\"ToDoLists_ToDoListsPosition__3MkVI\",\"ToDolistsWrapper\":\"ToDoLists_ToDolistsWrapper__220tE\",\"ToDoListTitle\":\"ToDoLists_ToDoListTitle__LyiG1\",\"ToDolistsChanchingWrapper\":\"ToDoLists_ToDolistsChanchingWrapper__2Edj6\",\"ToDoListChangingInput\":\"ToDoLists_ToDoListChangingInput__aFOXL\",\"EditButtonPostition\":\"ToDoLists_EditButtonPostition__2h4K0\",\"AddNewTaskWrapper\":\"ToDoLists_AddNewTaskWrapper__3B8fo\",\"AddTaskButton\":\"ToDoLists_AddTaskButton__2QYQ2\",\"ShowTasksButton\":\"ToDoLists_ShowTasksButton__23yFD\",\"HideTasksButton\":\"ToDoLists_HideTasksButton__1OJJX\",\"TasksContent\":\"ToDoLists_TasksContent__NmQUx\",\"tasksposititon\":\"ToDoLists_tasksposititon__2Frvl\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"96428d9a-0d9d-4cb1-8a30-3ebf6693ac4b\"\r\n    }\r\n})\r\n\r\nconst instanceToDoLists = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/',\r\n    headers: {\r\n        \"API-KEY\": \"96428d9a-0d9d-4cb1-8a30-3ebf6693ac4b\"\r\n    }\r\n})\r\nconst MyServerInstance = axios.create({\r\n    baseURL: 'http://localhost:5000/'\r\n})\r\n\r\nexport const API = {\r\n\r\n    async getUsers(currentPage = 1, pageSize = 10) {\r\n        const response = await instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        return response.data\r\n    },\r\n\r\n    async AuthMe() {\r\n        const response = await instance.get(`auth/me`)\r\n        return response.data\r\n    },\r\n\r\n    async getProfile(ProfileID = 2) {\r\n        const response = await instance.get(`profile/` + ProfileID)\r\n        return response.data\r\n    },\r\n\r\n    async DelSub(userId) {\r\n        const response = await instance.delete(`follow/${userId}`)\r\n        return response.data\r\n    },\r\n\r\n    async AddSub(userId) {\r\n        const response = await instance.post(`follow/${userId}`)\r\n        return response.data\r\n    },\r\n\r\n    async getProfileStatus(ProfileID = 2) {\r\n        const response = await instance.get(`profile/status/` + ProfileID)\r\n        return response.data\r\n    },\r\n\r\n    async setProfileStatus(status) {\r\n        const response = await instance.put(`profile/status/`, {status: status})\r\n        return response.data\r\n\r\n    },\r\n\r\n    async Login(email, password, rememberMe, captcha) {\r\n        const response = await instance.post(`auth/login/`, {\r\n            email: email,\r\n            password: password,\r\n            rememberMe: rememberMe,\r\n            captcha: captcha\r\n        })\r\n        return response.data\r\n    },\r\n\r\n    async LogOut() {\r\n        const response = await instance.delete(`auth/login`)\r\n        return response.data\r\n\r\n    },\r\n\r\n    async LoadPhotoOnServer(photo) {\r\n        const formdata = new FormData()\r\n        formdata.append(\"image\", photo)\r\n        const response = await instance.put('profile/photo', formdata, {\r\n            'Content-Type': 'multipart/form-data'\r\n        })\r\n        return response.data\r\n    },\r\n    async PutProfileDataOnServer(profile) {\r\n        const response = await instance.put('profile', profile)\r\n        return response.data\r\n    },\r\n    async GetCaptchaFromServer() {\r\n        const response = await instance.get('security/get-captcha-url')\r\n        return response.data\r\n    },\r\n    async GetAllDialogs() {\r\n        const response = await instance.get('dialogs')\r\n        return response.data\r\n    },\r\n    async GetNewMessagesFromServer(userId) {\r\n        const response = await instance.get(`dialogs/${userId}/messages`)\r\n        return response.data\r\n    },\r\n    async SendNewMessage(userId, NewMessage) {\r\n        const response = await instance.post(`dialogs/${userId}/messages`, {\r\n            body: NewMessage\r\n        })\r\n        return response.data\r\n    },\r\n    async GetNewMessagesCount() {\r\n        const response = await instance.get('dialogs/messages/new/count')\r\n        return response\r\n    },\r\n    async DeleteMessage(MessageID) {\r\n        const response = await instance.delete(`dialogs//messages/${MessageID}`)\r\n        return response\r\n    },\r\n    async FindUser(UserName) {\r\n        const response = await instance.get(`users?term=${UserName}`)\r\n        return response\r\n    },\r\n    async GetToDoLists() {\r\n        const response = await instance.get('todo-lists')\r\n        return response\r\n    },\r\n    async CreateNewToDoList(title) {\r\n        const response = await instance.post('todo-lists', {title: title})\r\n        return response\r\n    },\r\n    async DeleteToDoList(todolistId) {\r\n        await instance.delete(`todo-lists/${todolistId}`)\r\n    },\r\n    async ChangeToDoListTitle(todolistId, title) {\r\n        await instance.put(`todo-lists/${todolistId}`, {\r\n            title: title\r\n        })\r\n    },\r\n    async GetToDoListTasks(todolistId, count = 10, page = 1) {\r\n        const response = await instance.get(`todo-lists/${todolistId}/tasks?count=${count}&page=${page}`)\r\n        return response\r\n    },\r\n\r\n    async CreateNewTakForToDoList(todolistId, Tasktitle) {\r\n        const DataResponse = await instance.post(`todo-lists/${todolistId}/tasks`, {\r\n            title: Tasktitle\r\n        })\r\n        return DataResponse\r\n    },\r\n\r\n    async ChangeTaskInformation(todolistId, taskid, status) {\r\n\r\n        const DataResponse = await instanceToDoLists.put(`todo-lists/${todolistId}/tasks/${taskid}`, status)\r\n        return DataResponse\r\n    },\r\n    async DeleteTaskFromToDoList(todolistId, taskid) {\r\n        const DataResponse = await instanceToDoLists.delete(`todo-lists/${todolistId}/tasks/${taskid}`)\r\n        return DataResponse\r\n    },\r\n/*    async MyServerReq(){\r\n        const Res = await MyServerInstance.get('server')\r\n        return Res\r\n    },\r\n    async MyServerPost(body){\r\n        const Res = await MyServerInstance.post('friends/add',body)\r\n        return Res\r\n    }*/\r\n}\r\n","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst add_post = 'Profile/ADD_POST'\r\nconst Set_Profile_Of_User = 'Profile/Set_Profile_Of_User'\r\nconst Set_Status_Of_User = '/Profile/Set_Status_Of_User'\r\nconst Set_Photo_Of_User = '/Profile/Set_Photo_Of_User'\r\nconst Set_Is_My_Page = '/Profile/Set_Is_My_Page'\r\nconst Set_Own_Name= '/Profile/Set_Own_Name'\r\nconst Set_IsFetching= '/Profile/Set_IsFetching'\r\n\r\n\r\nlet DefaultState = {\r\n    Posts: [],\r\n    TextNewPost: '',\r\n    profile: null,\r\n    status: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n    IsMyPage: false,\r\n    OwnName : \"\",\r\n    IsFetching : false\r\n}\r\n\r\nconst ProfileReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case add_post: {\r\n            let NewPost = {\r\n                id: 6,\r\n                Post: action.newtext,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n\r\n                Posts: [...state.Posts, NewPost],\r\n            }\r\n        }\r\n        case Set_Profile_Of_User: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case Set_Status_Of_User: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case Set_Photo_Of_User: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photo}\r\n            }\r\n        }\r\n        case Set_Is_My_Page: {\r\n            return {...state, IsMyPage: action.bool}\r\n        }\r\n        case Set_Own_Name: {\r\n            return {...state, OwnName: action.MyOwnName}\r\n        }\r\n        case Set_IsFetching: {\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addpost = (text) => {\r\n    return {type: add_post, newtext: text}\r\n}\r\n\r\nexport const setProfileOfUser = (profile) => {\r\n    return {type: Set_Profile_Of_User, profile}\r\n}\r\n\r\nexport const SetStatusOfUser = (status) => {\r\n    return {type: Set_Status_Of_User, status}\r\n}\r\n\r\nexport const SetPhotoOfUser = (photo) => {\r\n    return {type: Set_Photo_Of_User, photo}\r\n}\r\n\r\nexport const SetIsMyPage = (bool) => {\r\n    return {type: Set_Is_My_Page, bool}\r\n}\r\nexport const SetOwnName = (MyOwnName) => {\r\n    return {type: Set_Own_Name, MyOwnName}\r\n}\r\nexport const SetIsFetching = (IsFetching) => {\r\n    return {type: Set_IsFetching, IsFetching}\r\n}\r\n\r\n\r\n\r\nexport const GetProfileThunk = (ProfileID) => async (dispatch,getState) => {\r\n    const MyID = getState().Auth.userId\r\n    dispatch(SetIsFetching(true))\r\n    const data = await API.getProfile(ProfileID)\r\n    dispatch(setProfileOfUser(data))\r\n    if (data.userId === MyID) {\r\n        dispatch(SetOwnName(data.fullName))\r\n    }\r\n    dispatch(SetIsFetching(false))\r\n}\r\n\r\n\r\nexport const GetProfileStatusThunk = (userID) => async (dispatch) => {\r\n    dispatch(SetIsFetching(true))\r\n    const data = await API.getProfileStatus(userID)\r\n    dispatch(SetStatusOfUser(data))\r\n    dispatch(SetIsFetching(false))\r\n}\r\n\r\nexport const SetProfileStatusThunk = (status) => async (dispatch) => {\r\n    dispatch(SetIsFetching(true))\r\n    const data = await API.setProfileStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetStatusOfUser(status))\r\n    }\r\n    dispatch(SetIsFetching(false))\r\n}\r\n\r\nexport const SetProfilePhotoThunk = (photo) => async (dispatch) => {\r\n    dispatch(SetIsFetching(true))\r\n    const data = await API.LoadPhotoOnServer(photo)\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetPhotoOfUser(data.data.photos))\r\n    }\r\n    dispatch(SetIsFetching(false))\r\n}\r\n\r\nexport const UpdateProfileInfoThunk = (profile) => async (dispatch, getState) => {\r\n    const profileID = getState().Auth.userId\r\n    dispatch(SetIsFetching(true))\r\n    const data = await API.PutProfileDataOnServer(profile)\r\n    if (data.resultCode === 0) {\r\n        dispatch(GetProfileThunk(profileID))\r\n    } else {\r\n        dispatch(stopSubmit(\"ProfileDataEditorForm\",{_error : data.messages[0]}))\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n    dispatch(SetIsFetching(false))\r\n}\r\n\r\n\r\nexport default ProfileReducer","import {API} from \"../API/requests\";\r\n\r\nconst Set_All_Dialogs = 'Dialogs/Set_All_Dialogs'\r\nconst Set_New_Messages = 'Dialogs/Set_New_Messages'\r\nconst Set_InterlocutorAvatar = 'Dialogs/Set_InterlocutorAvatar'\r\nconst Set_UserAvatarForDialogs = 'Dialogs/Set_UserAvatarForDialogs'\r\nconst Set_NewMessagesCount = 'Dialogs/Set_NewMessagesCount'\r\nconst Set_IsFetching = 'Dialogs/Set_IsFetching'\r\n\r\nlet DefaultState = {\r\n    users: [],\r\n    messages: [],\r\n    avatars: [{}],\r\n    NewMessageText: '',\r\n    AllDialogs: [],\r\n    DialogsMessages: null,\r\n    InterlocutorAvatar : \"\",\r\n    UserAvatar : \"\",\r\n    NewMessagesCount : 0,\r\n    IsFetching : false\r\n}\r\nconst DialogsReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n\r\n        case Set_All_Dialogs : {\r\n            return {...state, AllDialogs: action.NewAllDialogs}\r\n        }\r\n        case  Set_New_Messages : {\r\n            return {...state, DialogsMessages: action.NewMessagesData}\r\n        }\r\n        case Set_InterlocutorAvatar :{\r\n            return {\r\n                ...state, InterlocutorAvatar : action.newInterlocutorAvatar\r\n            }\r\n        }\r\n        case Set_UserAvatarForDialogs :{\r\n            return {\r\n                ...state, UserAvatar : action.UserAvatar\r\n            }\r\n        }\r\n        case Set_NewMessagesCount :{\r\n            return {\r\n                ...state, NewMessagesCount : action.NewMessagesCount\r\n            }\r\n        }\r\n        case Set_IsFetching :{\r\n            return {\r\n                ...state, IsFetching : action.IsFetching\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const SetAllDialogs = (NewAllDialogs) => {\r\n    return {type: Set_All_Dialogs, NewAllDialogs}\r\n}\r\nexport const SetNewMessages = (NewMessagesData) => {\r\n    return {type: Set_New_Messages, NewMessagesData}\r\n}\r\nexport const setInterlocutorAvatar = (newInterlocutorAvatar) => {\r\n    return {type: Set_InterlocutorAvatar , newInterlocutorAvatar}\r\n}\r\nexport const SetNewMessagesCount = (NewMessagesCount) => {\r\n    return {type: Set_NewMessagesCount , NewMessagesCount}\r\n}\r\nexport const setUserAvatarForDialogs = (UserAvatar) => {\r\n    return {type: Set_UserAvatarForDialogs , UserAvatar}\r\n}\r\nexport const SetIsFetchingDialogs = (IsFetching) => {\r\n    return {type: Set_IsFetching , IsFetching}\r\n}\r\n\r\n\r\nexport const GetAllDialogsThunk = () => async (dispatch) => {\r\n    dispatch(SetIsFetchingDialogs(true))\r\n    const data = await API.GetAllDialogs()\r\n    dispatch(SetAllDialogs(data))\r\n    dispatch(SetIsFetchingDialogs(false))\r\n}\r\nexport const GetNewMessagesThunk = (UserId) => async (dispatch) => {\r\n    dispatch(SetIsFetchingDialogs(true))\r\n    const data = await API.GetNewMessagesFromServer(UserId)\r\n    dispatch(SetIsFetchingDialogs(false))\r\n    if (!data.error) {\r\n        dispatch(SetNewMessages(data))\r\n    }\r\n\r\n\r\n}\r\nexport const SendNewMessageThunk = (UserId, NewMessage) => async (dispatch) => {\r\n    const data = await API.SendNewMessage(UserId, NewMessage)\r\n    if (!data.error) {\r\n        dispatch(GetNewMessagesThunk(UserId))\r\n    }\r\n}\r\nexport const GetInterlocutorAvatarThunk = (UserId) => async (dispatch) => {\r\n    const data = await API.getProfile(UserId)\r\n        dispatch(setInterlocutorAvatar(data.photos.small))\r\n}\r\nexport const GetProfileAvatarThunk = (UserID) => async (dispatch) => {\r\n    const data = await API.getProfile(UserID)\r\n        dispatch(setUserAvatarForDialogs(data.photos.small))\r\n}\r\nexport const GetNewMessagesCountThunk = () => async (dispatch) => {\r\n    const data = await API.GetNewMessagesCount()\r\n    dispatch(SetNewMessagesCount(data.data))\r\n}\r\nexport const DeleteMessageThunk = (MessageID,UserID) => async (dispatch) => {\r\n   await API.DeleteMessage(MessageID)\r\n    dispatch(GetNewMessagesThunk(UserID))\r\n\r\n}\r\n\r\n\r\nexport default DialogsReducer","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst follow = 'Users/FOLLOW'\r\nconst unfollow = 'Users/UNFOLLOW'\r\nconst setusers = 'Users/SET_USERS'\r\nconst Set_Current_Page = 'Users/SET_CURRENT_PAGE'\r\nconst Set_Total_Count_Of_Users = 'Users/Set_Total_Count_Of_Users'\r\nconst IsFetching_Toggle = 'Users/Toggle_is_fetching'\r\nconst IsInProcess_Togle = 'Users/IsInProcess_Togle'\r\nconst Portion_Size_Changer = 'Users/Portion_Size_C                                                                hanger'\r\nconst Set_Founded_User = 'Users/Set_Founded_User'\r\nconst FindUserIsFetching_Toggle = 'Users/FindUserIsFetching_Toggle'\r\n\r\n\r\nlet DefaultState = {\r\n    Users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    IsFetching: false,\r\n    FindUserIsFetching : false,\r\n    InProcess: [],\r\n    PortionSize: 1,\r\n    FoundedUser: null\r\n}\r\n\r\nconst UsersReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case follow: {\r\n            return {\r\n                ...state,\r\n                Users: state.Users.map(us => {\r\n                    if (us.id === action.userID) {\r\n                        return {\r\n                            ...us,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return us\r\n                })\r\n            }\r\n        }\r\n        case unfollow: {\r\n            return {\r\n                ...state,\r\n                Users: state.Users.map(us => {\r\n                    if (us.id === action.userID) {\r\n                        return {\r\n                            ...us,\r\n                            followed: false\r\n                        }\r\n                    }\r\n                    return us\r\n                })\r\n            }\r\n        }\r\n        case setusers: {\r\n            return {...state, Users: action.users}\r\n        }\r\n        case Set_Current_Page: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case Set_Total_Count_Of_Users: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case IsFetching_Toggle: {\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        case IsInProcess_Togle: {\r\n            return {\r\n                ...state,\r\n                InProcess: action.InProgress ?\r\n                    [...state.InProcess, action.UserID]\r\n                    : state.InProcess.filter(id => id !== action.UserID)\r\n            }\r\n        }\r\n        case Portion_Size_Changer: {\r\n            return {...state, PortionSize: action.PortionSizeChangingValue}\r\n        }\r\n        case Set_Founded_User: {\r\n            return {...state, FoundedUser: action.NewFoundedUser}\r\n        }\r\n        case FindUserIsFetching_Toggle: {\r\n            return {...state, FindUserIsFetching: action.FindUserIsFetching}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const OnFollow = (userID) => {\r\n    return {type: follow, userID: userID}\r\n}\r\nexport const onUnFollow = (userID) => {\r\n    return {type: unfollow, userID: userID}\r\n}\r\nexport const setUsers = (users) => {\r\n    return {type: setusers, users: users}\r\n}\r\nexport const SetCurrentPage = (currentPage) => {\r\n    return {type: Set_Current_Page, currentPage: currentPage}\r\n}\r\nexport const SetTotalCountOfUsers = (totalCount) => {\r\n    return {type: Set_Total_Count_Of_Users, totalUsersCount: totalCount}\r\n}\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type: IsFetching_Toggle, IsFetching}\r\n}\r\n\r\nexport const ToggleFindUserIsFetching = (FindUserIsFetching) => {\r\n    return {type: FindUserIsFetching_Toggle, FindUserIsFetching}\r\n}\r\n\r\nexport const ToggleInProcess = (InProgress, UserID) => {\r\n    return {type: IsInProcess_Togle, InProgress, UserID}\r\n}\r\n\r\nexport const ChangePortionSize = (value) => {\r\n    return {type: Portion_Size_Changer, PortionSizeChangingValue: value}\r\n}\r\nexport const SetFoundedUser = (NewFoundedUser) => {\r\n    return {type: Set_Founded_User, NewFoundedUser}\r\n}\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(ToggleIsFetching(true))\r\n    const data = await API.getUsers(currentPage, pageSize)\r\n    dispatch(ToggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(SetTotalCountOfUsers(data.totalCount))\r\n}\r\n\r\nexport const unfollowThunk = (userID) => async (dispatch) => {\r\n    dispatch(ToggleInProcess(true, userID))\r\n    const data = await API.DelSub(userID)\r\n    if (data.resultCode == 0) {\r\n        dispatch(onUnFollow(userID))\r\n    }\r\n    dispatch(ToggleInProcess(false, userID))\r\n}\r\n\r\nexport const followThunk = (userID) => async (dispatch) => {\r\n    dispatch(ToggleInProcess(true, userID))\r\n    const data = await API.AddSub(userID)\r\n    if (data.resultCode == 0) {\r\n        dispatch(OnFollow(userID))\r\n    }\r\n    dispatch(ToggleInProcess(false, userID))\r\n}\r\n\r\nexport const FindUserThunk = (UserName) => async (dispatch) => {\r\n    dispatch(ToggleFindUserIsFetching(true))\r\n    const data = await API.FindUser(UserName)\r\n    dispatch(ToggleFindUserIsFetching(false))\r\n    if (!data.data.error) {\r\n        dispatch(SetFoundedUser(data.data))\r\n    } else {\r\n        dispatch(stopSubmit(\"FindUser\", {_error: data.data.error.messages[0]}))\r\n    }\r\n}\r\n\r\nexport default UsersReducer","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'Auth/SET_USER_DATA'\r\nconst IsFetching_Toggle = 'Auth/IsFetching_Toggle'\r\nconst Set_Captcha_Url = 'Auth/Set_Captcha_Url'\r\n\r\nlet DefaultState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    IsLogined: false,\r\n    IsFetching: false,\r\n    CaptchaUrl : null\r\n}\r\n\r\nconst AuthReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA : {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        case IsFetching_Toggle: {\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        case Set_Captcha_Url: {\r\n            return {...state, CaptchaUrl: action.CaptchaURLFromServer}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetAuthUser = (userId, email, login, IsLogined) =>\r\n    ({type: SET_USER_DATA, data: {userId, email, login, IsLogined}})\r\n\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type: IsFetching_Toggle, IsFetching}\r\n}\r\nexport const SetCaptchaUrl = (CaptchaURLFromServer) => {\r\n    return {type: Set_Captcha_Url, CaptchaURLFromServer}\r\n}\r\n\r\nexport const AuthMeThunk = () => async (dispatch) => {\r\n    ToggleIsFetching(true)\r\n    const data = await API.AuthMe() //возвращает данные авторизованного юзера\r\n    dispatch(ToggleIsFetching(false))\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data\r\n        dispatch(SetAuthUser(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const LoginThunk = (email, password, rememberMe = false,captcha) =>\r\n    async (dispatch) => {\r\n        const data = await API.Login(email, password, rememberMe,captcha)\r\n        if (data.resultCode === 0) {\r\n            dispatch(AuthMeThunk())\r\n        } else {\r\n            if(data.resultCode === 10){\r\n                dispatch(GetCaptchaThunk())\r\n            }\r\n            dispatch(stopSubmit(\"login\", {_error: data.messages[0]}))\r\n        }\r\n    }\r\n\r\nexport const LogOutThunk = () => async (dispatch) => {\r\n    const data = await API.LogOut()\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetAuthUser(null, null, null, false))\r\n    }\r\n}\r\nexport const GetCaptchaThunk = () => async (dispatch) => {\r\n    const data = await API.GetCaptchaFromServer()\r\n    const captchaURL= data.url\r\n        dispatch(SetCaptchaUrl(captchaURL))\r\n\r\n}\r\n\r\n\r\nexport default AuthReducer","import {AuthMeThunk} from \"../data/AuthReducer\"\r\nimport {GetProfileThunk} from \"./ProfileReduser\";\r\n\r\nconst INITIALIZATED = 'Init/INITIALIZATED'\r\n\r\nlet DefaultState = {inition: false}\r\n\r\nconst InitializateReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZATED : {\r\n            return {\r\n                ...state,\r\n                inition: true\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializating = () => ({type: INITIALIZATED})\r\n\r\n\r\n\r\nexport const InitializationAPPthunk = () => async (dispatch,getState) => {\r\n\r\n        let promise = dispatch(AuthMeThunk())\r\n       await Promise.all([promise]);\r\n    const MyId = getState().Auth.userId\r\n    if(MyId){\r\n        dispatch(GetProfileThunk(MyId))\r\n    }\r\n            dispatch(initializating())\r\n    }\r\n\r\nexport default InitializateReducer","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_TO_DO_LISTS = 'ToDoLists/SET_TO_DO_LISTS';\r\nconst SET_TO_DO_LIST_TASKS_Page = 'ToDoLists/SET_TO_DO_LIST_TASKS_Page';\r\nconst SET_TO_DO_LISTS_TASKS_Count = 'ToDoLists/SET_TO_DO_LISTS_TASKS_Count';\r\nconst SET_TO_DO_LIST_TASKS = 'ToDoLists/SET_TO_DO_LIST_TASKS';\r\nconst IsFetching_Toggle = 'ToDoLists/IsFetching_Toggle';\r\nconst TaskIsFetching_Toggle = 'ToDoLists/TaskIsFetching_Toggle';\r\n\r\n\r\nlet DefaultState = {\r\n    ToDoLists: [],\r\n    ToDoListTasks : [],\r\n    ToDoListTasksPage: 1,\r\n    ToDoListTasksCount: 10,\r\n    IsFetching : false,\r\n    TaskIsFetching : false\r\n}\r\n\r\nconst ToDoListsReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_TO_DO_LISTS: {\r\n            return {...state, ToDoLists: action.NewToDoLists}\r\n        }\r\n        case SET_TO_DO_LIST_TASKS_Page: {\r\n            return {...state, ToDoListTasksPage: action.NewToDoListTasksPage}\r\n        }\r\n        case SET_TO_DO_LISTS_TASKS_Count: {\r\n            return {...state, ToDoListTasksCount: action.NewToDoListTasksCount}\r\n        }\r\n       case SET_TO_DO_LIST_TASKS: {\r\n            return {...state, ToDoListTasks: action.Tasks}\r\n        }\r\n\r\n        /*case SET_TO_DO_LIST_TASKS: {\r\n            let NewTask = {\r\n                ListId: action.ListID,\r\n                TaskData: action.Tasks,\r\n\r\n            };\r\n\r\n          if(state.ToDoListTasks.every(el=>el.ListId !== action.ListID)) {\r\n                return {\r\n                    ...state,\r\n                    ToDoListTasks: [...state.ToDoListTasks, NewTask]\r\n                }\r\n            }\r\n          else return {\r\n              ...state,\r\n              ToDoListTasks: [...state.ToDoListTasks.filter(item=>{return item.ListId === action.ListID}).TaskData, action.Tasks]\r\n              }\r\n        }*/\r\n\r\n        case IsFetching_Toggle:{\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        case TaskIsFetching_Toggle:{\r\n            return {...state, TaskIsFetching: action.TaskIsFetching}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const SetToDoLists = (NewToDoLists) => {\r\n    return {type: SET_TO_DO_LISTS, NewToDoLists}\r\n}\r\nexport const SetToDoListTasksPage = (NewToDoListTasksPage) => {\r\n    return {type: SET_TO_DO_LIST_TASKS_Page, NewToDoListTasksPage}\r\n}\r\nexport const SetToDoListTasksCount = (NewToDoListTasksCount) => {\r\n    return {type: SET_TO_DO_LISTS_TASKS_Count, NewToDoListTasksCount}\r\n}\r\nexport const SetToDoListTasks = (Tasks) => {\r\n    return {type: SET_TO_DO_LIST_TASKS, Tasks}\r\n}\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type : IsFetching_Toggle, IsFetching}\r\n}\r\nexport const SetTaskIsFetching = (TaskIsFetching) => {\r\n    return {type : TaskIsFetching_Toggle, TaskIsFetching}\r\n}\r\n\r\n\r\n\r\nexport const GetToDoListsThunk = () => async (dispatch) => {\r\n    dispatch(ToggleIsFetching(true))\r\n    const ResponseData = await API.GetToDoLists()\r\n    dispatch(SetToDoLists(ResponseData.data))\r\n    dispatch(ToggleIsFetching(false))\r\n}\r\n\r\nexport const AddNewToDoListsThunk = (title) => async (dispatch) => {\r\n await API.CreateNewToDoList(title)\r\n        dispatch(GetToDoListsThunk())\r\n}\r\n\r\nexport const DeleteToDoListThunk = (ToDoListID) => async (dispatch) => {\r\n    await API.DeleteToDoList(ToDoListID)\r\n    dispatch(GetToDoListsThunk())\r\n}\r\n\r\nexport const ChangeToDoListTitleThunk = (ToDoListID, Newtitle) => async (dispatch) => {\r\n    await API.ChangeToDoListTitle(ToDoListID, Newtitle)\r\n        dispatch(GetToDoListsThunk())\r\n}\r\n\r\nexport const GetToDoListTasksThunk = (ToDoListID, count,page) => async (dispatch) => {\r\n    dispatch(SetTaskIsFetching(true))\r\n   const DataResponse = await API.GetToDoListTasks(ToDoListID, count, page)\r\n    dispatch(SetTaskIsFetching(false))\r\n    if(!DataResponse.data.error) {\r\n        dispatch(SetToDoListTasks(DataResponse.data))\r\n    }\r\n\r\n}\r\n\r\nexport const AddNewTaskThunk = (ToDoListID, TaskTitle) => async (dispatch) => {\r\n  const DataResponse = await API.CreateNewTakForToDoList(ToDoListID, TaskTitle)\r\n    if(DataResponse.data.resultCode === 0) {\r\n        dispatch(GetToDoListTasksThunk(ToDoListID))\r\n    }\r\n}\r\nexport const DeleteTaskThunk = (ToDoListID,TaskId) => async (dispatch) => {\r\n    const DataResponse = await API.DeleteTaskFromToDoList(ToDoListID,TaskId)\r\n    if(DataResponse.data.resultCode === 0) {\r\n        dispatch(GetToDoListTasksThunk(ToDoListID))\r\n    } else  dispatch(stopSubmit(\"TaskEditorForm\", {_error: DataResponse.data.messages[0]}))\r\n}\r\nexport const UpdateTaskInformationThunk = (ToDoListID,TaskId,status) => async (dispatch) => {\r\n    const DataResponse = await API.ChangeTaskInformation(ToDoListID,TaskId,status)\r\n    if(DataResponse.data.resultCode === 0) {\r\n        dispatch(GetToDoListTasksThunk(ToDoListID))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ToDoListsReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport ProfileReducer from \"./ProfileReduser\";\r\nimport DialogsReducer from \"./DIalogsReduser\";\r\nimport UsersReducer from \"./UsersReduser\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport  thunkMiddleWare from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport InitializateReducer from \"./InitializatonReducer\";\r\nimport ToDoListsReducer from \"./ToDoListsReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfileData: ProfileReducer,\r\n    MessagesData: DialogsReducer,\r\n    UsersData : UsersReducer,\r\n    Auth : AuthReducer,\r\n    form : formReducer,\r\n    Init :  InitializateReducer,\r\n    ToDoListsData : ToDoListsReducer\r\n})\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunkMiddleWare))\r\n\r\nwindow.store = store;\r\nexport default store\r\n","import React from 'react';\r\nimport HS from \"./Header.module.css\"\r\n\r\n\r\n\r\nconst LogOutButton =(props) =>{\r\n    const LogOut = ()=>{\r\n        props.LogOutThunk()\r\n        props.handleMenuClose()\r\n    }\r\n\r\nreturn <div>\r\n    <div className={HS.LogOutStyle} onClick={LogOut}>\r\n        Logout\r\n    </div>\r\n</div>\r\n}\r\n\r\nexport default LogOutButton","import React, {useState} from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport AccountCircleHeader from '@material-ui/icons/AccountCircle';\r\nimport hs from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport LogOutButton from \"./LogOutButton\";\r\n\r\n\r\nconst AccountIconComponent = (props) => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n\r\n    const handleProfileMenuOpen = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <div className={hs.accountIconUserName}>\r\n                    {props.OwnName && props.OwnName}\r\n            </div>\r\n\r\n            <div className={`${hs.item} ${hs.active}`}>\r\n            <NavLink to=\"/Profile/\">\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            </NavLink>\r\n            </div>\r\n            <MenuItem onClick={handleMenuClose}>\r\n                     My account\r\n            </MenuItem>\r\n\r\n            <MenuItem >\r\n                <LogOutButton\r\n                    handleMenuClose={handleMenuClose}\r\n                    LogOutThunk={props.LogOutThunk}\r\n                />\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return <div>\r\n            <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleProfileMenuOpen}\r\n                color=\"inherit\"\r\n            >\r\n                <AccountCircleHeader />\r\n            </IconButton>\r\n                {renderMenu}\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default AccountIconComponent;\r\n","import React from \"react\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge/Badge\";\r\nimport MailIconHeader from '@material-ui/icons/Mail';\r\n\r\n\r\n\r\nconst MessagesIcon = (props) =>{\r\n\r\n    return  <div>\r\n        <div >\r\n            <IconButton aria-label= \"show 11 new mails\" color=\"inherit\">\r\n                <Badge\r\n                    badgeContent={props.NewMessagesCount.toString()}\r\n                    color=\"secondary\">\r\n                    <MailIconHeader />\r\n                </Badge>\r\n            </IconButton></div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default MessagesIcon","import React from \"react\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport UsersIcon from '@material-ui/icons/People';\r\n\r\n\r\n\r\nconst MessagesIcon = (props) =>{\r\n    return <div>\r\n        <div >\r\n            <IconButton  color=\"inherit\">\r\n                    <UsersIcon />\r\n            </IconButton>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MessagesIcon","import React from \"react\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ListIcon from '@material-ui/icons/ListAlt';\r\n\r\n\r\n\r\nconst ToDoListsIcon = (props) =>{\r\n    return <div>\r\n        <div >\r\n            <IconButton  color=\"inherit\">\r\n                <ListIcon />\r\n            </IconButton>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ToDoListsIcon","import React,{useEffect,useState} from 'react';\r\nimport hc from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport AccountIconComponent from \"./AcountIcon\";\r\nimport MessagesIcon from \"./MessagesIcon\";\r\nimport UsersIcon from \"./UsersIcon\"\r\nimport ToDoListsIcon from \"./ToDoListsIcon\";\r\n\r\nconst Header = (props) => {\r\n\r\nlet [NMC,SetNMC] = useState(props.NewMessagesCount)\r\n\r\n    useEffect(() => {\r\n        SetNMC(props.NewMessagesCount)\r\n        }, [props.NewMessagesCount]\r\n    )\r\n\r\n    return <header className={hc.header}>\r\n        <div className={hc.item}>\r\n            {props.IsLogined\r\n                ?\r\n                <div className={hc.IconsWrapper}>\r\n\r\n                    <div className={hc.startPosition}>\r\n\r\n                    </div>\r\n                    <div className={`${hc.item} ${hc.active}`}>\r\n                        <NavLink activeClassName={hc.active} to={\"/ToDoLists/\"}>\r\n                            <ToDoListsIcon/>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <div className={`${hc.item} ${hc.active}`}>\r\n                        <NavLink activeClassName={hc.active} to={\"/Users/\"}>\r\n                            <UsersIcon/>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <div className={hc.MessagesIconPosition}>\r\n                        <div className={`${hc.item} ${hc.active}`}>\r\n                            <NavLink activeClassName={hc.active} to={\"/Dialogs/\"}>\r\n                                <MessagesIcon NewMessagesCount={NMC}/>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <AccountIconComponent LogOutThunk={props.LogOutThunk}\r\n                                          UserProfile={props.UserProfile}\r\n                                          OwnName={props.OwnName}\r\n                    />\r\n                </div>\r\n                :\r\n                <div className={hc.unloginedHeader}>\r\n                    <div className={hc.unloginedUsersIcon}>\r\n                    <div className={`${hc.item} ${hc.active}`}>\r\n                        <NavLink activeClassName={hc.active} to={\"/Users/\"}>\r\n                            <UsersIcon/>\r\n                        </NavLink>\r\n                    </div>\r\n                    </div>\r\n\r\n                     <div className={hc.loginPosition}>\r\n                        <NavLink className={hc.loginButton} to={'/login'}>\r\n                            Login\r\n                        </NavLink>\r\n                     </div>\r\n\r\n                 </div>\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\nexport default Header;\r\n","import React from 'react'\r\nimport LoadingSvg from '../../../assetss/images/loader1.gif';\r\nimport ls from './LoaderStyles.module.css'\r\n\r\n\r\n\r\nlet Preloader = (props ) =>{\r\n\r\n    return <img className={ls.large} src={LoadingSvg}/>\r\n}\r\nexport default Preloader","export const GetProfileSelector = (state) =>{\r\n    return state.ProfileData.profile\r\n}\r\nexport const GetStatusSelector = (state) =>{\r\n    return state.ProfileData.status\r\n}\r\nexport const GetIsMyPageSelector = (state) =>{\r\n    return state.ProfileData.IsMyPage\r\n}\r\nexport const GetPostsSelector = (state) =>{\r\n    return state.ProfileData.Posts\r\n}\r\nexport const GetOwnNameSelector = (state) =>{\r\n    return state.ProfileData.OwnName\r\n}\r\nexport const GetProfileIsFetching = (state) =>{\r\n    return state.ProfileData.IsFetching\r\n}\r\n\r\n","export const GetUserIDSelector = (state) =>{\r\n    return state.Auth.userId\r\n}\r\nexport const GetIsLoginedSelector = (state) => {\r\n    return state.Auth.IsLogined\r\n}\r\nexport const GetLoginSelector = (state) => {\r\n    return state.Auth.login\r\n}\r\nexport const GetIsFetchingSelector = (state) => {\r\n    return state.Auth.IsFetching\r\n}","export const GetinitionSelector = (state) =>{\r\n    return state.Init.inition\r\n}\r\nexport const GetNewMessagesCountSelector = (state) =>{\r\n    return state.MessagesData.NewMessagesCount\r\n}\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {LogOutThunk} from \"../../data/AuthReducer\";\r\nimport {GetOwnNameSelector, GetProfileSelector} from \"../../data/ProfileSelectors\";\r\nimport {GetNewMessagesCountThunk} from \"../../data/DIalogsReduser\"\r\nimport {\r\n    GetIsFetchingSelector,\r\n    GetIsLoginedSelector,\r\n    GetLoginSelector,\r\n    GetUserIDSelector\r\n} from \"../../data/AuthSelectors\";\r\nimport {GetNewMessagesCountSelector} from \"../../data/InitialozationSelectors\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        if(this.props.IsLogined){\r\n            this.props.GetNewMessagesCountThunk()\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props.IsLogined !== prevProps.IsLogined ){\r\n            this.props.GetNewMessagesCountThunk()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n        {this.props.IsFetching ? <Preloader/> :null}\r\n          <Header {...this.props} />\r\n          </>\r\n    }\r\n\r\n}\r\nlet MapStateToProps = (state) => ({\r\n    IsFetching : GetIsFetchingSelector(state),\r\n    IsLogined: GetIsLoginedSelector(state),\r\n    login:GetLoginSelector(state),\r\n    UserProfile: GetProfileSelector(state),\r\n    OwnID : GetUserIDSelector(state),\r\n    OwnName : GetOwnNameSelector(state),\r\n    NewMessagesCount : GetNewMessagesCountSelector(state)\r\n})\r\n\r\nexport default HeaderContainer = connect(MapStateToProps,\r\n    {LogOutThunk,GetNewMessagesCountThunk})\r\n(HeaderContainer);\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport d from \"./Dialogs.module.css\";\r\nimport UserPhoto from \"./../assetss/images/userPhoto.jpg\"\r\nimport pc from \"../Profile/UserInfo/UserInfo.module.css\";\r\n\r\n\r\nconst DialogInfo = (props) => {\r\n\r\n    const date = props.MessageSendTime.split(\"T\")[0]\r\n    const time = props.MessageSendTime.split(\"T\")[1].split(\".\")[0]\r\n\r\n    return <div className={d.DialogArea}>\r\n        <div className={`${d.item} ${d.active}`}>\r\n        <NavLink   to={`/messages/${props.UserID}`}>\r\n        <div className={d.Main}>\r\n            <div className={pc.UserName}>\r\n                   {props.DialogUserName}\r\n                   <div>\r\n                {props.DialogUserAvatar ?\r\n                    <NavLink to={'/Profile/' + props.UserID}>\r\n                    <img className={d.DialogUserPhoto} src={props.DialogUserAvatar}/>\r\n                    </NavLink>\r\n                    :\r\n                    <NavLink to={'/Profile/' + props.UserID}>\r\n                    <img  className={d.DialogUserPhoto} src = {UserPhoto} />\r\n                    </NavLink>\r\n                }\r\n                   </div>\r\n            </div >\r\n            <div className={d.padding}>\r\n                    {props.NewMessagesCount  !== 0 ?\r\n                        \"you have a \" + props.NewMessagesCount + \" new messages\"\r\n                        : \"you don't have a new messages\"}\r\n            </div>\r\n            <div className={d.padding}>\r\n                {\r\n                    props.MessageSendTime ?\r\n                    <div>\r\n                        last message was :\r\n                        <div>\r\n                            {date}\r\n                        </div>\r\n                        <div>\r\n                            {time}\r\n                        </div>\r\n                    </div>\r\n                        : null\r\n                }\r\n            </div>\r\n        </div>\r\n        </NavLink>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default DialogInfo;","import React from 'react'\r\nimport DialogInfo from \"./DialogInfo\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return (<div>\r\n            <>\r\n                {props.IsFetching ? <Preloader/> :\r\n                    props.MessagesData.AllDialogs.map(el => {\r\n                        return <DialogInfo key={el.id} DialogUserName={el.userName}\r\n                                           DialogUserAvatar={el.photos.small ?\r\n                                               el.photos.small\r\n                                               : el.photos.large}\r\n                                           NewMessagesCount={el.newMessagesCount}\r\n                                           MessageSendTime={el.lastDialogActivityDate}\r\n                                           UserID={el.id}\r\n                        />\r\n                    })\r\n                }\r\n            </>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import React from \"react\"\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet MapStateToPropsForRedirect = (state)=>{\r\n    return{\r\n        IsLogined : state.Auth.IsLogined\r\n    }\r\n}\r\n\r\nexport const AuthRedirect = (Component) =>{\r\nclass RedirectComp extends React.Component {\r\n    render() {\r\n        if (!this.props.IsLogined) {\r\n            // редирект на страничку авторизации\r\n            return <Redirect to={\"/Login\"} />\r\n        }\r\n        return <Component {...this.props} />\r\n    }\r\n}\r\nlet ConectedAuthRedirectComp = connect(MapStateToPropsForRedirect)(RedirectComp)\r\nreturn ConectedAuthRedirectComp\r\n}","export const GetAllDialogsSelector = (state) =>{\r\n    return state.MessagesData.AllDialogs\r\n}\r\nexport const GetMessagesDataSelector = (state) =>{\r\n    return state.MessagesData\r\n}\r\nexport const GetIsFetchingDialogs = (state) =>{\r\n    return state.MessagesData.IsFetching\r\n\r\n}\r\n/*export const GetDialogsMessagesSelector = (state) =>{\r\n    return state.MessagesData.DialogsMessages\r\n}\r\nexport const GetUserAvatarSelector = (state) =>{\r\n    return state.MessagesData.UserAvatar\r\n}\r\nexport const GetinterlocutorAvatarSelector = (state) =>{\r\n    return state.MessagesData.InterlocutorAvatar\r\n}*/\r\n\r\n","import React from 'react'\r\nimport {SetNewMessages,GetAllDialogsThunk,\r\n    GetNewMessagesThunk,SendNewMessageThunk} from \"../../data/DIalogsReduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthRedirect} from \"../hocs/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {GetAllDialogsSelector, GetIsFetchingDialogs, GetMessagesDataSelector} from \"../../data/DialogsSelectors\";\r\nimport { withRouter} from 'react-router-dom'\r\n\r\n\r\nclass DialogsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n      this.props.GetAllDialogsThunk()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialogs {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => ({\r\n MessagesData: GetMessagesDataSelector(state),\r\n    AllDialogs : GetAllDialogsSelector(state),\r\n    IsFetching : GetIsFetchingDialogs(state)\r\n})\r\n\r\nexport default compose(connect(StateToProps, {SetNewMessages,\r\n        GetAllDialogsThunk,GetNewMessagesThunk,SendNewMessageThunk}),\r\n    AuthRedirect,\r\n    withRouter)(DialogsContainer)","import PS from \"./Paginator.module.css\";\r\nimport React, {useState} from \"react\"\r\n\r\nconst Paginator = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize) // расчет кол-ва страниц\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let [PortionNumber, SetPortionNumber] = useState(1)\r\n    let LeftBorderOfPortion = (PortionNumber - 1) * props.PortionSize + 1\r\n    let RightBorderOfPortion = PortionNumber * props.PortionSize\r\n    let PortionCount = Math.ceil(pagesCount / props.PortionSize) // расчет кол-ва порций\r\n\r\n    return <div className={PS.setNumbers}>\r\n        <div className={PS.NumbersFont}>\r\n        {PortionNumber > 1 &&\r\n        <button className={PS.button} onClick={() => {\r\n            SetPortionNumber(PortionNumber - 1)\r\n        }}> back </button>}\r\n        {pages.filter(p => p >= LeftBorderOfPortion && p <= RightBorderOfPortion).map((p) => {\r\n            // нумерация страниц\r\n            return (\r\n\r\n                <span  className={props.currentPage === p && PS.numbers}\r\n                      onClick={(ev) => {\r\n                          props.OnChangedPage(p)\r\n                      }}>\r\n                            {\"    \" + p}\r\n                        </span>\r\n\r\n            )\r\n        })}\r\n        &nbsp;&nbsp;\r\n        {PortionCount > PortionNumber &&\r\n\r\n        <button className={PS.button} onClick={() => {\r\n            SetPortionNumber(PortionNumber + 1)\r\n        }}>next </button>}\r\n    </div>\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport um from \"./Users.module.css\";\r\nimport UserPhoto from \"../assetss/images/userPhoto.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport pc from \"../Profile/UserInfo/UserInfo.module.css\";\r\n\r\n\r\nlet User = (props) => {\r\n\r\n    return <div className={um.Main}>\r\n        <div>\r\n\r\n            <NavLink to={'/Profile/' + props.user.id}>\r\n                <img className={um.img} src={props.user.photos.small != null ? props.user.photos.small : UserPhoto}/>\r\n            </NavLink>\r\n            <div  className={pc.UserName}>\r\n                {props.user.name}\r\n            </div>\r\n            { props.IsLogined ?\r\n            <div>\r\n\r\n                { props.user.followed\r\n                        ? <button disabled={props.InProcess.some(id =>  id === props.user.id)}\r\n                                  onClick={() => {\r\n                                      props.OnUnFollow(props.user.id)\r\n                                  }} className={um.unfollow}>\r\n                            unfollow\r\n                        </button>\r\n\r\n\r\n                        : <button disabled={props.InProcess.some(id => id === props.user.id)}\r\n                                  onClick={() => {\r\n                                      props.OnFollow(props.user.id)\r\n                                  }} className={um.follow}>\r\n                            follow\r\n                        </button>\r\n                }\r\n            </div>\r\n                :null\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default User","import React,{useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n const  FindUserModal = (props)=> {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Button  variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                Search user\r\n            </Button>\r\n            <Dialog    open={open} onClose={handleClose} >\r\n                <DialogTitle >Search user by name</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                       enter user name with you looking for\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        onChange={props.OnFindUserFieldValueChanging}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"FindingUserName\"\r\n                        type=\"userName\"\r\n                        fullWidth\r\n                        name=\"finduser\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Go back\r\n                    </Button>\r\n                    <Button onClick={props.SubmitModal} color=\"primary\">\r\n                        Search\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\nexport default FindUserModal","import React, {useEffect, useState} from \"react\"\r\nimport FUStyles from \"./FindUser.module.css\";\r\nimport User from \"./User\";\r\nimport FindUserModal from \"../MaterialUI/ModalWindow/UserSearchModal\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\n\r\n\r\nconst FindUser = (props) => {\r\n    let [FoundedUser, SetFoundedUser] = useState(props.FoundedUser)\r\n    let[FindUserFieldValue,SetFindUserFieldValue] = useState(\"\");\r\n\r\n    const OnFindUserFieldValueChanging = (el) =>{\r\n        SetFindUserFieldValue(el.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n            SetFoundedUser(props.FoundedUser)\r\n        }, [props.FoundedUser]\r\n    )\r\n\r\n    let [FoundingMode, SetFoundingMode] = useState(false)\r\n\r\n    const FoundingModeON = () => {\r\n        SetFoundingMode(true)\r\n\r\n    }\r\n    const FoundingModeOFF = () => {\r\n        SetFoundingMode(false)\r\n    }\r\n\r\n\r\n    const FindUser = () => {\r\n        props.FindUserThunk(FindUserFieldValue)\r\n        FoundingModeON()\r\n    }\r\n\r\n\r\n    return <div>\r\n        {!FoundingMode ?\r\n            <div className={FUStyles.FindUserButton}>\r\n                <FindUserModal SubmitModal={FindUser}\r\n                               OnFindUserFieldValueChanging={OnFindUserFieldValueChanging}/>\r\n            </div>\r\n\r\n            :\r\n            <div>\r\n                {props.FindUserIsFetching ? <Preloader size={\"small\"}/>\r\n                : <div>\r\n                    <div className={FUStyles.foundArea}>\r\n                    {FoundedUser &&\r\n                    <div>\r\n                        <h2 className={FUStyles.SearchingResult}>\r\n                            Searching result :\r\n                            <div>\r\n\r\n                                {FoundedUser && FoundedUser.items.length === 0 ?\r\n                                    \"no one user with this name\"\r\n                                    : \"founded \" + FoundedUser.items.length + \" users \"}\r\n\r\n                            </div>\r\n                        </h2>\r\n\r\n                        <div className={FUStyles.FoundedUsers}>\r\n                            <div className={FUStyles.FoundedUsersWrapper}>\r\n                                {FoundedUser.items.map(item => <User user={item}\r\n                                                                     key={item.id}\r\n                                                                     InProcess={props.InProcess}\r\n                                                                     OnUnFollow={props.OnUnFollow}\r\n                                                                     OnFollow={props.OnFollow}\r\n                                                                     IsLogined={props.IsLogined}/>)}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    }\r\n\r\n                </div>\r\n                <button\r\n                    className={FUStyles.GoBack}\r\n                    onClick={FoundingModeOFF}>\r\n                    go back\r\n                </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        }\r\n\r\n    </div>\r\n\r\n}\r\nexport default FindUser","import React from 'react'\r\nimport Paginator from \"../assetss/common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport FindUser from \"./FindUser\";\r\nimport us from \"./Users.module.css\"\r\n\r\n\r\n\r\n\r\nlet PurifyUsers = (props) => {\r\n\r\n\r\n    {props.ChangePortionSize(15)}\r\n    return <div>\r\n\r\n            <FindUser  FindUserThunk={props.FindUserThunk}\r\n                      FoundedUser={props.FoundedUser}\r\n                      InProcess={props.InProcess}\r\n                      OnUnFollow={props.OnUnFollow}\r\n                      OnFollow={props.OnFollow}\r\n                      IsLogined={props.IsLogined}\r\n                       FindUserIsFetching={props.FindUserIsFetching}\r\n            />\r\n\r\n        <div className={us.UsersWrapper}>\r\n        { props.Users.map(us =>  <User\r\n            user={us}\r\n            key={us.id}\r\n            InProcess={props.InProcess}\r\n            OnUnFollow={props.OnUnFollow}\r\n            OnFollow={props.OnFollow}\r\n            IsLogined={props.IsLogined}\r\n        />)\r\n        }\r\n        </div>\r\n\r\n        <div className={us.PaginatorPosition}>\r\n       <Paginator OnChangedPage={props.OnChangedPage}\r\n                  currentPage={props.currentPage}\r\n                  totalUsersCount={props.totalUsersCount}\r\n                      pageSize={props.pageSize}\r\n                  PortionSize={props.PortionSize}\r\n       />\r\n        </div>\r\n    </div>\r\n}\r\nexport default PurifyUsers","export const GetUsers = (state) =>{\r\n    return state.UsersData.Users\r\n}\r\nexport const GetPageSize = (state) =>{\r\n    return state.UsersData.pageSize\r\n}\r\nexport const GetTotalUsersCount = (state) =>{\r\n    return state.UsersData.totalUsersCount\r\n}\r\n\r\nexport const GetCurrentPage = (state) =>{\r\n    return  state.UsersData.currentPage\r\n}\r\nexport const GetIsFeching = (state) =>{\r\n    return state.UsersData.IsFetching\r\n}\r\nexport const FindUserIsFetching = (state) =>{\r\n    return state.UsersData.FindUserIsFetching\r\n}\r\nexport const GetInProgress = (state) => {\r\n    return state.UsersData.InProcess\r\n}\r\n\r\nexport const GetPortionSize = (state) => {\r\n    return state.UsersData.PortionSize\r\n}\r\nexport const GetFoundedUserSelector = (state) => {\r\n    return state.UsersData.FoundedUser\r\n}\r\n\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followThunk,\r\n    unfollowThunk,\r\n    SetCurrentPage,\r\n    getUsersThunk,\r\n    ToggleInProcess,\r\n    ChangePortionSize,FindUserThunk\r\n} from \"../../data/UsersReduser\";\r\nimport PurifyUsers from \"./Users\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    GetCurrentPage,\r\n    GetInProgress,\r\n    GetIsFeching,\r\n    GetPageSize,\r\n    GetTotalUsersCount,\r\n    GetUsers,\r\n    GetPortionSize, GetFoundedUserSelector,FindUserIsFetching\r\n} from \"../../data/Users-Selectors\";\r\nimport { GetIsLoginedSelector} from \"../../data/AuthSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    /* this component using for make requests on server for a new users and drawing\r\nUi component (Users)*/\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    OnChangedPage = (pageNumber) => {\r\n        this.props.SetCurrentPage(pageNumber)\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.IsFetching ? <Preloader/> :\r\n                <PurifyUsers Users={this.props.Users}\r\n                             totalUsersCount={this.props.totalUsersCount}\r\n                             pageSize={this.props.pageSize}\r\n                             OnChangedPage={this.OnChangedPage}\r\n                             OnFollow={this.props.followThunk}\r\n                             OnUnFollow={this.props.unfollowThunk}\r\n                             currentPage={this.props.currentPage}\r\n                             ToggleInProcess={this.props.ToggleInProcess}\r\n                             InProcess={this.props.InProcess}\r\n                             IsLogined={this.props.IsLogined}\r\n                             ChangePortionSize={this.props.ChangePortionSize}\r\n                             PortionSize={this.props.PortionSize}\r\n                             FindUserThunk={this.props.FindUserThunk}\r\n                             FoundedUser={this.props.FoundedUser}\r\n                             FindUserIsFetching={this.props.FindUserIsFetching}\r\n                />\r\n            }\r\n        </>\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => {\r\n    return {\r\n        IsLogined : GetIsLoginedSelector(state),\r\n        Users: GetUsers(state),\r\n        pageSize: GetPageSize(state),\r\n        totalUsersCount: GetTotalUsersCount(state),\r\n        currentPage: GetCurrentPage(state),\r\n        IsFetching: GetIsFeching(state),\r\n        FindUserIsFetching: FindUserIsFetching(state),\r\n        InProcess: GetInProgress(state),\r\n        PortionSize : GetPortionSize(state),\r\n        FoundedUser : GetFoundedUserSelector(state)\r\n    }\r\n}\r\n\r\n/*let DispatchToProps = (dispatch) => {\r\n    return {\r\n        onFollow: (userID) => {\r\n\r\n            dispatch(follow_AC(userID))\r\n        },\r\n        onUnFollow: (userID) => {\r\n\r\n            dispatch(unfollow_AC(userID))\r\n        },\r\n        setUsers: (Users) => {\r\n            dispatch(setUsers_AC(Users))\r\n        },\r\n        SetCurrentPage: (NumberOfPage) => {\r\n            dispatch(setCurrentPage_AC(NumberOfPage))\r\n        },\r\n        SetTotalCountOfUsers: (totalCount) => {\r\n            dispatch(SetTotalCountOfUsers_AC(totalCount))\r\n        },\r\n        ToggleIsFetching: (IsFetching) => {\r\n            dispatch(IsFetchingToggle_AC(IsFetching))\r\n        }\r\n    }\r\n}*/\r\n\r\n\r\nexport default compose(\r\n    connect(StateToProps,\r\n        {followThunk, unfollowThunk, SetCurrentPage,\r\n            ToggleInProcess, getUsersThunk,ChangePortionSize,FindUserThunk})\r\n)(UsersContainer)","import React, {useState, useEffect} from \"react\"\r\n\r\nconst ProfileStatusF = (props) => {\r\n\r\n\r\n    let [IsStatusChanging, SetIsStatusChanging] = useState(false)\r\n    let [Status, SetStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n            SetStatus(props.status)\r\n        }, [props.status]\r\n    )\r\n\r\n    const StatusChangingON = () => {\r\n        SetIsStatusChanging(true)\r\n    }\r\n\r\n    const StatusChangingOFF = () => {\r\n        SetIsStatusChanging(false)\r\n        props.SetProfileStatus(Status)\r\n\r\n    }\r\n\r\n    const OnStatusChange = (e) => {\r\n        SetStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (<div>\r\n            {props.IsMyPage ?\r\n                <div>\r\n                    {!IsStatusChanging ?\r\n                        <div>\r\n                <span onDoubleClick={StatusChangingON}>\r\n                Status  : {Status || \"the status is empty\"\r\n                }\r\n                </span>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <input onChange={OnStatusChange} onBlur={StatusChangingOFF} autoFocus={true}\r\n                                   value={Status}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                : Status || \"the status is empty\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusF","import React from \"react\"\r\nimport cs from \"./Contact.module.css\"\r\n\r\nconst Contact = (props) =>{\r\n\r\n\r\n    return <span>\r\n        {props.ContactValue &&\r\n        <div className={cs.contact} >\r\n        {props.ContactName} : {props.ContactValue}\r\n        </div>\r\n        }\r\n    </span>\r\n}\r\n\r\n\r\nexport default Contact","import React from \"react\"\r\nimport Contact from \"./Contact\";\r\nimport pds from \"./ProfileData.module.css\"\r\n\r\nconst ProfileData = (props) => {\r\nconst ProfileContacts = Object.keys(props.profile.contacts)\r\nconst ProfileContactsValues = ProfileContacts.map(el => props.profile.contacts[el])\r\nconst ValueNotNull = (values) =>{\r\n        return values !== null\r\n    }\r\n\r\n    return <div className={pds.aboutME}>\r\n        {\r\n            props.profile.aboutMe && <div>\r\n            {props.profile.aboutMe}\r\n        </div>\r\n        }\r\n\r\n        {\r\n            props.profile.lookingForAJob ?\r\n            <div>\r\n                Im looking for a job\r\n            </div>\r\n            :\r\n            <div>\r\n                Im have a job\r\n            </div>\r\n        }\r\n        {props.profile.lookingForAJobDescription &&\r\n        <div>\r\n            {props.profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div className={pds.contacts}>\r\n            <div>\r\n                {props.IsMyPage && <button className={pds.buttonEditInformation}\r\n                                           onClick={props.ContactsEditingOn}>\r\n                    edit information\r\n                </button>}\r\n            </div>\r\n            {\r\n                ProfileContactsValues.some(ValueNotNull) ?\r\n                    \"My contacts :\"\r\n                    : null\r\n            }\r\n\r\n            {ProfileContacts.map(key => {\r\n                return <Contact key={key} ContactName={key}\r\n                                ContactValue={props.profile.contacts[key]}\r\n                                SetIsAnyContact={props.SetIsAnyContact}/>\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileData","\r\nimport UserPhoto from \"../../assetss/images/userPhoto.jpg\";\r\nimport React from \"react\"\r\nimport pc from './UserInfo.module.css'\r\nimport Done from '@material-ui/icons/AddAPhoto';\r\n\r\nconst ProfileAvatar = (props) => {\r\n\r\n    const OnPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.SetProfilePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return <div>\r\n\r\n        <div>\r\n            {props.IsMyPage &&\r\n            <div className={pc.AddPhotoButtonPosition}>\r\n                <input className={pc.SelectPhoto} type={\"file\"}\r\n                       onChange={OnPhotoSelected}\r\n                       accept=\"image/*\"\r\n                       id={\"file\"}/>\r\n\r\n                <label htmlFor=\"file\">\r\n                    <Done   color=\"primary\"  />\r\n                </label>\r\n            </div>\r\n            }\r\n        </div>\r\n\r\n        <div>\r\n            <img id={\"avatar\"} className={pc.UserPhoto}\r\n                 src={(props.photos.large && props.photos.small) == null ? UserPhoto : props.photos.large}/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\nexport default ProfileAvatar","import React from 'react'\r\nimport EVS from \"./ElementsValidators.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const TextArea = ({input,meta,...props}) =>{\r\n\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n         <textarea className={EVS.textarea} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n            </div>\r\n    )\r\n\r\n}\r\nexport const TextAreaAboutMe = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <textarea className={EVS.textareaAboutMe} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport const TextAreaMessage = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <textarea className={EVS.TextAreaMessage} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport const TextAreaDialogsMessage = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <textarea className={EVS.TextAreaDialogsMessage} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport const Input = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <div>\r\n            <input className={EVS.input} {...input} {...props}/>\r\n            </div>\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const InputName = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n\r\n                <input className={EVS.input} {...input} {...props}/>\r\n\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\nexport const ContactFormInput = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n                <input className={EVS.ContactFormInput} {...input} {...props} />\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\nexport const TaskFormInput = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <input  className={EVS.TaskFormInput} {...input} {...props}/>\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const CreateField = (placeholder,name,validators,component,props ={},text =\"\") =>{\r\n  return  <div>\r\n        <Field   placeholder={placeholder} name={name} validate={validators}\r\n        component={component} {...props}/> {text}\r\n\r\n    </div>\r\n}","import React from \"react\"\r\nexport const required = (value) =>{\r\n\r\nif(value ){\r\n    return undefined\r\n}\r\nelse return <div>\r\n    This field is required\r\n</div>\r\n\r\n}\r\n\r\n\r\nexport const MaxLengthCreator = (MaxLengthValue) =>{\r\n    return(value =0 )=>{\r\nif(value && value.length > MaxLengthValue) {\r\n    return `Maximal length is a ${MaxLengthValue} symbols`\r\n}\r\nelse return undefined\r\n    }\r\n}\r\n\r\n","import React from \"react\"\r\nimport {\r\n    Input,\r\n    CreateField,\r\n    TextAreaAboutMe,\r\n    ContactFormInput,InputName\r\n} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport pc from './UserInfo.module.css'\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\n\r\n\r\nconst max300=MaxLengthCreator(300)\r\nconst max150=MaxLengthCreator(150)\r\nconst max50=MaxLengthCreator(50)\r\n\r\nconst ProfileDataEditorForm = (props) => {\r\n\r\n    return <div className={pc.EditorFormBG}>\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <button className={pc.buttonSaveChanges}>\r\n                Save changes\r\n            </button>\r\n            <button className={pc.buttonGoBack } onClick={props.ContactsEditingOFF}>\r\n                go back\r\n            </button>\r\n\r\n            <div className={pc.MyName}>\r\n                <b>My name is : </b>\r\n                {CreateField(\"Enter your full name\", \"fullName\", [required,max50], InputName)}\r\n\r\n            </div>\r\n\r\n            <div>\r\n                <b>are u looking for a job? :</b>\r\n                {CreateField(\"\", \"lookingForAJob\", [max300], Input, {type: \"checkbox\"})}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills:</b>\r\n                {CreateField(\"Enter description\", \"lookingForAJobDescription\", [max150],\r\n                    TextAreaAboutMe)}\r\n            </div>\r\n            <div>\r\n                <b> about me:</b>\r\n                {CreateField(\"print something about you\", \"aboutMe\", [max300],\r\n                    TextAreaAboutMe)}\r\n            </div>\r\n\r\n            <div className={pc.MyContacts}>My contacts :</div>\r\n            {props.error\r\n                ?\r\n                <div className={pc.FormError}>\r\n                    {props.error}\r\n                </div>\r\n                : null}\r\n            <div className={pc.ContactsForm}>\r\n                {Object.keys(props.contacts).map(key => {\r\n                    return <div key={key}>\r\n                        {key} : {CreateField(key, \"contacts.\" + key, [max150], ContactFormInput)}\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n\r\n\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default ProfileDataEditorForm","import React, {useState} from \"react\"\r\nimport pds from \"./ProfileData.module.css\";\r\nimport lm from \"../../Login/login.module.css\";\r\nimport {CreateField, TextAreaMessage} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport d from \"../../Dialogs/Dialogs.module.css\";\r\nimport pc from \"./UserInfo.module.css\";\r\n\r\nlet maxLength300 = MaxLengthCreator(300)\r\n\r\nconst SendMessageOnUserPageForm = (props) => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    {CreateField(\"Enter message text\", \"MessageFromUserPage\",\r\n                        [required, maxLength300], TextAreaMessage)}\r\n                </div>\r\n\r\n                {props.error\r\n                    ?\r\n                    <div className={lm.AuthError}>\r\n                        {props.error}\r\n                    </div>\r\n                    : null\r\n                }\r\n                <div>\r\n                    <button className={pc.buttonSaveChanges}> send message</button>\r\n                    <button className={pc.buttonGoBack }\r\n                            onClick={props.MessageSendingModOFF}> go back </button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>)\r\n}\r\nconst ReduxSendMessageOnUserPageForm = reduxForm({form: 'SendMessageForm'})(SendMessageOnUserPageForm)\r\n\r\nconst SendMessageOnUserPage = (props) => {\r\n\r\n    let [ChosedSendMessage, SetChosedSendMessage] = useState(false)\r\n\r\n\r\n    const MessageSendingModON = () => {\r\n        SetChosedSendMessage(true)\r\n    }\r\n\r\n    const MessageSendingModOFF = () => {\r\n        SetChosedSendMessage(false)\r\n    }\r\n\r\n    const SendNewMessage = (Formdata) => {\r\n        props.SendNewMessageThunk(props.UserID, Formdata.MessageFromUserPage)\r\n        SetChosedSendMessage(false)\r\n    }\r\n\r\n\r\n    return (<div>\r\n\r\n\r\n            {!props.IsMyPage ?\r\n                <div>\r\n                    {!ChosedSendMessage ?\r\n                        <div>\r\n                            <button className={pds.buttonEditInformation} onClick={MessageSendingModON}>\r\n                                send message to {props.UserName}\r\n                            </button>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            < ReduxSendMessageOnUserPageForm\r\n                                onSubmit={SendNewMessage}\r\n                                MessageSendingModOFF={MessageSendingModOFF}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                : \"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SendMessageOnUserPage","import React, {useState} from \"react\"\r\nimport pc from './UserInfo.module.css'\r\nimport Preloader from \"../../assetss/common/Loader/Loader\";\r\nimport ProfileStatusF from \"./ProfileStatusF\";\r\nimport ProfileData from \"./ProfileData\"\r\nimport ProfileAvatar from \"./ProfileAvatar\";\r\nimport ProfileDataEditorForm from \"./ProfileDataEditorForm\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport SendMessageOnUserPage from \"./SendMessageOnUserPage\";\r\n\r\n\r\nconst UserInfo = (props) => {\r\n\r\n    let [ContactsIsEditing, SetContactsIsEditing] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    const ContactsEditingOn = () => {\r\n        SetContactsIsEditing(true)\r\n    }\r\n\r\n    const ContactsEditingOFF = () => {\r\n        SetContactsIsEditing(false)\r\n    }\r\n\r\n    const PutNewProfileInfoToServer = (formData) => {\r\n\r\n      props.SaveProfileData(formData).then(()=>{\r\n          SetContactsIsEditing(false)\r\n      })\r\n    }\r\n\r\n    return <div className={pc.userdescrition}>\r\n        <div className={pc.ProfileName}>\r\n            {props.profile.fullName != null ? props.profile.fullName : null}\r\n        </div>\r\n\r\n        <ProfileAvatar IsMyPage={props.IsMyPage}\r\n                       photos={props.profile.photos}\r\n                       SetProfilePhoto={props.SetProfilePhoto}/>\r\n\r\n\r\n        <ProfileStatusF status={props.status}\r\n                        SetProfileStatus={props.SetProfileStatus}\r\n                        IsMyPage={props.IsMyPage}/>\r\n        {props.IsLogined &&\r\n            <SendMessageOnUserPage UserName={props.profile.fullName}\r\n                                   IsMyPage={props.IsMyPage}\r\n                                   UserID={props.profile.userId}\r\n                                   SendNewMessageThunk={props.SendNewMessageThunk}\r\n            />\r\n        }\r\n\r\n\r\n        {\r\n            ContactsIsEditing ?\r\n            <div>\r\n                <ProfileDataEditorFormRedux initialValues={props.profile}\r\n                                            contacts={props.profile.contacts}\r\n                                            onSubmit={PutNewProfileInfoToServer}\r\n                       ContactsEditingOFF={ContactsEditingOFF}/>\r\n            </div>\r\n            : <div>\r\n                <ProfileData profile={props.profile}\r\n                             IsMyPage={props.IsMyPage}\r\n                             ContactsEditingOn={ContactsEditingOn}/>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\nconst ProfileDataEditorFormRedux = reduxForm({form: 'ProfileDataEditorForm'})(ProfileDataEditorForm)\r\nexport default UserInfo;","import React from 'react';\r\nimport pc from './Post.module.css'\r\nimport UserPhoto from \"../../../assetss/images/userPhoto.jpg\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={pc.item}>\r\n            <img className={pc.img} src={(props.profile.photos.large && props.profile.photos.small) == null ? UserPhoto : props.profile.photos.large}/>\r\n            {props.message}\r\n            <div>\r\n                {props.likecount} <span>\r\n                    <img className={pc.like} src='https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/Ei-like.svg/1024px-Ei-like.svg.png'/>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Post;","import React from 'react';\r\nimport pc from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, MaxLengthCreator} from \"../../utils/validators\";\r\nimport {TextArea} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\"\r\n\r\n\r\nconst maxValue250 = MaxLengthCreator(250)\r\n    const MyPostForm = (props) => {\r\n\r\n        return <div>\r\n            {props.IsMyPage &&\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field name={'postArea'}\r\n                           placeholder={\"type any info here\"}\r\n                           component={TextArea}\r\n                           validate={[required, maxValue250]}/>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                    <button className={pc.button}> Send post</button>\r\n                </div>\r\n\r\n            </form>\r\n            }\r\n        </div>\r\n    }\r\n\r\nconst ReduxMyPostForm = reduxForm({form: 'mypost'})(MyPostForm )\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    const SendPost = (formDatas) => {\r\n        props.addpost(formDatas.postArea)\r\n\r\n    }\r\n\r\n    let Posts = props.posts.map(p => <Post message={p.Post} likecount={p.likesCount} profile={props.profile}/>);\r\n\r\n    return (\r\n        <div className={pc.pp}>\r\n            {props.IsMyPage ?  <h3>My posts</h3> :  <h3>Posts</h3>}\r\n            {<ReduxMyPostForm onSubmit={SendPost} {...props}/>}\r\n            <div className={pc.marginPost}>\r\n                {Posts}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nexport default MyPosts","import React from 'react';\r\nimport {addpost} from \"../../../data/ProfileReduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {GetIsMyPageSelector, GetPostsSelector} from \"../../../data/ProfileSelectors\";\r\n\r\n\r\nclass MyPostsConteiner extends React.PureComponent {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <MyPosts posts={this.props.posts}\r\n                     addpost={this.props.addpost}\r\n                     profile={this.props.profile}\r\n                     IsMyPage={this.props.IsMyPage}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet StateProps = (state) => ({\r\n    posts: GetPostsSelector(state),\r\n    IsMyPage: GetIsMyPageSelector(state)\r\n})\r\n\r\nexport default connect(StateProps, {addpost})(MyPostsConteiner)\r\n","import React from 'react';\r\nimport UserInfo from \"./UserInfo/UserInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsConteiner\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div>\r\n            {props.IsFetching ? <Preloader/> :\r\n                <>\r\n                <UserInfo profile={props.profile}\r\n                          status={props.status}\r\n                          SetProfileStatus={props.SetProfileStatus}\r\n                          IsMyPage={props.IsMyPage}\r\n                          SetProfilePhoto={props.SetProfilePhoto}\r\n                          SaveProfileData={props.SaveProfileData}\r\n                          SendNewMessageThunk={props.SendNewMessageThunk}\r\n                          IsLogined={props.IsLogined}\r\n                />\r\n                < MyPostsContainer  profile={props.profile} />\r\n                </>\r\n            }\r\n    </div>\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport { withRouter} from 'react-router-dom'\r\nimport {GetProfileThunk,\r\n    GetProfileStatusThunk,\r\n    SetProfileStatusThunk,\r\n    SetProfilePhotoThunk,\r\n    SetIsMyPage,UpdateProfileInfoThunk}\r\n    from '../../data/ProfileReduser'\r\nimport {compose} from \"redux\";\r\nimport {\r\n    GetIsMyPageSelector, GetProfileIsFetching,\r\n    GetProfileSelector, GetStatusSelector\r\n} from \"../../data/ProfileSelectors\";\r\nimport {GetIsLoginedSelector, GetUserIDSelector} from \"../../data/AuthSelectors\";\r\nimport {SendNewMessageThunk} from \"../../data/DIalogsReduser\"\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    ProfileDataToPaint(){\r\n        let ProfileID = this.props.match.params.userID\r\n        if(!ProfileID){\r\n            ProfileID = this.props.userID\r\n            this.props.SetIsMyPage(true) //  if this branch is going so we are in own page\r\n            if(!ProfileID){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        else{\r\n            this.props.SetIsMyPage(false) // if this branch is going so we are on some user page\r\n        }\r\n        if(ProfileID){\r\n            this.props.GetProfileThunk(ProfileID)\r\n            this.props.GetProfileStatusThunk(ProfileID)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.ProfileDataToPaint()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props.match.params.userID !== prevProps.match.params.userID ){\r\n            this.ProfileDataToPaint()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile  profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     SetProfileStatus={this.props.SetProfileStatusThunk}\r\n                      SetProfilePhoto={this.props.SetProfilePhotoThunk}\r\n                      IsMyPage={this.props.IsMyPage}\r\n                      SaveProfileData={this.props.UpdateProfileInfoThunk}\r\n                      SendNewMessageThunk={this.props.SendNewMessageThunk}\r\n                      IsLogined={this.props.IsLogined}\r\n                      IsFetching={this.props.IsFetching}\r\n                        />\r\n        )\r\n    }\r\n}\r\n\r\nlet MapStateToProps = (state) => ({\r\n    profile: GetProfileSelector(state),\r\n    status : GetStatusSelector(state),\r\n    userID : GetUserIDSelector(state),\r\n    IsMyPage : GetIsMyPageSelector(state),\r\n    IsFetching : GetProfileIsFetching(state),\r\n    IsLogined : GetIsLoginedSelector(state)})\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {GetProfileThunk,GetProfileStatusThunk,\r\n        SetProfileStatusThunk,SetProfilePhotoThunk,SetIsMyPage,\r\n        UpdateProfileInfoThunk,SendNewMessageThunk}),\r\n    withRouter)(ProfileContainer)","import React from \"react\"\r\nimport ms from \"./Messages.module.css\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport CloseButton from \"../../assetss/images/closeButton.png\"\r\n\r\n\r\nconst DeleteConfirmWindow = (props) => {\r\n    const closeWindow = () => {\r\n        props.SetToConfirmDeleting(false)\r\n    }\r\n\r\n    return <div>\r\n\r\n        <Dialog\r\n            className={ms.confirmDeletingWindow} open={props.ToConfirmDeleting}>\r\n\r\n            <div className={ms.wrapper}>\r\n                <img onClick={closeWindow} className={ms.imgClose} src={CloseButton}/>\r\n                <h3 className={ms.confirmDeletingWindowHeader}>\r\n                    Delete messages confirm\r\n                </h3>\r\n                <div className={ms.confirmDeletingWindowText}>\r\n                    Are you sure about this? you will can't restored this message.\r\n                    You will delete message only for your own\r\n                </div>\r\n                <div className={ms.confirmDeletingWindowButtons}>\r\n                    <button className={ms.deleteMessageStyle} onClick={props.deleteMessage}>\r\n                        yes\r\n                    </button>\r\n                    <span className={ms.buttontsDelta}>\r\n                       <button className={ms.deleteMessageStyle} onClick={closeWindow}>\r\n                           no\r\n                       </button>\r\n                </span>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </Dialog>\r\n\r\n    </div>\r\n\r\n}\r\nexport default DeleteConfirmWindow","import React,{useState} from \"react\"\r\nimport d from \"../Dialogs.module.css\";\r\nimport DeleteConfirmWindow from \"./DeleteConfirmWindow\";\r\nimport ToTrash from \"../../assetss/images/trash.png\"\r\n\r\nconst DeleteMessage = (props) =>{\r\nlet [ToConfirmDeleting,SetToConfirmDeleting]=useState(false)\r\nlet [MessageToRestore,SetMessageToRestore]=useState(false)\r\n\r\nconst deleteMessage = () =>{\r\n    props.DeleteMessageThunk(props.MessageID,props.DialoguserID)\r\n    SetMessageToRestore(true)\r\n    SetToConfirmDeleting(false)\r\n}\r\n\r\n\r\n\r\n    return <div className={d.ConfirmText}>\r\n        {!ToConfirmDeleting && !MessageToRestore ?\r\n            <img src={ToTrash} className={d.ToTrash} onClick={()=>{\r\n                SetToConfirmDeleting(true)}\r\n            }/>\r\n\r\n            :null\r\n        }\r\n\r\n        {MessageToRestore &&\r\n            <button className={d.deleteMessageStyle} onClick={()=>{\r\n                SetMessageToRestore(false)\r\n                SetToConfirmDeleting(false)\r\n            }}>\r\n                restore message\r\n            </button>\r\n        }\r\n\r\n\r\n            <DeleteConfirmWindow\r\n                SetToConfirmDeleting={SetToConfirmDeleting}\r\n                ToConfirmDeleting={ToConfirmDeleting}\r\n                deleteMessage={deleteMessage}\r\n\r\n            />\r\n\r\n        </div>\r\n\r\n}\r\n\r\nexport default DeleteMessage","import React, {useEffect,useState} from \"react\"\r\nimport Preloader from \"../../assetss/common/Loader/Loader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport mwuStyles from \"./Messages.module.css\"\r\nimport UserPhoto from \"../../assetss/images/userPhoto.jpg\";\r\nimport Viewed from \"../../assetss/images/viewed1.jpg\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport d from \"../Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextAreaDialogsMessage} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport Paginator from \"../../assetss/common/Paginator/Paginator\";\r\nimport DeleteMessage from \"./DeleteMessage\";\r\n\r\n\r\n\r\nconst maxValue300 = MaxLengthCreator(300)\r\n\r\n\r\nconst MessageWithUserForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div >\r\n\r\n                <div className={d.messages}>\r\n                    <div>\r\n                        <div>\r\n                            <Field name={\"MessageTextArea\"}\r\n                                   component={TextAreaDialogsMessage}\r\n                                   placeholder={\"Enter your message here\"}\r\n                                   validate={[required, maxValue300]}/>\r\n                        </div>\r\n                        <div>\r\n                            <button className={d.button}> send message</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxMessageWithUserForm = reduxForm({form: 'messages'})(MessageWithUserForm)\r\n\r\n\r\nconst MessagesWithUser = (props) => {\r\n\r\n    const SendNewMessage = (Formdata) => {\r\n        props.SendNewMessageThunk(props.DialoguserID, Formdata.MessageTextArea)\r\n    }\r\n\r\n    let [MessagesData, SetMessagesData] = useState(props.MessagesData)\r\n\r\n\r\n    useEffect(() => {\r\n        SetMessagesData(props.MessagesData)\r\n        }, [props.MessagesData]\r\n    )\r\n\r\n    return <div>\r\n        {MessagesData.DialogsMessages  ?\r\n            MessagesData.DialogsMessages.items.map(item => {\r\n                return (\r\n                    <div  className={mwuStyles.fontStyles} key={item.id} >\r\n                        <div className={mwuStyles.dateStyle}>\r\n                            Sended at : &nbsp;&nbsp;\r\n                            {item.addedAt.split(\"T\")[0]}\r\n                        </div>\r\n\r\n\r\n                        <div className={mwuStyles.MessageFormStyle}>\r\n                            <div>\r\n\r\n                                {item.senderName}  &nbsp;&nbsp;\r\n                                {item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[0]}:\r\n                                {item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[1]}\r\n                            </div>\r\n\r\n\r\n\r\n                            <NavLink to={`/Profile/${item.senderId}`}>\r\n                                {item.senderId !== props.MyID ?\r\n                                    <img className={mwuStyles.img}\r\n                                         src={props.MessagesData.InterlocutorAvatar != null\r\n                                             ? props.MessagesData.InterlocutorAvatar\r\n                                             : UserPhoto}/>\r\n                                    :\r\n                                    <img className={mwuStyles.img}\r\n                                         src={props.MessagesData.UserAvatar!= null ?\r\n                                             props.MessagesData.UserAvatar\r\n                                             : UserPhoto}/>\r\n                                }\r\n                            </NavLink>\r\n\r\n                            <div className={mwuStyles.messageText}>\r\n                                &nbsp;&nbsp;  {item.body}\r\n                            </div>\r\n                            <DeleteMessage DialoguserID={props.DialoguserID}\r\n                                           MessageID={item.id}\r\n                                           DeleteMessageThunk={props.DeleteMessageThunk}\r\n                            />\r\n                            <div>\r\n                                {item.viewed &&\r\n                                <img src={Viewed} className={mwuStyles.viewed}/>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n\r\n            : <Preloader/>\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        {props.MessagesData.DialogsMessages ?\r\n            <>\r\n                <ReduxMessageWithUserForm onSubmit={SendNewMessage} {...props} />\r\n            {/*<Paginator OnChangedPage={props.OnChangedPage}\r\n                       currentPage={props.currentPage}\r\n                       totalUsersCount={props.MessagesData.DialogsMessages.totalCount}\r\n                       pageSize={props.pageSize}\r\n                       PortionSize={props.PortionSize}\r\n            />*/}\r\n            </>\r\n            : <Preloader/>\r\n        }\r\n    </div>\r\n\r\n}\r\nexport default MessagesWithUser","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport {\r\n    GetIsFetchingDialogs,\r\n    GetMessagesDataSelector,\r\n} from \"../../../data/DialogsSelectors\";\r\nimport MessagesWithUser from \"./MessagesWithUser\";\r\nimport {AuthRedirect} from \"../../hocs/AuthRedirect\";\r\nimport {\r\n    SendNewMessageThunk,\r\n    GetNewMessagesThunk,\r\n    GetInterlocutorAvatarThunk,\r\n    setUserAvatarForDialogs,\r\n    GetProfileAvatarThunk,\r\n    DeleteMessageThunk,\r\n    GetNewMessagesCountThunk\r\n} from \"../../../data/DIalogsReduser\"\r\nimport {GetUserIDSelector} from \"../../../data/AuthSelectors\";\r\nimport {GetNewMessagesCountSelector} from \"../../../data/InitialozationSelectors\";\r\nimport Preloader from \"../../assetss/common/Loader/Loader\";\r\n\r\nclass MessagesContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const DialoguserID = this.props.match.params.userID\r\n        this.props.GetNewMessagesThunk(DialoguserID)\r\n        this.props.GetInterlocutorAvatarThunk(DialoguserID)\r\n        this.props.GetProfileAvatarThunk(this.props.MyID)\r\n        if(this.props.NewMessagesCount > 0){\r\n            this.props.GetNewMessagesCountThunk()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {\r\n                this.props.IsFetching ? <Preloader/> :\r\n                    <MessagesWithUser {...this.props} DialoguserID={this.props.match.params.userID}/>\r\n            }\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => ({\r\n    MessagesData: GetMessagesDataSelector(state),\r\n    MyID: GetUserIDSelector(state),\r\n    NewMessagesCount : GetNewMessagesCountSelector(state),\r\n    IsFetching : GetIsFetchingDialogs(state)\r\n})\r\n\r\nexport default  compose(connect(StateToProps,\r\n    {\r\n        GetNewMessagesThunk, SendNewMessageThunk,\r\n        GetInterlocutorAvatarThunk, setUserAvatarForDialogs,\r\n        GetProfileAvatarThunk,DeleteMessageThunk,GetNewMessagesCountThunk\r\n    }),\r\n    AuthRedirect,\r\n    withRouter)(MessagesContainer)","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {LoginThunk} from \"../../data/AuthReducer\"\r\nimport {required, MaxLengthCreator} from \"../utils/validators\"\r\nimport {CreateField, Input, InputName} from \"../assetss/common/ValidatorsComponents/ElementsValidators\"\r\nimport lm from \"../Login/login.module.css\"\r\nimport LoginUserPhoto from \"../assetss/images/userLog.jpg\"\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst maxLength50 = MaxLengthCreator(50)\r\n\r\nconst MapStateToProps = (state) => ({\r\n    IsLogined: state.Auth.IsLogined,\r\n    CaptchaUrl: state.Auth.CaptchaUrl\r\n})\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={lm.login}>\r\n            <form onSubmit={props.handleSubmit}>\r\n\r\n                <div>\r\n                    <img src={LoginUserPhoto} className={lm.imgUser}/>\r\n                    {CreateField(\"Enter the email\", \"email\", [required, maxLength50], Input)}\r\n                </div>\r\n\r\n                <div>\r\n                    {CreateField(\"Enter the password\", \"password\", [required, maxLength50],\r\n                        Input, {type: \"password\"})}\r\n                </div>\r\n\r\n                <div className={lm.rememberMe}>\r\n                    {CreateField(\"\", \"rememberMe\", [], \"input\", {type: \"checkbox\"},\r\n                        \"remember me\")}\r\n                </div>\r\n\r\n                {props.CaptchaUrl &&\r\n                <div>\r\n                    <img src={props.CaptchaUrl}/>\r\n                    {CreateField(\"Enter captcha symbols\", \"captcha\", [required],\r\n                        InputName)}\r\n                </div>\r\n                }\r\n                {props.error\r\n                    ?\r\n                    <div className={lm.AuthError}>\r\n                        {props.error}\r\n                    </div>\r\n                    : null}\r\n                <div>\r\n                    <button className={lm.button}> Enter</button>\r\n                </div>\r\n            </form>\r\n        </div>)\r\n}\r\nconst ReduxLoginForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nlet Login = (props) => {\r\n    const PostUserDataToServer = (formDatas) => {\r\n        props.LoginThunk(formDatas.email, formDatas.password, formDatas.rememberMe)\r\n        //here is all datas of forms, we can do here use some thunk for a make request on server\r\n    }\r\n\r\n    if (props.IsLogined) {\r\n        return <Redirect to={\"/Profile\"}/>\r\n    }\r\n    return (<div>\r\n\r\n        <ReduxLoginForm onSubmit={PostUserDataToServer}\r\n                        CaptchaUrl={props.CaptchaUrl}/>\r\n    </div>)\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {LoginThunk}),\r\n)(Login)","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Login from \"../../Login/Login\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst LoginModalWindow = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\n\r\nexport default function CustomizedDialogs() {\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button  variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\r\n                authorise\r\n            </Button>\r\n            <Dialog   onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                    Authentication windows\r\n                </DialogTitle>\r\n                <LoginModalWindow dividers>\r\n                <Login/>\r\n                </LoginModalWindow>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from \"react\"\r\nimport LoginModalWindow from \"../MaterialUI/ModalWindow/LoginModal\"\r\nimport lm from \"../Login/login.module.css\"\r\n\r\n\r\nconst LoginPage = (props) => {\r\n    return <div className={lm.LoginPageAlarm}>\r\n        <h1>\r\n            you need authorization for watching this\r\n        </h1>\r\n        <div className={lm.AuthButton}>\r\n            <LoginModalWindow/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default LoginPage","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListIcon from '@material-ui/icons/ListAlt';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function InputWithIcon(props) {\r\n    const classes = useStyles();\r\n    return (\r\n            <div className={classes.margin}>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                    <Grid item>\r\n                        <ListIcon />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField onChange={props.OnTextFieldCreateNewToDoListChanging}\r\n                                   id=\"input-with-icon-grid\"\r\n                                   placeholder={\"Enter new list name\"} />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    );\r\n}","import React,{useState} from \"react\"\r\nimport InputWithIcon from \"./TextFieldToDoLists\";\r\nimport TDlistS from \"./CreateNewToDoList.module.css\"\r\n\r\n\r\nconst CreateNewToDoList = (props) =>{\r\n    let[CreateNewToDoListMode,SetCreateNewToDoListMode] = useState(false);\r\n    let[CurrentValueOfCreateNewToDoListInput,SetCurrentValueOfCreateNewToDoListInput] = useState(\"\");\r\n\r\n    const OnTextFieldCreateNewToDoListChanging = (el) =>{\r\n     SetCurrentValueOfCreateNewToDoListInput(el.currentTarget.value)\r\n    }\r\n\r\n    const CreateToDoListON = () =>{\r\n        SetCreateNewToDoListMode(true)\r\n    };\r\n    const CreateToDoListOFF = () =>{\r\n        SetCreateNewToDoListMode(false)\r\n    }\r\n\r\n    const AddNewToDoList = () => {\r\n        if (CurrentValueOfCreateNewToDoListInput.length > 0 && CurrentValueOfCreateNewToDoListInput.length < 100) {\r\n            props.AddNewToDoListsThunk(CurrentValueOfCreateNewToDoListInput)\r\n            SetCreateNewToDoListMode(false)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return <div>\r\n        {!CreateNewToDoListMode &&\r\n            <div   className={TDlistS.CreateAndGoBackButtons}>\r\n                <button className={TDlistS.AddNewListButton} onClick={CreateToDoListON}>\r\n                    ADD NEW LIST\r\n                </button>\r\n            </div>\r\n\r\n        }\r\n\r\n        { CreateNewToDoListMode &&\r\n            <>\r\n                <div className={TDlistS.CreateAndGoBackButtons}>\r\n                    <button className={TDlistS.GoBacktButton} onClick={CreateToDoListOFF}>\r\n                       GO BACK\r\n                    </button>\r\n                </div>\r\n                <div className={TDlistS.AddNewListWrapper} >\r\n                    <InputWithIcon OnTextFieldCreateNewToDoListChanging={OnTextFieldCreateNewToDoListChanging} />\r\n                    <button onClick={AddNewToDoList} className={TDlistS.Addbutton} > add </button>\r\n                </div>\r\n        </>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default CreateNewToDoList","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst DeleteToDoListButton =(props) =>{\r\n    const classes = useStyles();\r\n\r\n    const DeleteList = () =>{\r\n        props.Del(props.ListID)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                disabled={props.ShowTasksMode}\r\n                onClick={DeleteList}\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<DeleteIcon />}\r\n            >\r\n                Delete\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default DeleteToDoListButton","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\n const EditButton =(props)=> {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Fab size={props.ButtonSize} color=\"secondary\" aria-label=\"edit\" >\r\n                <EditIcon onClick={props.HandleOnEdit} />\r\n            </Fab>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default EditButton","import React, {useState} from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListMenuIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteToDoListButton from \"./DeleteToDoList\";\r\nimport EditButton from \"./EditButton\";\r\nimport TDLS from \"./ToDoLists.module.css\"\r\n\r\nconst ToDoListMenuIcon = (props) => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n\r\n    const handleProfileMenuOpen = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    const menuId = 'todo_list_menu_id';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <div className={TDLS.EditButtonPostition}>\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <EditButton HandleOnEdit={props.EditTitleModeON}\r\n                            ButtonSize={\"small\"}/>\r\n            </MenuItem>\r\n            </div>\r\n            <MenuItem >\r\n                <DeleteToDoListButton ListID={props.ListID}\r\n                                      Del={props.Del}\r\n                                      ShowTasksMode={props.ShowTasksMode}/>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return <div>\r\n        <IconButton\r\n            edge=\"end\"\r\n            size=\"medium\"\r\n            aria-label=\"ToDo list menu\"\r\n            aria-controls={menuId}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleProfileMenuOpen}\r\n            color=\"primary\"\r\n        >\r\n            <ListMenuIcon />\r\n        </IconButton>\r\n        {renderMenu}\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default ToDoListMenuIcon;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst  SaveButton = (props)=> {\r\n    const classes = useStyles();\r\n\r\nconst SaveNewToDoListTitle = ()=>{\r\n    if(props.CurrentToDoListTitle.length !== 0 && props.CurrentToDoListTitle.length < 100 ) {\r\n        props.ChangeToDoListTitleThunk(props.ListID, props.CurrentToDoListTitle)\r\n        props.EditTitleModeOFF()\r\n    }\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={SaveNewToDoListTitle}\r\n                size=\"small\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n            >\r\n                Save\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default SaveButton","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport GoBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\n\r\nconst GoBackButton = (props)=> {\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={props.HandleOnClick}\r\n                size=\"small\"\r\n                startIcon={<GoBackIcon  />}\r\n            >\r\n                Back\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default GoBackButton","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nconst TitleChangingField = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <div>\r\n                <TextField\r\n                    onChange={props.OnToDoListTitleChanging}\r\n                    id=\"ToDoListChangingField\"\r\n                    value={props.CurrentToDoListTitle}\r\n                    className={classes.textField}\r\n                    helperText=\"maximum 100 symbols\"\r\n                    margin=\"normal\"\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\nexport default TitleChangingField","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst  AddNewTaskButton = (props)=> {\r\n    const classes = useStyles();\r\n\r\n    const AddNewTask = ()=>{\r\n        if(props.AddNewTaskFieldCurrentValue.length >0 && props.AddNewTaskFieldCurrentValue.length <100) {\r\n            props.AddNewTaskThunk(props.ListID, props.AddNewTaskFieldCurrentValue)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={AddNewTask}\r\n                size=\"small\"\r\n                className={classes.button}\r\n            >\r\n                add task\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default AddNewTaskButton","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 600,\r\n    },\r\n}));\r\n\r\nconst AddTaskField = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <div>\r\n                <TextField\r\n                    onChange={props.OnAddNewTaskFieldChange}\r\n                    id=\"AddTaskFieldID\"\r\n                    className={classes.textField}\r\n                    placeholder=\"Enter new task title\"\r\n                    helperText=\"maximum 100 symbols\"\r\n                    margin=\"normal\"\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\nexport default AddTaskField","import React,{useState} from \"react\"\r\nimport TDLS from \"../ToDoLists.module.css\";\r\nimport AddNewTaskButton from \"./AddNewTaskButton\";\r\nimport AddTaskField from \"./AddNewTaskField\";\r\n\r\n\r\nconst AddNewTask = (props) => {\r\n    let [AddNewTaskFieldCurrentValue,SetAddNewTaskFieldCurrentValue] = useState(\"\")\r\n\r\n    const OnAddNewTaskFieldChange = (el)=>{\r\n        SetAddNewTaskFieldCurrentValue(el.currentTarget.value)\r\n    }\r\n   return  <div className={TDLS.AddNewTaskWrapper}>\r\n            <div >\r\n                <AddTaskField OnAddNewTaskFieldChange={OnAddNewTaskFieldChange}/>\r\n            </div>\r\n\r\n            <div className={TDLS.AddTaskButton}>\r\n                <AddNewTaskButton ListID={props.ListID}\r\n                                  AddNewTaskThunk={props.AddNewTaskThunk}\r\n                                  AddNewTaskFieldCurrentValue={AddNewTaskFieldCurrentValue}\r\n                />\r\n            </div>\r\n\r\n    </div>\r\n}\r\nexport default AddNewTask","import React from 'react';\r\nimport ShowIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport Fab from \"@material-ui/core/Fab\";\r\n\r\n\r\n\r\nconst  ShowTasksButton = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Fab disabled={props.ButtonIsDesabled} onClick={props.HandleOnClick}  size=\"small\" color=\"primary\" aria-label=\"edit\" >\r\n                <ShowIcon/>\r\n            </Fab>\r\n        </div>\r\n    );\r\n}\r\nexport default ShowTasksButton","import React from 'react';\r\nimport HideIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Fab from \"@material-ui/core/Fab\";\r\n\r\n\r\n\r\nconst  HideTasksButton = (props)=> {\r\n    return (\r\n        <div>\r\n            <Fab  onClick={props.HandleOnClick} size=\"small\" color=\"primary\" aria-label=\"edit\" >\r\n                <HideIcon  />\r\n            </Fab>\r\n        </div>\r\n    );\r\n}\r\nexport default HideTasksButton","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst DeleteButton = (props)=> {\r\n\r\n    const DeleteTask = ()=>{\r\n        props.DeleteTaskThunk(props.ListID,props.TaskID)\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Button\r\n                disabled={props.ShowButtonBlocked}\r\n                variant=\"text\"\r\n                color=\"inherit\"\r\n                onClick={DeleteTask}\r\n                size=\"large\"\r\n                startIcon={<DeleteIcon />}\r\n            >\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default DeleteButton","import React from 'react';\r\nimport Done from '@material-ui/icons/Done';\r\n\r\nconst TaskDoneIcon = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n            <Done color=\"secondary\"  />\r\n        </div>\r\n    );\r\n}\r\nexport default TaskDoneIcon","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport EditButton from '@material-ui/icons/Edit';\r\n\r\nconst EditTaskButton = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                disabled={props.ShowButtonBlocked}\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                onClick={props.HandleOnClick}\r\n                size=\"large\"\r\n                startIcon={<EditButton />}\r\n            >\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default EditTaskButton","import React from 'react';\r\nimport DetailsIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst TaskShowDetailsIcon = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"text\"\r\n                disabled={props.ShowButtonBlocked}\r\n                color=\"primary\"\r\n                onClick={props.HandleOnClick}\r\n                size=\"large\"\r\n                startIcon={<DetailsIcon />}\r\n            >\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default TaskShowDetailsIcon","import React from 'react';\r\nimport DetailsIconUP from '@material-ui/icons/KeyboardArrowUp';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst TaskHideDetailsIcon = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                onClick={props.HandleOnClick}\r\n                size=\"large\"\r\n                startIcon={<DetailsIconUP />}\r\n            >\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default TaskHideDetailsIcon","export const DateTransform = (date) =>{\r\n    if(date ) {\r\n        return date.split(\"T\")[0].split().join().split(\"-\").reverse()\r\n    }\r\n}","import React,{useState} from \"react\"\r\nimport ts from \"./Tasks.module.css\";\r\nimport TaskShowDetailsIcon from \"./TaskShowDetailsIcon\";\r\nimport TaskHideDetailsIcon from \"./TaskHideDetails\";\r\nimport {DateTransform} from \"../../utils/dateTransform\"\r\n\r\n\r\n\r\nconst TaskDetails = (props) => {\r\n\r\n    let [ShowDetails, SetShowDetails] = useState(false)\r\n\r\n    let AddedDate = DateTransform(props.CurrentTask.startDate)\r\n    let DeadLineDate = DateTransform(props.CurrentTask.deadline)\r\n\r\n    const ShowDetailsON = () => {\r\n        SetShowDetails(true)\r\n        props.ShowButtonBlockedON()\r\n    }\r\n\r\n    const ShowDetailsOFF = () => {\r\n        SetShowDetails(false)\r\n        props.ShowButtonBlockedOFF()\r\n    }\r\n    return <div >\r\n\r\n        {ShowDetails ?\r\n            <div>\r\n            <div className={ts.detailsWrapper}>\r\n\r\n                <div className={ts.startDate}>\r\n                    {props.CurrentTask.startDate ?\r\n                        \"start date :\" + AddedDate[0]+\"/\"+AddedDate[1]+\"/\"+AddedDate[2]\r\n                        : \"no started date data\"\r\n                    }\r\n                </div>\r\n\r\n                <div className={ts.deadline}>\r\n\r\n                    {props.CurrentTask.deadline ?\r\n                        \"deadline :\"  + DeadLineDate[0]+\"/\"+DeadLineDate[1]+\"/\"+DeadLineDate[2]\r\n                        : \"no deadline data\"\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n                <div className={ts.description}>\r\n                    description :\r\n                    <div className={ts.descriptionText}>\r\n                        {props.CurrentTask.description?\r\n                        props.CurrentTask.description:\r\n                        \"no description data\"}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={ts.DetailsButton}>\r\n                    <TaskHideDetailsIcon HandleOnClick={ShowDetailsOFF} />\r\n                </div>\r\n            </div>\r\n            :\r\n\r\n            <div className={ts.DetailsButton}>\r\n                <TaskShowDetailsIcon ShowButtonBlocked={props.ShowButtonBlocked}\r\n                                     HandleOnClick={ShowDetailsON}/>\r\n            </div>\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default TaskDetails","import React from 'react';\r\nimport NotDone from '@material-ui/icons/Clear';\r\n\r\nconst NotDoneIcon = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n            <NotDone color=\"secondary\"  />\r\n        </div>\r\n    );\r\n}\r\nexport default NotDoneIcon","import React from \"react\"\r\nimport {\r\n    Input,\r\n    CreateField,\r\n    TaskFormInput, ContactFormInput\r\n} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport ts from \"./Tasks.module.css\";\r\nimport GoBackButton from \"../GoBackButton\";\r\n\r\nconst maxlength50 = MaxLengthCreator(50)\r\nconst maxlength100 = MaxLengthCreator(100)\r\n\r\nconst TaskEditForm = (props) => {\r\n\r\n    return <div>\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={ts.TaskFormWrapper}>\r\n\r\n                <div className={ts.TaskEditFromButtons}>\r\n\r\n                    <button className={ts.TaskFormSaveButton}>\r\n                        save\r\n                    </button>\r\n\r\n                    <div className={ts.GoBackButton}>\r\n                        <GoBackButton HandleOnClick={props.TaskEditModeOFF}/>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div>\r\n\r\n                    <div className={props.TaskExecutedStyleForWindow}>\r\n\r\n                            <div className={ts.Title}>\r\n                                Task title :\r\n                                {CreateField(\"title\", \"title\", [required, maxlength50], ContactFormInput)}\r\n                            </div>\r\n                        <div className={ts.CompletedFieldWrapper}>\r\n                            <span className={ts.cc}>\r\n                                    Completed?\r\n                            </span>\r\n\r\n                            <span >\r\n                                {CreateField(\"completed\", \"completed\", [], TaskFormInput, {type: \"checkbox\"})}\r\n                            </span>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className={ts.detailsWrapper}>\r\n                            <div className={ts.startDate}>\r\n                                Start date :\r\n                                {CreateField(\"must be like 11/01/2019\", \"startDate\", [maxlength50], ContactFormInput, {type: \"date\"})}\r\n                            </div>\r\n\r\n                            <div className={ts.deadline}>\r\n                                deadline :\r\n                                {CreateField(\"must be like 11/11/2019\", \"deadline\", [maxlength50], ContactFormInput, {type: \"date\"})}\r\n                            </div>\r\n                        </div>\r\n                        <div className={ts.FormDescription}>\r\n                            description :\r\n                            {CreateField(\"description\", \"description\", [maxlength100], ContactFormInput)}\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default TaskEditForm","import React, {useState,useEffect} from \"react\"\r\nimport ts from \"./Tasks.module.css\"\r\nimport classNames from 'classnames';\r\nimport DeleteButton from \"./DeleteTaskButton\";\r\nimport TaskDoneIcon from \"./DoneIcone\";\r\nimport EditTaskButton from \"./EditTaskButton\";\r\nimport TaskDetails from \"./TaskDetails\";\r\nimport NotDoneIcon from \"./NotDoneIcon\";\r\nimport TaskEditForm from \"./TaskEditForm\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {DateTransform} from \"../../utils/dateTransform\";\r\n\r\n\r\nconst Task = (props) => {\r\n\r\n    let [TaskEditMode, SetTaskEditMode] = useState(false)\r\n    let [status, SetStatus] = useState({})\r\n\r\n    let TrueStartDate = DateTransform(props.CurrentTask.startDate)\r\n    let TrueDeadLine = DateTransform(props.CurrentTask.deadline)\r\n\r\nconst TrueObjMaker=(status,TrueStartDate,TrueDeadLine)=>{\r\n        if (status && TrueStartDate && TrueDeadLine  )\r\n        {\r\n            return Object.assign({...status},{ startDate:TrueStartDate[2]+\"-\"+TrueStartDate[1]+\"-\"+TrueStartDate[0],\r\n                deadline :TrueDeadLine[2]+\"-\"+TrueDeadLine[1]+\"-\"+TrueDeadLine[0] })\r\n\r\n        }\r\n}\r\n\r\n    useEffect(() => {\r\n        SetStatus(props.CurrentTask)\r\n        }, [props.CurrentTask]\r\n    )\r\n\r\n\r\n    const TaskEditModeON = () => {\r\n        SetTaskEditMode(true)\r\n    }\r\n    const TaskEditModeOFF = () => {\r\n        SetTaskEditMode(false)\r\n    }\r\n    const TaskExecutedStyleForWindow = classNames({\r\n        [ts.Ramka] : !props.completed,\r\n        [ts.DoneRamka] : props.completed\r\n    })\r\n\r\n    const SaveNewToDoListTaskInfo= (formData)=>{\r\n        console.log(formData)\r\n        props.UpdateTaskInformationThunk(props.ListID,props.TaskID,formData)\r\n        TaskEditModeOFF()\r\n\r\n    }\r\n\r\n    return <div>\r\n        {  /*  props.ToDoListTasks.map(el => el.ListId === props.ListID && el.TaskData.items.map(key =>{\r\n                  return <div key={key.id}>\r\n                      {key.title}\r\n                  </div>\r\n                  })\r\n              )*/\r\n\r\n\r\n            !TaskEditMode ?\r\n            <div  className={ts.Main}>\r\n\r\n                <div className={classNames(ts.MainWrapper)}>\r\n\r\n                    <div className={ts.TaskEditButton}>\r\n                        <EditTaskButton ShowButtonBlocked={props.ShowButtonBlocked} ButtonSize={\"small\"} HandleOnClick={TaskEditModeON}/>\r\n                    </div>\r\n\r\n                    <div className={TaskExecutedStyleForWindow}>\r\n                        <div className={ts.TaskBodyWrapper}>\r\n                            {props.completed ?\r\n                                <div className={ts.iconStatus}>\r\n                                    <TaskDoneIcon/>\r\n                                </div>\r\n                                :\r\n                                <div className={ts.iconStatus}>\r\n                                    <NotDoneIcon/>\r\n                                </div>\r\n                            }\r\n\r\n\r\n                            <div className={ts.Title}>\r\n                                {props.TaskTitle}\r\n                            </div>\r\n\r\n\r\n                            <div className={ts.ToTrashIcon}>\r\n                                <DeleteButton DeleteTaskThunk={props.DeleteTaskThunk}\r\n                                              ShowButtonBlocked={props.ShowButtonBlocked}\r\n                                              ListID={props.ListID} TaskID={props.TaskID}/>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div>\r\n                            <TaskDetails\r\n\r\n                                CurrentTask={status}\r\n                                ShowButtonBlockedON={props.ShowButtonBlockedON}\r\n                                ShowButtonBlockedOFF={props.ShowButtonBlockedOFF}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n                :\r\n                <div>\r\n                    <TaskEditFormRedux\r\n                                    initialValues={TrueStartDate && TrueDeadLine\r\n                                           ? TrueObjMaker(status,TrueStartDate,TrueDeadLine)\r\n                                           : status\r\n                                       }\r\n                                       TaskEditModeOFF={TaskEditModeOFF}\r\n                                       ListID={props.ListID}\r\n                                       TaskID={props.TaskID}\r\n                                       onSubmit={SaveNewToDoListTaskInfo}\r\n                                       TaskExecutedStyleForWindow={TaskExecutedStyleForWindow}\r\n                    />\r\n                </div>\r\n        }\r\n\r\n    </div>\r\n}\r\nconst TaskEditFormRedux = reduxForm({form: 'TaskEditorForm'})(TaskEditForm)\r\n\r\nexport default Task","import React, {useState, useEffect} from \"react\"\r\nimport ts from \"./Tasks.module.css\"\r\nimport Task from \"./Task\";\r\n\r\n\r\nconst Tasks = (props) => {\r\n\r\n    let [TasksData, SetTasksData] = useState(props.ToDoListTasks.items)\r\n    let [ShowButtonBlocked, SetShowButtonBlocked] = useState(false)\r\n\r\n\r\n    const ShowButtonBlockedON = () => {\r\n        SetShowButtonBlocked(true)\r\n    }\r\n\r\n    const ShowButtonBlockedOFF = () => {\r\n        SetShowButtonBlocked(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n            SetTasksData(props.ToDoListTasks.items)\r\n        }, [props.ToDoListTasks.items]\r\n    )\r\n\r\n\r\n\r\n    return <div>\r\n        {\r\n\r\n\r\n            TasksData.map(task => {\r\n\r\n                return <div key={task.id} className={ts.Main}>\r\n\r\n                    <Task completed={task.completed}\r\n                          UpdateTaskInformationThunk={props.UpdateTaskInformationThunk}\r\n                          CurrentTask={task}\r\n                          TaskTitle={task.title}\r\n                          ShowButtonBlocked={ShowButtonBlocked}\r\n                          ListID={task.todoListId}\r\n                          TaskID={task.id}\r\n                          DeleteTaskThunk={props.DeleteTaskThunk}\r\n                          TaskAddedDate={task.addedDate}\r\n                          TaskDeadline={task.deadline}\r\n                          TaskDescription={task.description}\r\n                          ShowButtonBlockedON={ShowButtonBlockedON}\r\n                          ShowButtonBlockedOFF={ShowButtonBlockedOFF}\r\n                    />\r\n\r\n                </div>\r\n            })\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Tasks","import React, {useState, useEffect} from \"react\"\r\nimport TDLS from \"./ToDoLists.module.css\";\r\nimport ToDoListMenuIcon from \"./ListMenu\";\r\nimport SaveButton from \"./SaveButton\";\r\nimport GoBackButton from \"./GoBackButton\";\r\nimport TitleChangingField from \"./TitleChangeField\";\r\nimport AddNewTask from \"./AddNewTask/AddNewTask\";\r\nimport ShowTasksButton from \"./ToDoListTasks/ShowTasksButton\";\r\nimport HideTasksButton from \"./ToDoListTasks/HideTasksButton\";\r\nimport Tasks from \"./ToDoListTasks/Tasks\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\n\r\n\r\nconst ToDoList = (props) => {\r\n    let [EditTitleMode, SetEditTitleMode] = useState(false)\r\n    let [ShowTasksMode, SetShowTasksMode] = useState(false)\r\n    let [CurrentToDoListTitle, SetToDoListTitle] = useState(props.title)\r\n\r\n    const EditTitleModeON = () => {\r\n        SetEditTitleMode(true)\r\n    }\r\n    const EditTitleModeOFF = () => {\r\n        SetEditTitleMode(false)\r\n    }\r\n\r\n    const OnToDoListTitleChanging = (el) => {\r\n        SetToDoListTitle(el.currentTarget.value)\r\n    }\r\n\r\n    const ShowTask = () => {\r\n        props.GetToDoListTasksThunk(props.ListID, props.ToDoListTasksCount, props.ToDoListTasksPage)\r\n        SetShowTasksMode(true)\r\n        props.ButtonIsDesabledON()\r\n    }\r\n\r\n    const ShowTaskModeOFF = () => {\r\n        SetShowTasksMode(false)\r\n        props.ButtonIsDesabledOFF()\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n            SetToDoListTitle(props.title)\r\n        }, [props.title]\r\n    )\r\n\r\n\r\n\r\n\r\n    return <div>\r\n        {!EditTitleMode ?\r\n            <div className={TDLS.ToDolistsWrapper}>\r\n\r\n                <ToDoListMenuIcon ListID={props.ListID}\r\n                                  ShowTasksMode={ShowTasksMode}\r\n                                  EditTitleModeON={EditTitleModeON}\r\n                                  Del={props.DeleteToDoListThunk}/>\r\n\r\n                <div className={TDLS.ToDoListTitle}>\r\n                    {props.title}\r\n                </div>\r\n            </div>\r\n\r\n            :\r\n            <div className={TDLS.ToDolistsChanchingWrapper}>\r\n                <div>\r\n                    <SaveButton ListID={props.ListID} ChangeToDoListTitleThunk={props.ChangeToDoListTitleThunk}\r\n                                EditTitleModeOFF={EditTitleModeOFF} CurrentToDoListTitle={CurrentToDoListTitle}/>\r\n                    <GoBackButton HandleOnClick={EditTitleModeOFF}/>\r\n                </div>\r\n                <div className={TDLS.ToDoListChangingInput}>\r\n                    <TitleChangingField OnToDoListTitleChanging={OnToDoListTitleChanging}\r\n                                        CurrentToDoListTitle={CurrentToDoListTitle}/>\r\n                </div>\r\n\r\n            </div>\r\n        }\r\n\r\n        {ShowTasksMode ?\r\n\r\n            <div>\r\n\r\n                {props.TaskIsFetching ? <Preloader/> :\r\n                    <>\r\n                    <AddNewTask ListID={props.ListID}\r\n                                AddNewTaskThunk={props.AddNewTaskThunk}/>\r\n\r\n                    <div>\r\n                        {\r\n                            props.ToDoListTasks.items &&\r\n                                <div className={TDLS.tasksposititon}>\r\n                                    <Tasks\r\n                                        DeleteTaskThunk={props.DeleteTaskThunk}\r\n                                        ToDoListTasks={props.ToDoListTasks}\r\n                                        UpdateTaskInformationThunk={props.UpdateTaskInformationThunk}\r\n                                    />\r\n                                </div>\r\n                        }\r\n\r\n                    <div className={TDLS.HideTasksButton}>\r\n                    <HideTasksButton HandleOnClick={ShowTaskModeOFF}/>\r\n                    </div>\r\n\r\n                    </div>\r\n\r\n                    </>\r\n                }\r\n            </div>\r\n            :\r\n            <div className={TDLS.ShowTasksButton}>\r\n                <ShowTasksButton ShowTasksMode={ShowTasksMode}\r\n                                 HandleOnClick={ShowTask}\r\n                                 ButtonIsDesabled={props.ButtonIsDesabled}\r\n                />\r\n            </div>\r\n\r\n        }\r\n    </div>\r\n}\r\nexport default ToDoList","import React,{useState} from \"react\"\r\nimport CreateNewToDoList from \"./CreateNewToDoList/CreateNewToDoList\";\r\nimport TDLS from \"./ToDoLists.module.css\"\r\nimport ToDoList from \"./ToDoList\";\r\n\r\n\r\nconst ToDoLists = (props) => {\r\nlet [ButtonIsDesabled,SetButtonIsDesabled] = useState(false)\r\n\r\n    const ButtonIsDesabledON=()=>{\r\n        SetButtonIsDesabled(true)\r\n    }\r\n    const ButtonIsDesabledOFF=()=>{\r\n        SetButtonIsDesabled(false)\r\n    }\r\n    return <div>\r\n        <CreateNewToDoList AddNewToDoListsThunk={props.AddNewToDoListsThunk}\r\n                          />\r\n        {props.ToDoLists &&\r\n        props.ToDoLists.map(key => {\r\n            return <div className={TDLS.ToDoListsPosition} key={key.id}>\r\n\r\n                <ToDoList {...props}\r\n                          ListID={key.id}\r\n                          title={key.title}\r\n                          ButtonIsDesabled={ButtonIsDesabled}\r\n                          ButtonIsDesabledON={ButtonIsDesabledON}\r\n                          ButtonIsDesabledOFF={ButtonIsDesabledOFF}\r\n                />\r\n            </div>\r\n        })\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default ToDoLists","export const GetToDoLists = (state) =>{\r\n    return state.ToDoListsData.ToDoLists\r\n}\r\nexport const GetToDoListTasksPage = (state) =>{\r\n    return state.ToDoListsData.ToDoListTasksPage\r\n}\r\nexport const GetToDoListTasksCount = (state) =>{\r\n    return state.ToDoListsData.ToDoListTasksCount\r\n}\r\nexport const GetToDoListTasks = (state) =>{\r\n    return state.ToDoListsData.ToDoListTasks\r\n}\r\nexport const GetToDoListIsFetching = (state) =>{\r\n    return state.ToDoListsData.IsFetching\r\n}\r\nexport const GetToDoListTaskIsFetching = (state) =>{\r\n    return state.ToDoListsData.TaskIsFetching\r\n}","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {AuthRedirect} from \"../hocs/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport ToDoLists from \"./ToDoLists\";\r\nimport {\r\n    GetToDoListIsFetching,\r\n    GetToDoLists, GetToDoListTaskIsFetching,\r\n    GetToDoListTasks,\r\n    GetToDoListTasksCount,\r\n    GetToDoListTasksPage\r\n} from \"../../data/ToDoListsSelectors\";\r\nimport {\r\n    SetToDoListTasksPage, SetToDoListTasksCount, GetToDoListsThunk, AddNewToDoListsThunk,\r\n    DeleteToDoListThunk,ChangeToDoListTitleThunk,\r\n    GetToDoListTasksThunk,AddNewTaskThunk,DeleteTaskThunk,\r\n    UpdateTaskInformationThunk\r\n} from \"../../data/ToDoListsReducer\"\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\n\r\nclass ToDoListsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.GetToDoListsThunk();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.IsFetching ? <Preloader/> :\r\n                    <ToDoLists {...this.props} />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => ({\r\n    ToDoLists: GetToDoLists(state),\r\n    ToDoListTasksPage: GetToDoListTasksPage(state),\r\n    ToDoListTasksCount: GetToDoListTasksCount(state),\r\n    ToDoListTasks : GetToDoListTasks(state),\r\n    IsFetching : GetToDoListIsFetching(state),\r\n    TaskIsFetching : GetToDoListTaskIsFetching(state)\r\n})\r\n\r\nexport default compose(connect(StateToProps,\r\n    {\r\n        SetToDoListTasksPage, SetToDoListTasksCount,\r\n        GetToDoListsThunk, AddNewToDoListsThunk,\r\n        DeleteToDoListThunk,ChangeToDoListTitleThunk,\r\n        GetToDoListTasksThunk,AddNewTaskThunk,DeleteTaskThunk,\r\n        UpdateTaskInformationThunk\r\n    }),\r\n    AuthRedirect)(ToDoListsContainer)","import React, {Component} from 'react';\nimport './App.css';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {Redirect, Route, withRouter} from \"react-router-dom\";\n/*import News from \"./components/News/News\";*/\n/*import Music from \"./components/Music/Music\";*/\n/*import Settings from \"./components/Settings/Settings\";*/\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileCOntainer\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {InitializationAPPthunk} from \"./data/InitializatonReducer\";\nimport Preloader from \"./components/assetss/common/Loader/Loader\";\n// import {WithSuspense} from \"./components/hocs/WithSuspense\";\nimport MessagesContainer from \"./components/Dialogs/Message/MessagesContainer\";\nimport {GetinitionSelector} from \"./data/InitialozationSelectors\";\nimport {GetNewMessagesCountThunk} from \"./data/DIalogsReduser\";\nimport LoginPage from \"./components/Login/LoginPage\";\nimport ToDoListsContainer from \"./components/ToDoLists/ToDoListsContainer\";\nimport {GetIsLoginedSelector} from \"./data/AuthSelectors\";\n/*import {API} from \"./API/requests\"*/\n/*const Music = React.lazy(() => import('./components/Music/Music'))*/\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.InitializationAPPthunk()\n  /*      API.MyServerReq()\n        API.MyServerPost({'id' : '17', 'name': 'wqewq'})*/\n    }\n\n    render() {\n\n        if (!this.props.inition) {\n            return <Preloader/>\n        }\n        return (\n\n            <div className='wrapper'>\n                    <HeaderContainer  />\n\n\n                <div className=\"app-wrapper-content\">\n\n                    <Route exact path='/'\n                           render={() => <Redirect to={\"Profile/\"}/>}/>\n\n                    <Route path='/dialogs/'\n                           render={() => <DialogsContainer/>}/>\n                    <Route path='/messages/:userID?'\n                           render={() => <MessagesContainer/>}/>\n\n                    <Route path='/Profile/:userID?'\n                           render={() => <ProfileContainer/>}/>\n\n\n                    <Route exact path='/Users' render={() => <UsersContainer/>}/>\n\n                    <Route exact path='/Login' render={() => <LoginPage/>}/>\n\n                    <Route exact path='/ToDoLists' render={() => <ToDoListsContainer/>}/>\n\n             {       /* to the new updates\n                    <Route exact path='/News' render={() => <News/>}/>\n\n                    <Route exact path='/Music' render={WithSuspense(Music)}/>\n\n                    <Route exact path='/Settings' render={() => <Settings/>}/>*/}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst MapStateToProps = (state) => ({inition: GetinitionSelector(state),\n    IsLogined: GetIsLoginedSelector(state)})\n\nexport default compose(\n    connect(MapStateToProps, {InitializationAPPthunk,GetNewMessagesCountThunk}),\n    withRouter)(App)\n","\nimport React from 'react'\nimport * as serviceWorker from './serviceWorker';\nimport store from './data/redux-store'\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter,HashRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\n/* Hashrouter use for  adding on git ,\n\n      /* <HashRouter>*/\n\n/* </HashRouter>,*/\n    ReactDOM.render(\n       <HashRouter  basename={process.env.PUBLIC_URL}>\n\n        <Provider store={store}>\n            <App  />\n        </Provider>\n       </HashRouter>,\n        document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/userPhoto.f86bd3d2.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__2XLpg\",\"imgUser\":\"login_imgUser__3RvPz\",\"rememberMe\":\"login_rememberMe__1T4hC\",\"button\":\"login_button__1BAOG\",\"bg\":\"login_bg__3ae0b\",\"bg10\":\"login_bg10__O5xrp\",\"AuthError\":\"login_AuthError__1kfh-\",\"LoginPageAlarm\":\"login_LoginPageAlarm__19tn1\",\"logModalWindow\":\"login_logModalWindow__1r3QB\",\"AuthButton\":\"login_AuthButton__242Z_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UsersWrapper\":\"Users_UsersWrapper__3r0iU\",\"Main\":\"Users_Main__2xXSo\",\"img\":\"Users_img__2oaoF\",\"follow\":\"Users_follow__2uAmx\",\"Names\":\"Users_Names__1_6so\",\"Posts\":\"Users_Posts__3kZD6\",\"Country\":\"Users_Country__3gYtG\",\"City\":\"Users_City__2_dM7\",\"unfollow\":\"Users_unfollow__1O1QN\",\"PaginatorPosition\":\"Users_PaginatorPosition__2Q4mW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FoundedUsersWrapper\":\"FindUser_FoundedUsersWrapper__m1B-E\",\"GoBack\":\"FindUser_GoBack__2YgqT\",\"foundArea\":\"FindUser_foundArea__2UM3r\",\"SearchingResult\":\"FindUser_SearchingResult__1rxlW\",\"FoundedUsers\":\"FindUser_FoundedUsers__Z4_bH\",\"FindUserButton\":\"FindUser_FindUserButton__1BxTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddNewListWrapper\":\"CreateNewToDoList_AddNewListWrapper__3QLwt\",\"Addbutton\":\"CreateNewToDoList_Addbutton__38Fgq\",\"CreateAndGoBackButtons\":\"CreateNewToDoList_CreateAndGoBackButtons__3WyiO\",\"AddNewListButton\":\"CreateNewToDoList_AddNewListButton__15LRB\",\"GoBacktButton\":\"CreateNewToDoList_GoBacktButton__1yyLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ProfileData_contacts__1hcZY\",\"aboutME\":\"ProfileData_aboutME__2RKXo\",\"buttonEditInformation\":\"ProfileData_buttonEditInformation__DJ_Eq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numbers\":\"Paginator_numbers__1V04X\",\"setNumbers\":\"Paginator_setNumbers__L_c7_\",\"button\":\"Paginator_button__24DIp\",\"NumbersFont\":\"Paginator_NumbersFont__2D9CN\"};"],"sourceRoot":""}