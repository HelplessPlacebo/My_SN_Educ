{"version":3,"sources":["components/assetss/common/Paginator/Paginator.module.css","components/Users/Users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/assetss/common/ValidatorsComponents/ElementsValidators.module.css","components/Header/Header.module.css","components/Profile/UserInfo/UserInfo.module.css","components/assetss/images/loader1.gif","components/Profile/UserInfo/Contact.module.css","components/assetss/images/viewed1.jpg","components/assetss/images/closeButton.png","components/assetss/images/trash.png","components/assetss/images/userLog.jpg","components/Dialogs/Message/Messages.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","API/requests.js","data/ProfileReduser.js","data/DIalogsReduser.js","data/UsersReduser.js","data/AuthReducer.js","data/InitializatonReducer.js","data/redux-store.js","components/Header/AcountIcon.jsx","components/Header/MessagesIcon.jsx","components/Header/UsersIcon.jsx","components/Header/Header.jsx","components/assetss/common/Loader/Loader.js","data/ProfileSelectors.js","data/AuthSelectors.js","data/InitialozationSelectors.js","components/Header/HeaderContainer.jsx","components/Dialogs/DialogInfo.jsx","components/Dialogs/Dialogs.jsx","components/hocs/AuthRedirect.js","data/DialogsSelectors.js","components/Dialogs/DialogsContainer.jsx","components/assetss/common/Paginator/Paginator.js","components/Users/User.jsx","components/MaterialUI/ModalWindow/UserSearchModal.jsx","components/Users/FindUser.jsx","components/Users/Users.jsx","data/Users-Selectors.js","components/Users/UsersContainer.jsx","components/Profile/UserInfo/ProfileStatusF.jsx","components/Profile/UserInfo/Contact.jsx","components/Profile/UserInfo/ProfileData.jsx","components/Profile/UserInfo/ProfileAvatar.jsx","components/assetss/common/ValidatorsComponents/ElementsValidators.js","components/utils/validators.js","components/Profile/UserInfo/ProfileDataEditorForm.jsx","components/Profile/UserInfo/SendMessageOnUserPage.jsx","components/Profile/UserInfo/UserInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsConteiner.jsx","components/Profile/Profile.jsx","components/Profile/ProfileCOntainer.jsx","components/Dialogs/Message/DeleteConfirmWindow.jsx","components/Dialogs/Message/DeleteMessage.jsx","components/Dialogs/Message/MessagesWithUser.jsx","components/Dialogs/Message/MessagesContainer.jsx","components/Login/Login.jsx","components/MaterialUI/ModalWindow/LoginModal.jsx","components/Login/LoginPage.jsx","App.js","index.js","components/assetss/images/userPhoto.jpg","components/Login/login.module.css","components/Profile/UserInfo/ProfileData.module.css","components/Users/FindUser.module.css"],"names":["module","exports","numbers","setNumbers","button","Main","img","Names","Posts","Country","City","pp","marginPost","item","like","formControl","error","textarea","input","TextAreaMessage","textareaAboutMe","ContactFormInput","TextAreaDialogsMessage","FindFormInput","header","IconsWrapper","log","loader","MessagesIconStyle","AccountIconPosition","accountIconUserName","loginPosition","loginButton","MessagesIconPosition","UsersIconPosition","active","startPosition","userdescrition","UserPhoto","ProfileName","UserName","FormError","goback","MyContacts","ContactsForm","MyName","buttonSaveChanges","buttonGoBack","EditorFormBG","__webpack_require__","p","contact","MessageFormStyle","dateStyle","messageText","UserNameInMessages","viewed","fontStyles","confirmDeletingWindow","confirmDeletingWindowButtons","buttontsDelta","confirmDeletingWindowHeader","confirmDeletingWindowText","imgClose","deleteMessageStyle","wrapper","DialogUserPhoto","padding","dialogs","dialogsItems","messages","DialogArea","activeLink","ConfirmText","ToTrash","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","API-KEY","API","getUsers","_getUsers","Object","asyncToGenerator","regenerator_default","a","mark","_callee","currentPage","pageSize","response","_args","arguments","wrap","_context","prev","next","length","undefined","get","concat","sent","abrupt","data","stop","apply","this","AuthMe","_AuthMe","_callee2","_context2","getProfile","_getProfile","_callee3","ProfileID","_args3","_context3","DelSub","_DelSub","_callee4","userId","_context4","delete","_x","AddSub","_AddSub","_callee5","_context5","post","_x2","getProfileStatus","_getProfileStatus","_callee6","_args6","_context6","setProfileStatus","_setProfileStatus","_callee7","status","_context7","put","_x3","Login","_Login","_callee8","email","password","rememberMe","captcha","_context8","_x4","_x5","_x6","_x7","LogOut","_LogOut","_callee9","_context9","LoadPhotoOnServer","_LoadPhotoOnServer","_callee10","photo","formdata","_context10","FormData","append","Content-Type","_x8","PutProfileDataOnServer","_PutProfileDataOnServer","_callee11","profile","_context11","_x9","GetCaptchaFromServer","_GetCaptchaFromServer","_callee12","_context12","GetAllDialogs","_GetAllDialogs","_callee13","_context13","GetNewMessagesFromServer","_GetNewMessagesFromServer","_callee14","_context14","_x10","SendNewMessage","_SendNewMessage","_callee15","NewMessage","_context15","body","_x11","_x12","GetNewMessagesCount","_GetNewMessagesCount","_callee16","_context16","DeleteMessage","_DeleteMessage","_callee17","MessageID","_context17","_x13","FindUser","_FindUser","_callee18","_context18","_x14","DefaultState","TextNewPost","IsMyPage","SetStatusOfUser","type","SetPhotoOfUser","GetProfileThunk","_ref","dispatch","ProfileReducer","state","action","NewPost","id","Post","newtext","likesCount","objectSpread","toConsumableArray","photos","bool","users","avatars","NewMessageText","AllDialogs","DialogsMessages","InterlocutorAvatar","UserAvatar","NewMessagesCount","SetNewMessages","NewMessagesData","setUserAvatarForDialogs","GetNewMessagesThunk","UserId","_ref2","SendNewMessageThunk","_ref3","GetNewMessagesCountThunk","_ref6","DialogsReducer","NewAllDialogs","newInterlocutorAvatar","Set_NewMessagesCount","Portion_Size_Changer","Users","totalUsersCount","IsFetching","InProcess","PortionSize","FoundedUser","OnFollow","userID","onUnFollow","ToggleIsFetching","ToggleInProcess","UserID","UsersReducer","map","us","followed","filter","PortionSizeChangingValue","NewFoundedUser","login","IsLogined","CaptchaUrl","SetAuthUser","AuthMeThunk","_data$data","resultCode","LogOutThunk","GetCaptchaThunk","_ref4","captchaURL","url","CaptchaURLFromServer","AuthReducer","inition","InitializateReducer","reducers","combineReducers","ProfileData","MessagesData","UsersData","Auth","form","formReducer","Init","store","createStore","applyMiddleware","thunkMiddleWare","AccountIconComponent","props","_useState","useState","_useState2","slicedToArray","anchorEl","setAnchorEl","isMenuOpen","handleMenuClose","menuId","renderMenu","react_default","createElement","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","className","hs","UserProfile","fullName","react_router_dom","to","MenuItem","onClick","IconButton","edge","aria-label","aria-controls","aria-haspopup","event","currentTarget","color","AccountCircle_default","MessagesIcon","classes","makeStyles","theme","grow","flexGrow","sectionDesktop","defineProperty","display","breakpoints","up","useStyles","Badge_default","badgeContent","Mail_default","People_default","Header","hc","activeClassName","UsersIcon","Header_MessagesIcon","AcountIcon","Preloader","src","LoadingSvg","GetProfileSelector","GetStatusSelector","GetIsMyPageSelector","GetPostsSelector","GetUserIDSelector","GetIsLoginedSelector","GetLoginSelector","GetIsFetchingSelector","GetinitionSelector","GetNewMessagesCountSelector","HeaderContainer","Fragment","Loader","components_Header_Header","React","Component","connect","DialogInfo","date","MessageSendTime","split","time","d","pc","DialogUserName","DialogUserAvatar","Dialogs","el","Dialogs_DialogInfo","key","userName","small","large","newMessagesCount","lastDialogActivityDate","MapStateToPropsForRedirect","AuthRedirect","RedirectComp","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","value","react_router","GetAllDialogsSelector","GetMessagesDataSelector","DialogsContainer","GetAllDialogsThunk","components_Dialogs_Dialogs","compose","withRouter","Paginator","pagesCount","Math","ceil","pages","i","push","PortionNumber","SetPortionNumber","LeftBorderOfPortion","RightBorderOfPortion","PortionCount","PS","ev","OnChangedPage","User","um","user","name","disabled","some","OnUnFollow","FindUserModal","setOpen","handleClose","Button","variant","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","fullWidth","DialogActions","SubmitModal","SetFoundedUser","useEffect","_useState3","_useState4","FoundingMode","SetFoundingMode","OnSubmitData","FindUserThunk","document","getElementById","FUStyles","foundArea","SearchingResult","items","FoundedUsers","Users_User","GoBack","FindUserButton","UserSearchModal","PurifyUsers","ChangePortionSize","Users_FindUser","common_Paginator_Paginator","GetUsers","GetPageSize","GetTotalUsersCount","GetCurrentPage","GetIsFeching","GetInProgress","GetPortionSize","GetFoundedUserSelector","UsersContainer","pageNumber","_this","SetCurrentPage","getUsersThunk","followThunk","unfollowThunk","totalCount","stopSubmit","_error","ProfileStatusF","IsStatusChanging","SetIsStatusChanging","Status","SetStatus","onChange","e","onBlur","SetProfileStatus","onDoubleClick","Contact","ContactValue","cs","ContactName","ProfileContacts","keys","contacts","ProfileContactsValues","pds","aboutME","aboutMe","lookingForAJob","lookingForAJobDescription","buttonEditInformation","ContactsEditingOn","values","UserInfo_Contact","SetIsAnyContact","ProfileAvatar","SelectPhoto","target","files","SetProfilePhoto","accept","htmlFor","TextArea","meta","objectWithoutProperties","touched","EVS","assign","TextAreaAboutMe","Input","_ref5","InputName","_ref7","CreateField","placeholder","validators","component","text","Field","validate","required","MaxLengthCreator","MaxLengthValue","max300","ProfileDataEditorForm","onSubmit","handleSubmit","ContactsEditingOFF","maxLength300","ReduxSendMessageOnUserPageForm","reduxForm","lm","AuthError","MessageSendingModOFF","SendMessageOnUserPage","ChosedSendMessage","SetChosedSendMessage","Formdata","MessageFromUserPage","ProfileDataEditorFormRedux","UserInfo","ContactsIsEditing","SetContactsIsEditing","UserInfo_ProfileAvatar","UserInfo_ProfileStatusF","UserInfo_SendMessageOnUserPage","initialValues","formData","SaveProfileData","then","UserInfo_ProfileData","message","likecount","maxValue250","ReduxMyPostForm","MyPosts","memo","posts","MyPosts_Post_Post","formDatas","addpost","postArea","MyPostsConteiner","MyPosts_MyPosts","PureComponent","Profile","Profile_UserInfo_UserInfo","MyPosts_MyPostsConteiner","ProfileContainer","params","SetIsMyPage","history","GetProfileStatusThunk","ProfileDataToPaint","prevProps","prevState","snapshot","components_Profile_Profile","SetProfileStatusThunk","SetProfilePhotoThunk","UpdateProfileInfoThunk","getState","profileID","Promise","reject","DeleteConfirmWindow","closeWindow","SetToConfirmDeleting","ms","ToConfirmDeleting","CloseButton","deleteMessage","MessageToRestore","SetMessageToRestore","Message_DeleteConfirmWindow","DeleteMessageThunk","DialoguserID","maxValue300","ReduxMessageWithUserForm","MessagesWithUser","SetMessagesData","mwuStyles","addedAt","senderName","senderId","MyID","Message_DeleteMessage","Viewed","MessageTextArea","MessagesContainer","GetInterlocutorAvatarThunk","GetProfileAvatarThunk","Message_MessagesWithUser","maxLength50","ReduxLoginForm","LoginUserPhoto","imgUser","LoginThunk","withStyles","root","spacing","closeButton","position","right","top","palette","grey","children","other","disableTypography","Typography","Close_default","LoginModalWindow","MuiDialogContent","CustomizedDialogs","_React$useState","_React$useState2","aria-labelledby","LoginModal_DialogTitle","dividers","components_Login_Login","LoginPage","LoginPageAlarm","AuthButton","App","InitializationAPPthunk","Header_HeaderContainer","exact","path","render","Dialogs_DialogsContainer","Message_MessagesContainer","ProfileCOntainer","Users_UsersContainer","Login_LoginPage","promise","all","ReactDOM","basename","process","react_redux_es","src_App_0","navigator","serviceWorker","ready","registration","unregister","bg","bg10","logModalWindow"],"mappings":"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","file":"static/js/main.cbb19e1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"numbers\":\"Paginator_numbers__1V04X\",\"setNumbers\":\"Paginator_setNumbers__L_c7_\",\"button\":\"Paginator_button__24DIp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Users_Main__2xXSo\",\"img\":\"Users_img__2oaoF\",\"button\":\"Users_button__2o3wY\",\"Names\":\"Users_Names__1_6so\",\"Posts\":\"Users_Posts__3kZD6\",\"Country\":\"Users_Country__3gYtG\",\"City\":\"Users_City__2_dM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pp\":\"MyPosts_pp__oOvBm\",\"marginPost\":\"MyPosts_marginPost__1eXDQ\",\"button\":\"MyPosts_button__BRsVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__GvU_X\",\"img\":\"Post_img__1drkR\",\"like\":\"Post_like__VlEH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"ElementsValidators_formControl__2NyA5\",\"error\":\"ElementsValidators_error__3FUa5\",\"textarea\":\"ElementsValidators_textarea__3cIBd\",\"button\":\"ElementsValidators_button__tZ8xv\",\"input\":\"ElementsValidators_input__23YpE\",\"TextAreaMessage\":\"ElementsValidators_TextAreaMessage__16qP9\",\"textareaAboutMe\":\"ElementsValidators_textareaAboutMe__1i4aL\",\"ContactFormInput\":\"ElementsValidators_ContactFormInput__2F0Oc\",\"TextAreaDialogsMessage\":\"ElementsValidators_TextAreaDialogsMessage__3UVNe\",\"FindFormInput\":\"ElementsValidators_FindFormInput__2CswA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3L50G\",\"IconsWrapper\":\"Header_IconsWrapper__O29iG\",\"item\":\"Header_item__2BL1D\",\"log\":\"Header_log__2oet5\",\"loader\":\"Header_loader__1oqn8\",\"MessagesIconStyle\":\"Header_MessagesIconStyle__4F9-k\",\"AccountIconPosition\":\"Header_AccountIconPosition__bmvpU\",\"accountIconUserName\":\"Header_accountIconUserName__1yn7c\",\"loginPosition\":\"Header_loginPosition__1Mv6C\",\"loginButton\":\"Header_loginButton__1rOO6\",\"MessagesIconPosition\":\"Header_MessagesIconPosition__1HtJ4\",\"UsersIconPosition\":\"Header_UsersIconPosition__3MEkZ\",\"active\":\"Header_active__wKwwX\",\"startPosition\":\"Header_startPosition__18IcE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userdescrition\":\"UserInfo_userdescrition__3mhuU\",\"UserPhoto\":\"UserInfo_UserPhoto__28MeR\",\"ProfileName\":\"UserInfo_ProfileName__ioqSD\",\"UserName\":\"UserInfo_UserName__3jEfi\",\"FormError\":\"UserInfo_FormError__EPiL-\",\"goback\":\"UserInfo_goback__3tajc\",\"MyContacts\":\"UserInfo_MyContacts__3Cxig\",\"input\":\"UserInfo_input__1T4oP\",\"ContactsForm\":\"UserInfo_ContactsForm__1gWsD\",\"MyName\":\"UserInfo_MyName__ybeTv\",\"buttonSaveChanges\":\"UserInfo_buttonSaveChanges__28dF5\",\"buttonGoBack\":\"UserInfo_buttonGoBack__1urJa\",\"EditorFormBG\":\"UserInfo_EditorFormBG__1shzc\"};","module.exports = __webpack_public_path__ + \"static/media/loader1.54c96e01.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__8hXUq\"};","module.exports = __webpack_public_path__ + \"static/media/viewed1.1334aba6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/closeButton.8c53b830.png\";","module.exports = __webpack_public_path__ + \"static/media/trash.99ef094b.png\";","module.exports = __webpack_public_path__ + \"static/media/userLog.ae20f8de.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageFormStyle\":\"Messages_MessageFormStyle__3_75P\",\"dateStyle\":\"Messages_dateStyle__1z3DB\",\"img\":\"Messages_img__3OsI6\",\"messageText\":\"Messages_messageText__1fb-7\",\"UserNameInMessages\":\"Messages_UserNameInMessages__1eMkc\",\"viewed\":\"Messages_viewed__2S_Ep\",\"fontStyles\":\"Messages_fontStyles__1kczt\",\"confirmDeletingWindow\":\"Messages_confirmDeletingWindow__1l7zx\",\"confirmDeletingWindowButtons\":\"Messages_confirmDeletingWindowButtons___hBhx\",\"buttontsDelta\":\"Messages_buttontsDelta__FwB_z\",\"confirmDeletingWindowHeader\":\"Messages_confirmDeletingWindowHeader__3O44g\",\"confirmDeletingWindowText\":\"Messages_confirmDeletingWindowText__1CX63\",\"imgClose\":\"Messages_imgClose__2UMNq\",\"deleteMessageStyle\":\"Messages_deleteMessageStyle__1uqFk\",\"wrapper\":\"Messages_wrapper__miyNy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Dialogs_Main__fgm98\",\"DialogUserPhoto\":\"Dialogs_DialogUserPhoto__2S4Tu\",\"padding\":\"Dialogs_padding__3E-h0\",\"dialogs\":\"Dialogs_dialogs__BjYAn\",\"dialogsItems\":\"Dialogs_dialogsItems__1VDH2\",\"active\":\"Dialogs_active__2EN3N\",\"messages\":\"Dialogs_messages__1bTDr\",\"img\":\"Dialogs_img__1DEd5\",\"header\":\"Dialogs_header__xOCfp\",\"button\":\"Dialogs_button__30gtx\",\"DialogArea\":\"Dialogs_DialogArea__2YCQ-\",\"item\":\"Dialogs_item__be1yr\",\"activeLink\":\"Dialogs_activeLink__309Uh\",\"deleteMessageStyle\":\"Dialogs_deleteMessageStyle__3GrY8\",\"ConfirmText\":\"Dialogs_ConfirmText__3Xy4I\",\"ToTrash\":\"Dialogs_ToTrash__3Py0m\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"96428d9a-0d9d-4cb1-8a30-3ebf6693ac4b\"\r\n    }\r\n})\r\n\r\nexport const API = {\r\n\r\n    async getUsers(currentPage = 1, pageSize = 10) {\r\n        const response = await instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        return response.data\r\n    },\r\n\r\n    async AuthMe() {\r\n        const response = await instance.get(`auth/me`)\r\n        return response.data\r\n    },\r\n\r\n    async getProfile(ProfileID = 2) {\r\n        const response = await instance.get(`profile/` + ProfileID)\r\n        return response.data\r\n    },\r\n\r\n    async DelSub(userId) {\r\n        const response = await instance.delete(`follow/${userId}`)\r\n        return response.data\r\n    },\r\n\r\n    async AddSub(userId) {\r\n        const response = await instance.post(`follow/${userId}`)\r\n        return response.data\r\n    },\r\n\r\n    async getProfileStatus(ProfileID = 2) {\r\n        const response = await instance.get(`profile/status/` + ProfileID)\r\n        return response.data\r\n    },\r\n\r\n    async setProfileStatus(status) {\r\n        const response = await instance.put(`profile/status/`, {status: status})\r\n        return response.data\r\n\r\n    },\r\n\r\n    async Login(email, password, rememberMe, captcha) {\r\n        const response = await instance.post(`auth/login/`, {\r\n            email: email,\r\n            password: password,\r\n            rememberMe: rememberMe,\r\n            captcha: captcha\r\n        })\r\n        return response.data\r\n    },\r\n\r\n    async LogOut() {\r\n        const response = await instance.delete(`auth/login`)\r\n        return response.data\r\n\r\n    },\r\n\r\n    async LoadPhotoOnServer(photo) {\r\n        const formdata = new FormData()\r\n        formdata.append(\"image\", photo)\r\n        const response = await instance.put('profile/photo', formdata, {\r\n            'Content-Type': 'multipart/form-data'\r\n        })\r\n        return response.data\r\n    },\r\n    async PutProfileDataOnServer(profile) {\r\n        const response = await instance.put('profile', profile)\r\n        return response.data\r\n    },\r\n    async GetCaptchaFromServer() {\r\n        const response = await instance.get('security/get-captcha-url')\r\n        return response.data\r\n    },\r\n    async GetAllDialogs() {\r\n        const response = await instance.get('dialogs')\r\n        return response.data\r\n    },\r\n    async GetNewMessagesFromServer(userId) {\r\n        const response = await instance.get(`dialogs/${userId}/messages`)\r\n        return response.data\r\n    },\r\n    async SendNewMessage(userId,NewMessage) {\r\n        const response = await instance.post(`dialogs/${userId}/messages`,{\r\n            body:NewMessage\r\n        })\r\n        return response.data\r\n    },\r\n    async GetNewMessagesCount() {\r\n        const response = await instance.get('dialogs/messages/new/count')\r\n        return response\r\n    },\r\n    async DeleteMessage(MessageID) {\r\n        const response = await instance.delete(`dialogs//messages/${MessageID}`)\r\n        return response\r\n    },\r\n    async FindUser(UserName) {\r\n        const response = await instance.get(`users?term=${UserName}`)\r\n        return response\r\n    }\r\n\r\n}\r\n","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst add_post = 'Profile/ADD_POST'\r\nconst Set_Profile_Of_User = 'Profile/Set_Profile_Of_User'\r\nconst Set_Status_Of_User = '/Profile/Set_Status_Of_User'\r\nconst Set_Photo_Of_User = '/Profile/Set_Photo_Of_User'\r\nconst Set_Is_My_Page = '/Profile/Set_Is_My_Page'\r\n\r\n\r\nlet DefaultState = {\r\n    Posts: [],\r\n    TextNewPost: '',\r\n    profile: null,\r\n    status: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n    IsMyPage: false,\r\n}\r\n\r\nconst ProfileReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case add_post: {\r\n            let NewPost = {\r\n                id: 6,\r\n                Post: action.newtext,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                Posts: [...state.Posts, NewPost],\r\n            }\r\n        }\r\n        case Set_Profile_Of_User: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case Set_Status_Of_User: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case Set_Photo_Of_User: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photo}\r\n            }\r\n        }\r\n        case Set_Is_My_Page: {\r\n            return {...state, IsMyPage: action.bool}\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addpost = (text) => {\r\n    return {type: add_post, newtext: text}\r\n}\r\n\r\nexport const setProfileOfUser = (profile) => {\r\n    return {type: Set_Profile_Of_User, profile}\r\n}\r\n\r\nexport const SetStatusOfUser = (status) => {\r\n    return {type: Set_Status_Of_User, status}\r\n}\r\n\r\nexport const SetPhotoOfUser = (photo) => {\r\n    return {type: Set_Photo_Of_User, photo}\r\n}\r\n\r\nexport const SetIsMyPage = (bool) => {\r\n    return {type: Set_Is_My_Page, bool}\r\n}\r\n\r\n\r\n\r\nexport const GetProfileThunk = (ProfileID) => async (dispatch) => {\r\n    const data = await API.getProfile(ProfileID)\r\n    dispatch(setProfileOfUser(data))\r\n}\r\n\r\nexport const GetProfileStatusThunk = (userID) => async (dispatch) => {\r\n    const data = await API.getProfileStatus(userID)\r\n    dispatch(SetStatusOfUser(data))\r\n}\r\n\r\nexport const SetProfileStatusThunk = (status) => async (dispatch) => {\r\n    const data = await API.setProfileStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetStatusOfUser(status))\r\n    }\r\n}\r\n\r\nexport const SetProfilePhotoThunk = (photo) => async (dispatch) => {\r\n    const data = await API.LoadPhotoOnServer(photo)\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetPhotoOfUser(data.data.photos))\r\n    }\r\n}\r\n\r\nexport const UpdateProfileInfoThunk = (profile) => async (dispatch, getState) => {\r\n    const profileID = getState().Auth.userId\r\n    const data = await API.PutProfileDataOnServer(profile)\r\n    if (data.resultCode === 0) {\r\n        dispatch(GetProfileThunk(profileID))\r\n    } else {\r\n        dispatch(stopSubmit(\"ProfileDataEditorForm\",{_error : data.messages[0]}))\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileReducer","import {API} from \"../API/requests\";\r\n\r\nconst Set_All_Dialogs = 'Dialogs/Set_All_Dialogs'\r\nconst Set_New_Messages = 'Dialogs/Set_New_Messages'\r\nconst Set_InterlocutorAvatar = 'Dialogs/Set_InterlocutorAvatar'\r\nconst Set_UserAvatarForDialogs = 'Dialogs/Set_UserAvatarForDialogs'\r\nconst Set_NewMessagesCount = 'Dialogs/Set_NewMessagesCount'\r\n\r\nlet DefaultState = {\r\n    users: [],\r\n    messages: [],\r\n    avatars: [{}],\r\n    NewMessageText: '',\r\n    AllDialogs: [],\r\n    DialogsMessages: null,\r\n    InterlocutorAvatar : \"\",\r\n    UserAvatar : \"\",\r\n    NewMessagesCount : 0\r\n}\r\nconst DialogsReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n\r\n        case Set_All_Dialogs : {\r\n            return {...state, AllDialogs: action.NewAllDialogs}\r\n        }\r\n        case  Set_New_Messages : {\r\n            return {...state, DialogsMessages: action.NewMessagesData}\r\n        }\r\n        case Set_InterlocutorAvatar :{\r\n            return {\r\n                ...state, InterlocutorAvatar : action.newInterlocutorAvatar\r\n            }\r\n        }\r\n        case Set_UserAvatarForDialogs :{\r\n            return {\r\n                ...state, UserAvatar : action.UserAvatar\r\n            }\r\n        }\r\n        case Set_NewMessagesCount :{\r\n            return {\r\n                ...state, Set_NewMessagesCount : action.UserAvatar\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const SetAllDialogs = (NewAllDialogs) => {\r\n    return {type: Set_All_Dialogs, NewAllDialogs}\r\n}\r\nexport const SetNewMessages = (NewMessagesData) => {\r\n    return {type: Set_New_Messages, NewMessagesData}\r\n}\r\nexport const setInterlocutorAvatar = (newInterlocutorAvatar) => {\r\n    return {type: Set_InterlocutorAvatar , newInterlocutorAvatar}\r\n}\r\nexport const SetNewMessagesCount = (NewMessagesCount) => {\r\n    return {type: Set_NewMessagesCount , NewMessagesCount}\r\n}\r\nexport const setUserAvatarForDialogs = (UserAvatar) => {\r\n    return {type: Set_UserAvatarForDialogs , UserAvatar}\r\n}\r\n\r\nexport const GetAllDialogsThunk = () => async (dispatch) => {\r\n    const data = await API.GetAllDialogs()\r\n    dispatch(SetAllDialogs(data))\r\n}\r\nexport const GetNewMessagesThunk = (UserId) => async (dispatch) => {\r\n    const data = await API.GetNewMessagesFromServer(UserId)\r\n    if (!data.error) {\r\n        dispatch(SetNewMessages(data))\r\n    }\r\n\r\n}\r\nexport const SendNewMessageThunk = (UserId, NewMessage) => async (dispatch) => {\r\n    const data = await API.SendNewMessage(UserId, NewMessage)\r\n    if (!data.error) {\r\n        dispatch(GetNewMessagesThunk(UserId))\r\n    }\r\n}\r\nexport const GetInterlocutorAvatarThunk = (UserId) => async (dispatch) => {\r\n    const data = await API.getProfile(UserId)\r\n        dispatch(setInterlocutorAvatar(data.photos.small))\r\n}\r\nexport const GetProfileAvatarThunk = (UserID) => async (dispatch) => {\r\n    const data = await API.getProfile(UserID)\r\n        dispatch(setUserAvatarForDialogs(data.photos.small))\r\n}\r\nexport const GetNewMessagesCountThunk = () => async (dispatch) => {\r\n    const data = await API.GetNewMessagesCount()\r\n    dispatch(SetNewMessagesCount(data))\r\n}\r\nexport const DeleteMessageThunk = (MessageID,UserID) => async (dispatch) => {\r\n   await API.DeleteMessage(MessageID)\r\n    dispatch(GetNewMessagesThunk(UserID))\r\n\r\n}\r\n\r\n\r\nexport default DialogsReducer","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst follow = 'Users/FOLLOW'\r\nconst unfollow = 'Users/UNFOLLOW'\r\nconst setusers = 'Users/SET_USERS'\r\nconst Set_Current_Page= 'Users/SET_CURRENT_PAGE'\r\nconst Set_Total_Count_Of_Users = 'Users/Set_Total_Count_Of_Users'\r\nconst IsFetching_Toggle = 'Users/Toggle_is_fetching'\r\nconst IsInProcess_Togle = 'Users/IsInProcess_Togle'\r\nconst Portion_Size_Changer='Users/Portion_Size_C                                                                hanger'\r\nconst Set_Founded_User='Users/Set_Founded_User'\r\n\r\nlet DefaultState = {\r\n        Users: [],\r\n        pageSize : 9,\r\n        totalUsersCount:0,\r\n        currentPage : 1,\r\n         IsFetching : false,\r\n        InProcess : [],\r\n    PortionSize : 1,\r\n    FoundedUser : null\r\n}\r\n\r\nconst UsersReducer =  (state = DefaultState,action) => {\r\n    switch (action.type) {\r\n        case follow: {\r\n        return {\r\n          ...state,\r\n          Users:state.Users.map(us =>  {\r\n              if (us.id === action.userID) {\r\n                  return {\r\n                      ...us,\r\n                      followed:true\r\n                  }\r\n              }\r\n              return us\r\n          })\r\n        }\r\n    }\r\n        case unfollow: {\r\n            return {\r\n                ...state,\r\n                Users: state.Users.map(us =>{\r\n                    if(us.id === action.userID){\r\n                        return {\r\n                            ...us,\r\n                            followed:false\r\n                        }\r\n                    }\r\n                    return us\r\n                })\r\n            }\r\n        }\r\n        case setusers:{\r\n            return {...state, Users: action.users}\r\n        }\r\n        case Set_Current_Page:{\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case Set_Total_Count_Of_Users:{\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case IsFetching_Toggle:{\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        case IsInProcess_Togle:{\r\n            return {...state,\r\n                InProcess : action.IsFetching ?\r\n                    [...state.InProcess, action.UserID]\r\n                    : state.InProcess.filter(id => id != action.UserID)\r\n            }\r\n        }\r\n        case Portion_Size_Changer:{\r\n            return {...state,PortionSize : action.PortionSizeChangingValue}\r\n        }\r\n        case Set_Founded_User:{\r\n            return {...state, FoundedUser : action.NewFoundedUser}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const OnFollow = (userID) => {\r\n    return {type : follow,userID:userID }\r\n}\r\nexport const onUnFollow = (userID) => {\r\n    return {type : unfollow, userID:userID }\r\n}\r\nexport const setUsers = (users) => {\r\n    return {type : setusers, users:users }\r\n}\r\nexport const SetCurrentPage = (currentPage) => {\r\n    return {type : Set_Current_Page, currentPage: currentPage}\r\n}\r\nexport const SetTotalCountOfUsers = (totalCount) => {\r\n    return {type : Set_Total_Count_Of_Users, totalUsersCount: totalCount}\r\n}\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type : IsFetching_Toggle, IsFetching}\r\n}\r\nexport const ToggleInProcess = (IsFetching,UserID) => {\r\n    return {type : IsInProcess_Togle, IsFetching,UserID}\r\n}\r\n\r\nexport const ChangePortionSize = (value) => {\r\n    return {type : Portion_Size_Changer, PortionSizeChangingValue : value }\r\n}\r\nexport const SetFoundedUser = (NewFoundedUser) => {\r\n    return {type : Set_Founded_User, NewFoundedUser }\r\n}\r\n\r\nexport const getUsersThunk = (currentPage,pageSize) =>async (dispatch) =>{\r\n        dispatch (ToggleIsFetching(true))\r\n       const data = await API.getUsers(currentPage,pageSize)\r\n            dispatch(ToggleIsFetching(false))\r\n            dispatch( setUsers(data.items))\r\n            dispatch(SetTotalCountOfUsers(data.totalCount))\r\n    }\r\n\r\nexport  const  unfollowThunk = (userID) =>async (dispatch) =>{\r\n        dispatch(ToggleInProcess(true,userID))\r\n       const data = await API.DelSub(userID)\r\n            if (data.resultCode == 0) {\r\n                dispatch(onUnFollow(userID))\r\n            }\r\n            dispatch(ToggleInProcess(false,userID))\r\n    }\r\n\r\nexport  const  followThunk = (userID) =>async (dispatch) =>{\r\n        dispatch(ToggleInProcess(true,userID))\r\n      const data = await API.AddSub(userID)\r\n            if (data.resultCode == 0) {\r\n                dispatch(OnFollow(userID))\r\n            }\r\n            dispatch(ToggleInProcess(false,userID))\r\n    }\r\n\r\nexport const FindUserThunk = (UserName) =>async (dispatch) =>{\r\n    dispatch (ToggleIsFetching(true))\r\n    const data = await API.FindUser(UserName)\r\n    if(!data.data.error)\r\n    {\r\n        dispatch(ToggleIsFetching(false))\r\n        dispatch(SetFoundedUser(data.data))\r\n    }else {\r\n        dispatch(stopSubmit(\"FindUser\", {_error: data.data.error.messages[0]}))\r\n    }\r\n}\r\n\r\nexport default UsersReducer","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'Auth/SET_USER_DATA'\r\nconst IsFetching_Toggle = 'Auth/IsFetching_Toggle'\r\nconst Set_Captcha_Url = 'Auth/Set_Captcha_Url'\r\n\r\nlet DefaultState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    IsLogined: false,\r\n    IsFetching: false,\r\n    CaptchaUrl : null\r\n}\r\n\r\nconst AuthReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA : {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        case IsFetching_Toggle: {\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        case Set_Captcha_Url: {\r\n            return {...state, CaptchaUrl: action.CaptchaURLFromServer}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetAuthUser = (userId, email, login, IsLogined) =>\r\n    ({type: SET_USER_DATA, data: {userId, email, login, IsLogined}})\r\n\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type: IsFetching_Toggle, IsFetching}\r\n}\r\nexport const SetCaptchaUrl = (CaptchaURLFromServer) => {\r\n    return {type: Set_Captcha_Url, CaptchaURLFromServer}\r\n}\r\n\r\nexport const AuthMeThunk = () => async (dispatch) => {\r\n    ToggleIsFetching(true)\r\n    const data = await API.AuthMe() //возвращает данные авторизованного юзера\r\n    dispatch(ToggleIsFetching(false))\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data\r\n        dispatch(SetAuthUser(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const LoginThunk = (email, password, rememberMe = false,captcha) =>\r\n    async (dispatch) => {\r\n        const data = await API.Login(email, password, rememberMe,captcha)\r\n        if (data.resultCode === 0) {\r\n            dispatch(AuthMeThunk())\r\n        } else {\r\n            if(data.resultCode === 10){\r\n                dispatch(GetCaptchaThunk())\r\n            }\r\n            dispatch(stopSubmit(\"login\", {_error: data.messages[0]}))\r\n        }\r\n    }\r\n\r\nexport const LogOutThunk = () => async (dispatch) => {\r\n    const data = await API.LogOut()\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetAuthUser(null, null, null, false))\r\n    }\r\n}\r\nexport const GetCaptchaThunk = () => async (dispatch) => {\r\n    const data = await API.GetCaptchaFromServer()\r\n    const captchaURL= data.url\r\n        dispatch(SetCaptchaUrl(captchaURL))\r\n\r\n}\r\n\r\n\r\nexport default AuthReducer","import {AuthMeThunk} from \"../data/AuthReducer\"\r\n\r\nconst INITIALIZATED = 'Init/INITIALIZATED'\r\n\r\nlet DefaultState = {inition: false}\r\n\r\nconst InitializateReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZATED : {\r\n            return {\r\n                ...state,\r\n                inition: true\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializating = () => ({type: INITIALIZATED})\r\n\r\n\r\n\r\nexport const InitializationAPPthunk = () => async (dispatch) => {\r\n        let promise = dispatch(AuthMeThunk())\r\n       await Promise.all([promise]);\r\n            dispatch(initializating())\r\n    }\r\n\r\nexport default InitializateReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport ProfileReducer from \"./ProfileReduser\";\r\nimport DialogsReducer from \"./DIalogsReduser\";\r\nimport UsersReducer from \"./UsersReduser\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport  thunkMiddleWare from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport InitializateReducer from \"./InitializatonReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfileData: ProfileReducer,\r\n    MessagesData: DialogsReducer,\r\n    UsersData : UsersReducer,\r\n    Auth : AuthReducer,\r\n    form : formReducer,\r\n    Init :  InitializateReducer\r\n})\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunkMiddleWare))\r\n\r\nwindow.store = store;\r\nexport default store\r\n","import React, {useState} from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport AccountCircleHeader from '@material-ui/icons/AccountCircle';\r\nimport hs from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst AccountIconComponent = (props) => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n\r\n    const handleProfileMenuOpen = event => {\r\n        setAnchorEl(event.currentTarget);\r\n        props.LogOutThunk()\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\nconst OnLogOut = ()=>{\r\n    setAnchorEl(null);\r\n    props.LogOutThunk()\r\n }\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <div className={hs.accountIconUserName}>\r\n                    {props.UserProfile && props.UserProfile.fullName}\r\n            </div>\r\n\r\n            <div className={`${hs.item} ${hs.active}`}>\r\n            <NavLink to=\"/Profile/\">\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            </NavLink>\r\n            </div>\r\n            <MenuItem onClick={OnLogOut}>\r\n                     My account\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return <div>\r\n            <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleProfileMenuOpen}\r\n                color=\"inherit\"\r\n            >\r\n                <AccountCircleHeader />\r\n            </IconButton>\r\n                {renderMenu}\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default AccountIconComponent;\r\n","import React from \"react\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge/Badge\";\r\nimport MailIconHeader from '@material-ui/icons/Mail';\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\n\r\nconst MessagesIcon = (props) =>{\r\n    const useStyles = makeStyles(theme => ({\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        sectionDesktop: {\r\n            display: 'none',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'flex',\r\n            }\r\n        }\r\n        }))\r\n    const classes = useStyles();\r\n    return <div>\r\n\r\n        <div className={classes.grow}  />\r\n        <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label= \"show 11 new mails\" color=\"inherit\">\r\n                <Badge\r\n                    badgeContent={props.NewMessagesCount !== 0 ? props.NewMessagesCount : null }\r\n                    color=\"primary\">\r\n                    <MailIconHeader />\r\n                </Badge>\r\n            </IconButton>\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default MessagesIcon","import React from \"react\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport UsersIcon from '@material-ui/icons/People';\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\n\r\nconst MessagesIcon = (props) =>{\r\n    const useStyles = makeStyles(theme => ({\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        sectionDesktop: {\r\n            display: 'none',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'flex',\r\n            }\r\n        }\r\n        }))\r\n    const classes = useStyles();\r\n    return <div>\r\n\r\n        <div className={classes.grow}  />\r\n        <div className={classes.sectionDesktop}>\r\n            <IconButton  color=\"inherit\">\r\n                    <UsersIcon />\r\n            </IconButton>\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default MessagesIcon","import React from 'react';\r\nimport hc from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport AccountIconComponent from \"./AcountIcon\";\r\nimport {LogOutThunk} from \"../../data/AuthReducer\";\r\nimport MessagesIcon from \"./MessagesIcon\";\r\nimport UsersIcon from \"./UsersIcon\"\r\n\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n    return <header className={hc.header}>\r\n        <div className={hc.item}>\r\n            {props.IsLogined\r\n                ?\r\n                <div className={hc.IconsWrapper}>\r\n                <div className={hc.startPosition} >\r\n\r\n                </div>\r\n                    <div className={hc.UsersIconPosition}>\r\n                        <div className={hc.MessagesIconPosition}>\r\n                            <div className={`${hc.item} ${hc.active}`}>\r\n                                <NavLink  activeClassName={hc.active} to={\"/Users/\"}>\r\n                                    <UsersIcon />\r\n                                </NavLink>\r\n                            </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className={hc.MessagesIconPosition}>\r\n                        <div className={`${hc.item} ${hc.active}`}>\r\n                        <NavLink  activeClassName={hc.active} to={\"/Dialogs/\"}>\r\n                        <MessagesIcon NewMessagesCount={props.NewMessagesCount}/>\r\n                        </NavLink>\r\n                        </div>\r\n                    </div>\r\n\r\n                <div className={hc.AccountIconPosition}>\r\n                    <AccountIconComponent LogOutThunk={LogOutThunk}\r\n                                          UserProfile={props.UserProfile} />\r\n                    <button className={hc.log} onClick={()=>{props.LogOutThunk()}}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n\r\n                </div>\r\n\r\n                :\r\n                    <div className={hc.loginPosition}>\r\n                            <NavLink className={hc.loginButton}  to={'/login'} >\r\n                                Login\r\n                            </NavLink>\r\n                    </div>\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n    </header>\r\n\r\n}\r\nexport default Header;\r\n","import React from 'react'\r\nimport LoadingSvg from '../../../assetss/images/loader1.gif';\r\nimport hc from '../../../Header/Header.module.css'\r\n\r\nlet Preloader = (props) =>{\r\n    return <img className={hc.loader} src={LoadingSvg}/>\r\n}\r\nexport default Preloader","export const GetProfileSelector = (state) =>{\r\n    return state.ProfileData.profile\r\n}\r\nexport const GetStatusSelector = (state) =>{\r\n    return state.ProfileData.status\r\n}\r\nexport const GetIsMyPageSelector = (state) =>{\r\n    return state.ProfileData.IsMyPage\r\n}\r\nexport const GetPostsSelector = (state) =>{\r\n    return state.ProfileData.Posts\r\n}\r\n\r\n\r\n","export const GetUserIDSelector = (state) =>{\r\n    return state.Auth.userId\r\n}\r\nexport const GetIsLoginedSelector = (state) => {\r\n    return state.Auth.IsLogined\r\n}\r\nexport const GetLoginSelector = (state) => {\r\n    return state.Auth.login\r\n}\r\nexport const GetIsFetchingSelector = (state) => {\r\n    return state.Auth.IsFetching\r\n}","export const GetinitionSelector = (state) =>{\r\n    return state.Init.inition\r\n}\r\nexport const GetNewMessagesCountSelector = (state) =>{\r\n    return state.MessagesData.NewMessagesCount\r\n}","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {LogOutThunk} from \"../../data/AuthReducer\";\r\nimport {GetProfileSelector} from \"../../data/ProfileSelectors\";\r\nimport {GetNewMessagesCountThunk} from \"../../data/DIalogsReduser\"\r\nimport {GetIsFetchingSelector, GetIsLoginedSelector, GetLoginSelector} from \"../../data/AuthSelectors\";\r\nimport {GetNewMessagesCountSelector} from \"../../data/InitialozationSelectors\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\ncomponentDidMount() {\r\n    this.props.GetNewMessagesCountThunk()\r\n}\r\n\r\n    render() {\r\n        return <>\r\n        {this.props.IsFetching ? <Preloader/> :null}\r\n          <Header {...this.props} />\r\n          </>\r\n    }\r\n\r\n}\r\nlet MapStateToProps = (state) => ({\r\n    IsFetching : GetIsFetchingSelector(state),\r\n    IsLogined: GetIsLoginedSelector(state),\r\n    login:GetLoginSelector(state),\r\n    UserProfile: GetProfileSelector(state),\r\n    NewMessagesCount : GetNewMessagesCountSelector(state)\r\n})\r\n\r\nexport default HeaderContainer = connect(MapStateToProps, {LogOutThunk,GetNewMessagesCountThunk})(HeaderContainer);\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport d from \"./Dialogs.module.css\";\r\nimport UserPhoto from \"./../assetss/images/userPhoto.jpg\"\r\nimport pc from \"../Profile/UserInfo/UserInfo.module.css\";\r\n\r\n\r\nconst DialogInfo = (props) => {\r\n\r\n    const date = props.MessageSendTime.split(\"T\")[0]\r\n    const time = props.MessageSendTime.split(\"T\")[1].split(\".\")[0]\r\n    return <div className={d.DialogArea}>\r\n        <div className={`${d.item} ${d.active}`}>\r\n        <NavLink   to={`/messages/${props.UserID}`}>\r\n        <div className={d.Main}>\r\n            <div className={pc.UserName}>\r\n                   {props.DialogUserName}\r\n                   <div>\r\n                {props.DialogUserAvatar ?\r\n                    <NavLink to={'/Profile/' + props.UserID}>\r\n                    <img className={d.DialogUserPhoto} src={props.DialogUserAvatar}/>\r\n                    </NavLink>\r\n                    :\r\n                    <NavLink to={'/Profile/' + props.UserID}>\r\n                    <img  className={d.DialogUserPhoto} src = {UserPhoto} />\r\n                    </NavLink>\r\n                }\r\n                   </div>\r\n            </div >\r\n            <div className={d.padding}>\r\n                    {props.NewMessagesCount  !== 0 ?\r\n                        \"you have a \" + props.NewMessagesCount + \" new messages\"\r\n                        : \"you don't have a new messages\"}\r\n            </div>\r\n            <div className={d.padding}>\r\n                {\r\n                    props.MessageSendTime ?\r\n                    <div>\r\n                        last message was :\r\n                        <div>\r\n                            {date}\r\n                        </div>\r\n                        <div>\r\n                            {time}\r\n                        </div>\r\n                    </div>\r\n                        : null\r\n                }\r\n            </div>\r\n        </div>\r\n        </NavLink>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default DialogInfo;","import React from 'react'\r\nimport DialogInfo from \"./DialogInfo\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return (<div >\r\n\r\n            {props.MessagesData.AllDialogs.map(el => {\r\n                return <DialogInfo key={el.id} DialogUserName={el.userName}\r\n                               DialogUserAvatar={el.photos.small ?\r\n                                   el.photos.small\r\n                                   : el.photos.large}\r\n                               NewMessagesCount={el.newMessagesCount}\r\n                               MessageSendTime={el.lastDialogActivityDate}\r\n                               UserID={el.id}\r\n                />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import React from \"react\"\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet MapStateToPropsForRedirect = (state)=>{\r\n    return{\r\n        IsLogined : state.Auth.IsLogined\r\n    }\r\n}\r\n\r\nexport const AuthRedirect = (Component) =>{\r\nclass RedirectComp extends React.Component {\r\n    render() {\r\n        if (!this.props.IsLogined) {\r\n            // редирект на страничку авторизации\r\n            return <Redirect to={\"/Login\"} />\r\n        }\r\n        return <Component {...this.props} />\r\n    }\r\n}\r\nlet ConectedAuthRedirectComp = connect(MapStateToPropsForRedirect)(RedirectComp)\r\nreturn ConectedAuthRedirectComp\r\n}","export const GetAllDialogsSelector = (state) =>{\r\n    return state.MessagesData.AllDialogs\r\n}\r\nexport const GetMessagesDataSelector = (state) =>{\r\n    return state.MessagesData\r\n}\r\n/*export const GetDialogsMessagesSelector = (state) =>{\r\n    return state.MessagesData.DialogsMessages\r\n}\r\nexport const GetUserAvatarSelector = (state) =>{\r\n    return state.MessagesData.UserAvatar\r\n}\r\nexport const GetinterlocutorAvatarSelector = (state) =>{\r\n    return state.MessagesData.InterlocutorAvatar\r\n}*/\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {SetNewMessages,GetAllDialogsThunk,\r\n    GetNewMessagesThunk,SendNewMessageThunk} from \"../../data/DIalogsReduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthRedirect} from \"../hocs/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {GetAllDialogsSelector, GetMessagesDataSelector} from \"../../data/DialogsSelectors\";\r\nimport { withRouter} from 'react-router-dom'\r\n\r\n\r\nclass DialogsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n      this.props.GetAllDialogsThunk()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialogs {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => ({\r\n MessagesData: GetMessagesDataSelector(state),\r\n    AllDialogs : GetAllDialogsSelector(state)\r\n})\r\n\r\nexport default compose(connect(StateToProps, {SetNewMessages,\r\n        GetAllDialogsThunk,GetNewMessagesThunk,SendNewMessageThunk}),\r\n    AuthRedirect,\r\n    withRouter)(DialogsContainer)","import PS from \"./Paginator.module.css\";\r\nimport React, {useState} from \"react\"\r\n\r\nconst Paginator = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize) // расчет кол-ва страниц\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let [PortionNumber, SetPortionNumber] = useState(1)\r\n    let LeftBorderOfPortion = (PortionNumber - 1) * props.PortionSize + 1\r\n    let RightBorderOfPortion = PortionNumber * props.PortionSize\r\n    let PortionCount = Math.ceil(pagesCount / props.PortionSize) // расчет кол-ва порций\r\n\r\n    return <div className={PS.setNumbers}>\r\n        {PortionNumber > 1 &&\r\n        <button className={PS.button} onClick={() => {\r\n            SetPortionNumber(PortionNumber - 1)\r\n        }}> back </button>}\r\n        {pages.filter(p => p >= LeftBorderOfPortion && p <= RightBorderOfPortion).map((p) => {\r\n            // нумерация страниц\r\n            return (\r\n\r\n                <span className={props.currentPage === p && PS.numbers}\r\n                      onClick={(ev) => {\r\n                          props.OnChangedPage(p)\r\n                      }}>\r\n                            {\"    \" + p}\r\n                        </span>\r\n\r\n            )\r\n        })}\r\n        &nbsp;&nbsp;\r\n        {PortionCount > PortionNumber &&\r\n\r\n        <button className={PS.button} onClick={() => {\r\n            SetPortionNumber(PortionNumber + 1)\r\n        }}>next </button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport um from \"./Users.module.css\";\r\nimport UserPhoto from \"../assetss/images/userPhoto.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport pc from \"../Profile/UserInfo/UserInfo.module.css\";\r\n\r\n\r\nlet User = (props) => {\r\n\r\n    return <div className={um.Main}>\r\n        <div>\r\n\r\n            <NavLink to={'/Profile/' + props.user.id}>\r\n                <img className={um.img} src={props.user.photos.small != null ? props.user.photos.small : UserPhoto}/>\r\n            </NavLink>\r\n            <div  className={pc.UserName}>\r\n                {props.user.name}\r\n            </div>\r\n            { props.IsLogined ?\r\n            <div>\r\n\r\n                { props.user.followed\r\n                        ? <button disabled={props.InProcess.some(id =>  id === props.user.id)}\r\n                                  onClick={() => {\r\n                                      props.OnUnFollow(props.user.id)\r\n                                  }} className={um.button}>\r\n                            unfollow\r\n                        </button>\r\n\r\n                        : <button disabled={props.InProcess.some(id => id === props.user.id)}\r\n                                  onClick={() => {\r\n                                      props.OnFollow(props.user.id)\r\n                                  }} className={um.button}>\r\n                            follow\r\n                        </button>\r\n                }\r\n            </div>\r\n                :null\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default User","import React,{useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n const  FindUserModal = (props)=> {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleSubmit = () => {\r\n        alert(document.getElementById('FindingUserName').value)\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Button  variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                Search user\r\n            </Button>\r\n            <Dialog    open={open} onClose={handleClose} >\r\n                <DialogTitle >Search user by name</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                       enter user name with you looking for\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"FindingUserName\"\r\n                        type=\"userName\"\r\n                        fullWidth\r\n                        name=\"finduser\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Go back\r\n                    </Button>\r\n                    <Button onClick={props.SubmitModal} color=\"primary\">\r\n                        Search\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\nexport default FindUserModal","import React, {useEffect, useState} from \"react\"\r\nimport FUStyles from \"./FindUser.module.css\";\r\nimport User from \"./User\";\r\nimport FindUserModal from \"../MaterialUI/ModalWindow/UserSearchModal\";\r\n\r\n\r\nconst FindUser = (props) => {\r\n    let [FoundedUser, SetFoundedUser] = useState(props.FoundedUser)\r\n    useEffect(() => {\r\n            SetFoundedUser(props.FoundedUser)\r\n        }, [props.FoundedUser]\r\n    )\r\n\r\n    let [FoundingMode, SetFoundingMode] = useState(false)\r\n\r\n    const FoundingModeON = () => {\r\n        SetFoundingMode(true)\r\n\r\n    }\r\n    const FoundingModeOFF = () => {\r\n        SetFoundingMode(false)\r\n    }\r\n\r\n\r\n    const FindUser = (OnSubmitData) => {\r\n        props.FindUserThunk(document.getElementById('FindingUserName').value)\r\n        FoundingModeON()\r\n    }\r\n\r\n\r\n    return <div>\r\n        {!FoundingMode ?\r\n            <div className={FUStyles.FindUserButton}>\r\n                <FindUserModal SubmitModal={FindUser}/>\r\n            </div>\r\n\r\n            :\r\n            <div>\r\n                <div className={FUStyles.foundArea}>\r\n\r\n\r\n\r\n                    {FoundedUser &&\r\n                    <div>\r\n                        <h2 className={FUStyles.SearchingResult}>\r\n                            Searching result :\r\n                            <div>\r\n\r\n                                {FoundedUser && FoundedUser.items.length === 0 ?\r\n                                    \"no one user with this name\"\r\n                                    : \"founded \" + FoundedUser.items.length + \" users \"}\r\n\r\n                            </div>\r\n                        </h2>\r\n                        <div className={FUStyles.FoundedUsers}>\r\n                            {FoundedUser.items.map(item => <User user={item}\r\n                                                                 key={item.id}\r\n                                                                 InProcess={props.InProcess}\r\n                                                                 OnUnFollow={props.OnUnFollow}\r\n                                                                 OnFollow={props.OnFollow}\r\n                                                                 IsLogined={props.IsLogined}/>)}\r\n                        </div>\r\n\r\n                    </div>\r\n                    }\r\n\r\n                </div>\r\n                <button\r\n                    className={FUStyles.GoBack}\r\n                    onClick={FoundingModeOFF}>\r\n                    go back\r\n                </button>\r\n            </div>\r\n\r\n        }\r\n\r\n    </div>\r\n\r\n}\r\nexport default FindUser","import React from 'react'\r\nimport Paginator from \"../assetss/common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport FindUser from \"./FindUser\";\r\n\r\n\r\n\r\n\r\nlet PurifyUsers = (props) => {\r\n\r\n\r\n    {props.ChangePortionSize(15)}\r\n    return <div>\r\n\r\n            <FindUser  FindUserThunk={props.FindUserThunk}\r\n                      FoundedUser={props.FoundedUser}\r\n                      InProcess={props.InProcess}\r\n                      OnUnFollow={props.OnUnFollow}\r\n                      OnFollow={props.OnFollow}\r\n                      IsLogined={props.IsLogined}\r\n            />\r\n\r\n\r\n        { props.Users.map(us =>  <User\r\n            user={us}\r\n            key={us.id}\r\n            InProcess={props.InProcess}\r\n            OnUnFollow={props.OnUnFollow}\r\n            OnFollow={props.OnFollow}\r\n            IsLogined={props.IsLogined}\r\n        />)\r\n        }\r\n\r\n       <Paginator OnChangedPage={props.OnChangedPage}\r\n                  currentPage={props.currentPage}\r\n                  totalUsersCount={props.totalUsersCount}\r\n                      pageSize={props.pageSize}\r\n                  PortionSize={props.PortionSize}\r\n       />\r\n    </div>\r\n}\r\nexport default PurifyUsers","export const GetUsers = (state) =>{\r\n    return state.UsersData.Users\r\n}\r\nexport const GetPageSize = (state) =>{\r\n    return state.UsersData.pageSize\r\n}\r\nexport const GetTotalUsersCount = (state) =>{\r\n    return state.UsersData.totalUsersCount\r\n}\r\n\r\nexport const GetCurrentPage = (state) =>{\r\n    return  state.UsersData.currentPage\r\n}\r\nexport const GetIsFeching = (state) =>{\r\n    return state.UsersData.IsFetching\r\n}\r\nexport const GetInProgress = (state) => {\r\n    return state.UsersData.InProcess\r\n}\r\n\r\nexport const GetPortionSize = (state) => {\r\n    return state.UsersData.PortionSize\r\n}\r\nexport const GetFoundedUserSelector = (state) => {\r\n    return state.UsersData.FoundedUser\r\n}\r\n\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followThunk,\r\n    unfollowThunk,\r\n    SetCurrentPage,\r\n    getUsersThunk,\r\n    ToggleInProcess,\r\n    ChangePortionSize,FindUserThunk\r\n} from \"../../data/UsersReduser\";\r\nimport PurifyUsers from \"./Users\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    GetCurrentPage,\r\n    GetInProgress,\r\n    GetIsFeching,\r\n    GetPageSize,\r\n    GetTotalUsersCount,\r\n    GetUsers,\r\n    GetPortionSize, GetFoundedUserSelector\r\n} from \"../../data/Users-Selectors\";\r\nimport { GetIsLoginedSelector} from \"../../data/AuthSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    /* this component using for make requests on server for a new users and drawing\r\nUi component (Users)*/\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    OnChangedPage = (pageNumber) => {\r\n        this.props.SetCurrentPage(pageNumber)\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.IsFetching ? <Preloader/> : null}\r\n            <PurifyUsers Users={this.props.Users}\r\n                         totalUsersCount={this.props.totalUsersCount}\r\n                         pageSize={this.props.pageSize}\r\n                         OnChangedPage={this.OnChangedPage}\r\n                         OnFollow={this.props.followThunk}\r\n                         OnUnFollow={this.props.unfollowThunk}\r\n                         currentPage={this.props.currentPage}\r\n                         ToggleInProcess={this.props.ToggleInProcess}\r\n                         InProcess={this.props.InProcess}\r\n                         IsLogined={this.props.IsLogined}\r\n                         ChangePortionSize={this.props.ChangePortionSize}\r\n                         PortionSize={this.props.PortionSize}\r\n                         FindUserThunk={this.props.FindUserThunk}\r\n                         FoundedUser={this.props.FoundedUser}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => {\r\n    return {\r\n        IsLogined : GetIsLoginedSelector(state),\r\n        Users: GetUsers(state),\r\n        pageSize: GetPageSize(state),\r\n        totalUsersCount: GetTotalUsersCount(state),\r\n        currentPage: GetCurrentPage(state),\r\n        IsFetching: GetIsFeching(state),\r\n        InProcess: GetInProgress(state),\r\n        PortionSize : GetPortionSize(state),\r\n        FoundedUser : GetFoundedUserSelector(state)\r\n    }\r\n}\r\n\r\n/*let DispatchToProps = (dispatch) => {\r\n    return {\r\n        onFollow: (userID) => {\r\n\r\n            dispatch(follow_AC(userID))\r\n        },\r\n        onUnFollow: (userID) => {\r\n\r\n            dispatch(unfollow_AC(userID))\r\n        },\r\n        setUsers: (Users) => {\r\n            dispatch(setUsers_AC(Users))\r\n        },\r\n        SetCurrentPage: (NumberOfPage) => {\r\n            dispatch(setCurrentPage_AC(NumberOfPage))\r\n        },\r\n        SetTotalCountOfUsers: (totalCount) => {\r\n            dispatch(SetTotalCountOfUsers_AC(totalCount))\r\n        },\r\n        ToggleIsFetching: (IsFetching) => {\r\n            dispatch(IsFetchingToggle_AC(IsFetching))\r\n        }\r\n    }\r\n}*/\r\n\r\n\r\nexport default compose(\r\n    connect(StateToProps,\r\n        {followThunk, unfollowThunk, SetCurrentPage,\r\n            ToggleInProcess, getUsersThunk,ChangePortionSize,FindUserThunk})\r\n)(UsersContainer)","import React, {useState, useEffect} from \"react\"\r\n\r\nconst ProfileStatusF = (props) => {\r\n\r\n\r\n    let [IsStatusChanging, SetIsStatusChanging] = useState(false)\r\n    let [Status, SetStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n            SetStatus(props.status)\r\n        }, [props.status]\r\n    )\r\n\r\n    const StatusChangingON = () => {\r\n        SetIsStatusChanging(true)\r\n    }\r\n\r\n    const StatusChangingOFF = () => {\r\n        SetIsStatusChanging(false)\r\n        props.SetProfileStatus(Status)\r\n\r\n    }\r\n\r\n    const OnStatusChange = (e) => {\r\n        SetStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (<div>\r\n            {props.IsMyPage ?\r\n                <div>\r\n                    {!IsStatusChanging ?\r\n                        <div>\r\n                <span onDoubleClick={StatusChangingON}>\r\n                Status  : {Status || \"the status is empty\"\r\n                }\r\n                </span>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <input onChange={OnStatusChange} onBlur={StatusChangingOFF} autoFocus={true}\r\n                                   value={Status}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                : Status || \"the status is empty\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusF","import React from \"react\"\r\nimport cs from \"./Contact.module.css\"\r\n\r\nconst Contact = (props) =>{\r\n\r\n\r\n    return <span>\r\n        {props.ContactValue &&\r\n        <div className={cs.contact} >\r\n        {props.ContactName} : {props.ContactValue}\r\n        </div>\r\n        }\r\n    </span>\r\n}\r\n\r\n\r\nexport default Contact","import React from \"react\"\r\nimport Contact from \"./Contact\";\r\nimport pds from \"./ProfileData.module.css\"\r\n\r\nconst ProfileData = (props) => {\r\nconst ProfileContacts = Object.keys(props.profile.contacts)\r\nconst ProfileContactsValues = ProfileContacts.map(el => props.profile.contacts[el])\r\nconst ValueNotNull = (values) =>{\r\n        return values !== null\r\n    }\r\n\r\n    return <div className={pds.aboutME}>\r\n        {\r\n            props.profile.aboutMe && <div>\r\n            {props.profile.aboutMe}\r\n        </div>\r\n        }\r\n\r\n        {\r\n            props.profile.lookingForAJob ?\r\n            <div>\r\n                Im looking for a job\r\n            </div>\r\n            :\r\n            <div>\r\n                Im have a job\r\n            </div>\r\n        }\r\n        {props.profile.lookingForAJobDescription &&\r\n        <div>\r\n            {props.profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div className={pds.contacts}>\r\n            <div>\r\n                {props.IsMyPage && <button className={pds.buttonEditInformation}\r\n                                           onClick={props.ContactsEditingOn}>\r\n                    edit information\r\n                </button>}\r\n            </div>\r\n            {\r\n                ProfileContactsValues.some(ValueNotNull) ?\r\n                    \"My contacts :\"\r\n                    : null\r\n            }\r\n\r\n            {ProfileContacts.map(key => {\r\n                return <Contact key={key} ContactName={key}\r\n                                ContactValue={props.profile.contacts[key]}\r\n                                SetIsAnyContact={props.SetIsAnyContact}/>\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileData","\r\nimport UserPhoto from \"../../assetss/images/userPhoto.jpg\";\r\nimport React from \"react\"\r\nimport pc from './UserInfo.module.css'\r\n\r\nconst ProfileAvatar = (props) => {\r\n\r\n    const OnPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.SetProfilePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return <div>\r\n        <div>\r\n            <img id={\"avatar\"} className={pc.UserPhoto}\r\n                 src={(props.photos.large && props.photos.small) == null ? UserPhoto : props.photos.large}/>\r\n        </div>\r\n        <div>\r\n            {props.IsMyPage &&\r\n            <div>\r\n                <input className={pc.SelectPhoto} type={\"file\"}\r\n                       onChange={OnPhotoSelected}\r\n                       accept=\"image/*\"\r\n                       id={\"file\"}/>\r\n                <label htmlFor=\"file\">Click for change avatar</label>\r\n                <label htmlFor=\"file\"><i className=\"material-icons\"></i></label>\r\n            </div>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default ProfileAvatar","import React from 'react'\r\nimport EVS from \"./ElementsValidators.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const TextArea = ({input,meta,...props}) =>{\r\n\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n         <textarea className={EVS.textarea} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n            </div>\r\n    )\r\n\r\n}\r\nexport const TextAreaAboutMe = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <textarea className={EVS.textareaAboutMe} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport const TextAreaMessage = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <textarea className={EVS.TextAreaMessage} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport const TextAreaDialogsMessage = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <textarea className={EVS.TextAreaDialogsMessage} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport const Input = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <div>\r\n            <input className={EVS.input} {...input} {...props}/>\r\n            </div>\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const InputName = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n\r\n                <input className={EVS.input} {...input} {...props}/>\r\n\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\nexport const ContactFormInput = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n                <input className={EVS.ContactFormInput} {...input} {...props}/>\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\nexport const FindUserFormInput = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <input className={EVS.FindFormInput} {...input} {...props}/>\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const CreateField = (placeholder,name,validators,component,props ={},text =\"\") =>{\r\n  return  <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators}\r\n        component={component} {...props}/> {text}\r\n\r\n    </div>\r\n}","export const required = (value) =>{\r\n\r\nif(value ){\r\n    return undefined\r\n}\r\nelse return \"This field is required\"\r\n}\r\n\r\n\r\nexport const MaxLengthCreator = (MaxLengthValue) =>{\r\n    return(value =0 )=>{\r\nif(value.length > MaxLengthValue) {\r\n    return `Maximal length is a ${MaxLengthValue} symbols`\r\n}\r\nelse return undefined\r\n    }\r\n}\r\n\r\n\r\n","import React from \"react\"\r\nimport {\r\n    Input,\r\n    CreateField,\r\n    TextAreaAboutMe,\r\n    ContactFormInput,InputName\r\n} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport pc from './UserInfo.module.css'\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nconst max300=MaxLengthCreator(300)\r\n\r\nconst ProfileDataEditorForm = (props) => {\r\n\r\n    return <div className={pc.EditorFormBG}>\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <button className={pc.buttonSaveChanges}>\r\n                Save changes\r\n            </button>\r\n            <button className={pc.buttonGoBack } onClick={props.ContactsEditingOFF}>\r\n                go back\r\n            </button>\r\n\r\n            <div className={pc.MyName}>\r\n                <b>My name is : </b>\r\n                {CreateField(\"Enter your full name\", \"fullName\", [required], InputName)}\r\n\r\n            </div>\r\n\r\n            <div>\r\n                <b>are u looking for a job? :</b>\r\n                {CreateField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills:</b>\r\n                {CreateField(\"Enter description\", \"lookingForAJobDescription\", [],\r\n                    TextAreaAboutMe)}\r\n            </div>\r\n            <div>\r\n                <b> about me:</b>\r\n                {CreateField(\"print something about you\", \"aboutMe\", [max300],\r\n                    TextAreaAboutMe)}\r\n            </div>\r\n\r\n            <div className={pc.MyContacts}>My contacts :</div>\r\n            {props.error\r\n                ?\r\n                <div className={pc.FormError}>\r\n                    {props.error}\r\n                </div>\r\n                : null}\r\n            <div className={pc.ContactsForm}>\r\n                {Object.keys(props.contacts).map(key => {\r\n                    return <div key={key}>\r\n                        {key} : {CreateField(key, \"contacts.\" + key, [], ContactFormInput)}\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n\r\n\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default ProfileDataEditorForm","import React, {useState} from \"react\"\r\nimport pds from \"./ProfileData.module.css\";\r\nimport lm from \"../../Login/login.module.css\";\r\nimport {CreateField, TextAreaMessage} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport d from \"../../Dialogs/Dialogs.module.css\";\r\nimport pc from \"./UserInfo.module.css\";\r\n\r\nlet maxLength300 = MaxLengthCreator(300)\r\n\r\nconst SendMessageOnUserPageForm = (props) => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    {CreateField(\"Enter message text\", \"MessageFromUserPage\",\r\n                        [required, maxLength300], TextAreaMessage)}\r\n                </div>\r\n\r\n                {props.error\r\n                    ?\r\n                    <div className={lm.AuthError}>\r\n                        {props.error}\r\n                    </div>\r\n                    : null\r\n                }\r\n                <div>\r\n                    <button className={pc.buttonSaveChanges}> send message</button>\r\n                    <button className={pc.buttonGoBack }\r\n                            onClick={props.MessageSendingModOFF}> go back </button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>)\r\n}\r\nconst ReduxSendMessageOnUserPageForm = reduxForm({form: 'SendMessageForm'})(SendMessageOnUserPageForm)\r\n\r\nconst SendMessageOnUserPage = (props) => {\r\n\r\n    let [ChosedSendMessage, SetChosedSendMessage] = useState(false)\r\n\r\n\r\n    const MessageSendingModON = () => {\r\n        SetChosedSendMessage(true)\r\n    }\r\n\r\n    const MessageSendingModOFF = () => {\r\n        SetChosedSendMessage(false)\r\n    }\r\n\r\n    const SendNewMessage = (Formdata) => {\r\n        props.SendNewMessageThunk(props.UserID, Formdata.MessageFromUserPage)\r\n        SetChosedSendMessage(false)\r\n    }\r\n\r\n\r\n    return (<div>\r\n\r\n\r\n            {!props.IsMyPage ?\r\n                <div>\r\n                    {!ChosedSendMessage ?\r\n                        <div>\r\n                            <button className={pds.buttonEditInformation} onClick={MessageSendingModON}>\r\n                                send message to {props.UserName}\r\n                            </button>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            < ReduxSendMessageOnUserPageForm\r\n                                onSubmit={SendNewMessage}\r\n                                MessageSendingModOFF={MessageSendingModOFF}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                : \"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SendMessageOnUserPage","import React, {useState} from \"react\"\r\nimport pc from './UserInfo.module.css'\r\nimport Preloader from \"../../assetss/common/Loader/Loader\";\r\nimport ProfileStatusF from \"./ProfileStatusF\";\r\nimport ProfileData from \"./ProfileData\"\r\nimport ProfileAvatar from \"./ProfileAvatar\";\r\nimport ProfileDataEditorForm from \"./ProfileDataEditorForm\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport SendMessageOnUserPage from \"./SendMessageOnUserPage\";\r\n\r\n\r\nconst UserInfo = (props) => {\r\n\r\n    let [ContactsIsEditing, SetContactsIsEditing] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    const ContactsEditingOn = () => {\r\n        SetContactsIsEditing(true)\r\n    }\r\n\r\n    const ContactsEditingOFF = () => {\r\n        SetContactsIsEditing(false)\r\n    }\r\n\r\n    const PutNewProfileInfoToServer = (formData) => {\r\n\r\n      props.SaveProfileData(formData).then(()=>{\r\n          SetContactsIsEditing(false)\r\n      })\r\n    }\r\n\r\n    return <div className={pc.userdescrition}>\r\n\r\n        <div className={pc.ProfileName}>\r\n            {props.profile.fullName != null ? props.profile.fullName : null}\r\n        </div>\r\n\r\n        <ProfileAvatar IsMyPage={props.IsMyPage}\r\n                       photos={props.profile.photos}/>\r\n\r\n\r\n        <ProfileStatusF status={props.status}\r\n                        SetProfileStatus={props.SetProfileStatus}\r\n                        IsMyPage={props.IsMyPage}/>\r\n        {props.IsLogined &&\r\n            <SendMessageOnUserPage UserName={props.profile.fullName}\r\n                                   IsMyPage={props.IsMyPage}\r\n                                   UserID={props.profile.userId}\r\n                                   SendNewMessageThunk={props.SendNewMessageThunk}\r\n            />\r\n        }\r\n\r\n\r\n        {\r\n            ContactsIsEditing ?\r\n            <div>\r\n                <ProfileDataEditorFormRedux initialValues={props.profile}\r\n                                            contacts={props.profile.contacts}\r\n                                            onSubmit={PutNewProfileInfoToServer}\r\n                       ContactsEditingOFF={ContactsEditingOFF}/>\r\n            </div>\r\n            : <div>\r\n                <ProfileData profile={props.profile}\r\n                             IsMyPage={props.IsMyPage}\r\n                             ContactsEditingOn={ContactsEditingOn}/>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\nconst ProfileDataEditorFormRedux = reduxForm({form: 'ProfileDataEditorForm'})(ProfileDataEditorForm)\r\nexport default UserInfo;","import React from 'react';\r\nimport pc from './Post.module.css'\r\nimport UserPhoto from \"../../../assetss/images/userPhoto.jpg\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={pc.item}>\r\n            <img className={pc.img} src={(props.profile.photos.large && props.profile.photos.small) == null ? UserPhoto : props.profile.photos.large}/>\r\n            {props.message}\r\n            <div>\r\n                {props.likecount} <span>\r\n                    <img className={pc.like} src='https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/Ei-like.svg/1024px-Ei-like.svg.png'/>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Post;","import React from 'react';\r\nimport pc from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, MaxLengthCreator} from \"../../utils/validators\";\r\nimport {TextArea} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\"\r\n\r\n\r\nconst maxValue250 = MaxLengthCreator(250)\r\n    const MyPostForm = (props) => {\r\n\r\n        return <div>\r\n            {props.IsMyPage &&\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field name={'postArea'}\r\n                           placeholder={\"type any info here\"}\r\n                           component={TextArea}\r\n                           validate={[required, maxValue250]}/>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                    <button className={pc.button}> Send post</button>\r\n                </div>\r\n\r\n            </form>\r\n            }\r\n        </div>\r\n    }\r\n\r\nconst ReduxMyPostForm = reduxForm({form: 'mypost'})(MyPostForm )\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let SendPost = (formDatas) => {\r\n        props.addpost(formDatas.postArea)\r\n\r\n    }\r\n\r\n    let Posts = props.posts.map(p => <Post message={p.Post} likecount={p.likesCount} profile={props.profile}/>);\r\n\r\n    return (\r\n        <div className={pc.pp}>\r\n            {props.IsMyPage ?  <h3>My posts</h3> :  <h3>Posts</h3>}\r\n            {<ReduxMyPostForm onSubmit={SendPost} {...props}/>}\r\n            <div className={pc.marginPost}>\r\n                {Posts}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nexport default MyPosts","import React from 'react';\r\nimport {addpost} from \"../../../data/ProfileReduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {GetIsMyPageSelector, GetPostsSelector} from \"../../../data/ProfileSelectors\";\r\n\r\n\r\nclass MyPostsConteiner extends React.PureComponent {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <MyPosts posts={this.props.posts}\r\n                     addpost={this.props.addpost}\r\n                     profile={this.props.profile}\r\n                     IsMyPage={this.props.IsMyPage}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet StateProps = (state) => ({\r\n    posts: GetPostsSelector(state),\r\n    IsMyPage: GetIsMyPageSelector(state)\r\n})\r\n\r\nexport default connect(StateProps, {addpost})(MyPostsConteiner)\r\n","import React from 'react';\r\nimport UserInfo from \"./UserInfo/UserInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsConteiner\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div>\r\n        <UserInfo profile={props.profile}\r\n                  status={props.status}\r\n                  SetProfileStatus={props.SetProfileStatus}\r\n                  IsMyPage={props.IsMyPage}\r\n                  SetProfilePhoto={props.SetProfilePhoto}\r\n                  SaveProfileData={props.SaveProfileData}\r\n                  SendNewMessageThunk={props.SendNewMessageThunk}\r\n                  IsLogined={props.IsLogined}\r\n                  />\r\n        <MyPostsContainer  profile={props.profile} />\r\n    </div>\r\n\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport { withRouter} from 'react-router-dom'\r\nimport {GetProfileThunk,\r\n    GetProfileStatusThunk,\r\n    SetProfileStatusThunk,\r\n    SetProfilePhotoThunk,\r\n    SetIsMyPage,UpdateProfileInfoThunk}\r\n    from '../../data/ProfileReduser'\r\nimport {compose} from \"redux\";\r\nimport { GetIsMyPageSelector,\r\n    GetProfileSelector, GetStatusSelector} from \"../../data/ProfileSelectors\";\r\nimport {GetIsLoginedSelector, GetUserIDSelector} from \"../../data/AuthSelectors\";\r\nimport {SendNewMessageThunk} from \"../../data/DIalogsReduser\"\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    ProfileDataToPaint(){\r\n        let ProfileID = this.props.match.params.userID\r\n        if(!ProfileID){\r\n            ProfileID = this.props.userID\r\n            this.props.SetIsMyPage(true) //  if this branch is going so we are in own page\r\n            if(!ProfileID){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        else{\r\n            this.props.SetIsMyPage(false) // if this branch is going so we are in some user page\r\n        }\r\n        this.props.GetProfileThunk(ProfileID)\r\n        this.props.GetProfileStatusThunk(ProfileID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.ProfileDataToPaint()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props.match.params.userID !== prevProps.match.params.userID ){\r\n            this.ProfileDataToPaint()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile  profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     SetProfileStatus={this.props.SetProfileStatusThunk}\r\n                      SetProfilePhoto={this.props.SetProfilePhotoThunk}\r\n                      IsMyPage={this.props.IsMyPage}\r\n                      SaveProfileData={this.props.UpdateProfileInfoThunk}\r\n                      SendNewMessageThunk={this.props.SendNewMessageThunk}\r\n                      IsLogined={this.props.IsLogined}\r\n                        />\r\n        )\r\n    }\r\n}\r\n\r\nlet MapStateToProps = (state) => ({\r\n    profile: GetProfileSelector(state),\r\n    status : GetStatusSelector(state),\r\n    userID : GetUserIDSelector(state),\r\n    IsMyPage : GetIsMyPageSelector(state),\r\n    IsLogined : GetIsLoginedSelector(state)})\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {GetProfileThunk,GetProfileStatusThunk,\r\n        SetProfileStatusThunk,SetProfilePhotoThunk,SetIsMyPage,\r\n        UpdateProfileInfoThunk,SendNewMessageThunk}),\r\n    withRouter)(ProfileContainer)","import React from \"react\"\r\nimport ms from \"./Messages.module.css\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport CloseButton from \"../../assetss/images/closeButton.png\"\r\n\r\n\r\nconst DeleteConfirmWindow = (props) => {\r\n    const closeWindow = () => {\r\n        props.SetToConfirmDeleting(false)\r\n    }\r\n\r\n    return <div>\r\n\r\n        <Dialog\r\n            className={ms.confirmDeletingWindow} open={props.ToConfirmDeleting}>\r\n\r\n            <div className={ms.wrapper}>\r\n                <img onClick={closeWindow} className={ms.imgClose} src={CloseButton}/>\r\n                <h3 className={ms.confirmDeletingWindowHeader}>\r\n                    Delete messages confirm\r\n                </h3>\r\n                <div className={ms.confirmDeletingWindowText}>\r\n                    Are you sure about this? you will can't restored this message.\r\n                    You will delete message only for your own\r\n                </div>\r\n                <div className={ms.confirmDeletingWindowButtons}>\r\n                    <button className={ms.deleteMessageStyle} onClick={props.deleteMessage}>\r\n                        yes\r\n                    </button>\r\n                    <span className={ms.buttontsDelta}>\r\n                       <button className={ms.deleteMessageStyle} onClick={closeWindow}>\r\n                           no\r\n                       </button>\r\n                </span>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </Dialog>\r\n\r\n    </div>\r\n\r\n}\r\nexport default DeleteConfirmWindow","import React,{useState} from \"react\"\r\nimport d from \"../Dialogs.module.css\";\r\nimport DeleteConfirmWindow from \"./DeleteConfirmWindow\";\r\nimport ToTrash from \"../../assetss/images/trash.png\"\r\n\r\nconst DeleteMessage = (props) =>{\r\nlet [ToConfirmDeleting,SetToConfirmDeleting]=useState(false)\r\nlet [MessageToRestore,SetMessageToRestore]=useState(false)\r\n\r\nconst deleteMessage = () =>{\r\n    props.DeleteMessageThunk(props.MessageID,props.DialoguserID)\r\n    SetMessageToRestore(true)\r\n    SetToConfirmDeleting(false)\r\n}\r\n\r\n\r\n\r\n    return <div className={d.ConfirmText}>\r\n        {!ToConfirmDeleting && !MessageToRestore ?\r\n            <img src={ToTrash} className={d.ToTrash} onClick={()=>{\r\n                SetToConfirmDeleting(true)}\r\n            }/>\r\n\r\n            :null\r\n        }\r\n\r\n        {MessageToRestore &&\r\n            <button className={d.deleteMessageStyle} onClick={()=>{\r\n                SetMessageToRestore(false)\r\n                SetToConfirmDeleting(false)\r\n            }}>\r\n                restore message\r\n            </button>\r\n        }\r\n\r\n\r\n            <DeleteConfirmWindow\r\n                SetToConfirmDeleting={SetToConfirmDeleting}\r\n                ToConfirmDeleting={ToConfirmDeleting}\r\n                deleteMessage={deleteMessage}\r\n\r\n            />\r\n\r\n        </div>\r\n\r\n}\r\n\r\nexport default DeleteMessage","import React, {useEffect,useState} from \"react\"\r\nimport Preloader from \"../../assetss/common/Loader/Loader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport mwuStyles from \"./Messages.module.css\"\r\nimport UserPhoto from \"../../assetss/images/userPhoto.jpg\";\r\nimport Viewed from \"../../assetss/images/viewed1.jpg\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport d from \"../Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextAreaDialogsMessage} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport Paginator from \"../../assetss/common/Paginator/Paginator\";\r\nimport DeleteMessage from \"./DeleteMessage\";\r\n\r\nconst maxValue300 = MaxLengthCreator(300)\r\n\r\nconst MessageWithUserForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div >\r\n\r\n                <div className={d.messages}>\r\n                    <div>\r\n                        <div>\r\n                            <Field name={\"MessageTextArea\"}\r\n                                   component={TextAreaDialogsMessage}\r\n                                   placeholder={\"Enter your message here\"}\r\n                                   validate={[required, maxValue300]}/>\r\n                        </div>\r\n                        <div>\r\n                            <button className={d.button}> send message</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxMessageWithUserForm = reduxForm({form: 'messages'})(MessageWithUserForm)\r\n\r\n\r\nconst MessagesWithUser = (props) => {\r\n\r\n    const SendNewMessage = (Formdata) => {\r\n        props.SendNewMessageThunk(props.DialoguserID, Formdata.MessageTextArea)\r\n    }\r\n\r\n    let [MessagesData, SetMessagesData] = useState(props.MessagesData)\r\n\r\n    useEffect(() => {\r\n        SetMessagesData(props.MessagesData)\r\n        }, [props.MessagesData]\r\n    )\r\n\r\n    return <div>\r\n        {MessagesData.DialogsMessages  ?\r\n            MessagesData.DialogsMessages.items.map(item => {\r\n                return (\r\n                    <div  className={mwuStyles.fontStyles} key={item.id} >\r\n                        <div className={mwuStyles.dateStyle}>\r\n                            Sended at : &nbsp;&nbsp;\r\n                            {item.addedAt.split(\"T\")[0]}\r\n                        </div>\r\n\r\n                        <div className={mwuStyles.MessageFormStyle}>\r\n                            <div>\r\n\r\n                                {item.senderName}  &nbsp;&nbsp;\r\n                                {item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[0]}:\r\n                                {item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[1]}\r\n                            </div>\r\n\r\n\r\n\r\n                            <NavLink to={`/Profile/${item.senderId}`}>\r\n                                {item.senderId !== props.MyID ?\r\n                                    <img className={mwuStyles.img}\r\n                                         src={props.MessagesData.InterlocutorAvatar != null\r\n                                             ? props.MessagesData.InterlocutorAvatar\r\n                                             : UserPhoto}/>\r\n                                    :\r\n                                    <img className={mwuStyles.img}\r\n                                         src={props.MessagesData.UserAvatar!= null ?\r\n                                             props.MessagesData.UserAvatar\r\n                                             : UserPhoto}/>\r\n                                }\r\n                            </NavLink>\r\n\r\n                            <div className={mwuStyles.messageText}>\r\n                                &nbsp;&nbsp;  {item.body}\r\n                            </div>\r\n                            <DeleteMessage DialoguserID={props.DialoguserID}\r\n                                           MessageID={item.id}\r\n                                           DeleteMessageThunk={props.DeleteMessageThunk}\r\n                            />\r\n                            <div>\r\n                                {item.viewed &&\r\n                                <img src={Viewed} className={mwuStyles.viewed}/>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n\r\n            : <Preloader/>\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        {props.MessagesData.DialogsMessages ?\r\n            <>\r\n                <ReduxMessageWithUserForm onSubmit={SendNewMessage} {...props} />\r\n            {/*<Paginator OnChangedPage={props.OnChangedPage}\r\n                       currentPage={props.currentPage}\r\n                       totalUsersCount={props.MessagesData.DialogsMessages.totalCount}\r\n                       pageSize={props.pageSize}\r\n                       PortionSize={props.PortionSize}\r\n            />*/}\r\n            </>\r\n            : <Preloader/>\r\n        }\r\n    </div>\r\n\r\n}\r\nexport default MessagesWithUser","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport {\r\n    GetMessagesDataSelector,\r\n} from \"../../../data/DialogsSelectors\";\r\nimport MessagesWithUser from \"./MessagesWithUser\";\r\nimport {AuthRedirect} from \"../../hocs/AuthRedirect\";\r\nimport {\r\n    SendNewMessageThunk, GetNewMessagesThunk,\r\n    GetInterlocutorAvatarThunk, setUserAvatarForDialogs,GetProfileAvatarThunk,DeleteMessageThunk\r\n} from \"../../../data/DIalogsReduser\"\r\nimport {GetUserIDSelector} from \"../../../data/AuthSelectors\";\r\n\r\nclass MessagesContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const DialoguserID = this.props.match.params.userID\r\n        this.props.GetNewMessagesThunk(DialoguserID)\r\n        this.props.GetInterlocutorAvatarThunk(DialoguserID)\r\n        this.props.GetProfileAvatarThunk(this.props.MyID)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <MessagesWithUser {...this.props} DialoguserID={this.props.match.params.userID}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => ({\r\n    MessagesData: GetMessagesDataSelector(state),\r\n    MyID: GetUserIDSelector(state)\r\n})\r\n\r\nexport default compose(connect(StateToProps,\r\n    {\r\n        GetNewMessagesThunk, SendNewMessageThunk,\r\n        GetInterlocutorAvatarThunk, setUserAvatarForDialogs, GetProfileAvatarThunk,DeleteMessageThunk\r\n    }),\r\n    AuthRedirect,\r\n    withRouter)(MessagesContainer)","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {LoginThunk} from \"../../data/AuthReducer\"\r\nimport {required, MaxLengthCreator} from \"../utils/validators\"\r\nimport {CreateField, Input, InputName} from \"../assetss/common/ValidatorsComponents/ElementsValidators\"\r\nimport lm from \"../Login/login.module.css\"\r\nimport LoginUserPhoto from \"../assetss/images/userLog.jpg\"\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst maxLength50 = MaxLengthCreator(50)\r\n\r\nconst MapStateToProps = (state) => ({\r\n    IsLogined: state.Auth.IsLogined,\r\n    CaptchaUrl: state.Auth.CaptchaUrl\r\n})\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={lm.login}>\r\n            <form onSubmit={props.handleSubmit}>\r\n\r\n                <div>\r\n                    <img src={LoginUserPhoto} className={lm.imgUser}/>\r\n                    {CreateField(\"Enter the email\", \"email\", [required, maxLength50], Input)}\r\n                </div>\r\n\r\n                <div>\r\n                    {CreateField(\"Enter the password\", \"password\", [required, maxLength50],\r\n                        Input, {type: \"password\"})}\r\n                </div>\r\n\r\n                <div className={lm.rememberMe}>\r\n                    {CreateField(\"\", \"rememberMe\", [], \"input\", {type: \"checkbox\"},\r\n                        \"remember me\")}\r\n                </div>\r\n\r\n                {props.CaptchaUrl &&\r\n                <div>\r\n                    <img src={props.CaptchaUrl}/>\r\n                    {CreateField(\"Enter captcha symbols\", \"captcha\", [required],\r\n                        InputName)}\r\n                </div>\r\n                }\r\n                {props.error\r\n                    ?\r\n                    <div className={lm.AuthError}>\r\n                        {props.error}\r\n                    </div>\r\n                    : null}\r\n                <div>\r\n                    <button className={lm.button}> Enter</button>\r\n                </div>\r\n            </form>\r\n        </div>)\r\n}\r\nconst ReduxLoginForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nlet Login = (props) => {\r\n    const PostUserDataToServer = (formDatas) => {\r\n        props.LoginThunk(formDatas.email, formDatas.password, formDatas.rememberMe)\r\n        //here is all datas of forms, we can do here use some thunk for a make request on server\r\n    }\r\n\r\n    if (props.IsLogined) {\r\n        return <Redirect to={\"/Profile\"}/>\r\n    }\r\n    return (<div>\r\n\r\n        <ReduxLoginForm onSubmit={PostUserDataToServer}\r\n                        CaptchaUrl={props.CaptchaUrl}/>\r\n    </div>)\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {LoginThunk}),\r\n)(Login)","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Login from \"../../Login/Login\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst LoginModalWindow = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\n\r\nexport default function CustomizedDialogs() {\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button  variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\r\n                authorise\r\n            </Button>\r\n            <Dialog   onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                    Authentication windows\r\n                </DialogTitle>\r\n                <LoginModalWindow dividers>\r\n                <Login/>\r\n                </LoginModalWindow>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from \"react\"\r\nimport LoginModalWindow from \"../MaterialUI/ModalWindow/LoginModal\"\r\nimport lm from \"../Login/login.module.css\"\r\n\r\n\r\nconst LoginPage = (props) => {\r\n    return <div className={lm.LoginPageAlarm}>\r\n        <h1>\r\n            you need authorization for watching this\r\n        </h1>\r\n        <div className={lm.AuthButton}>\r\n            <LoginModalWindow/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default LoginPage","import React, {Component} from 'react';\nimport './App.css';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {Redirect, Route, withRouter} from \"react-router-dom\";\n/*import News from \"./components/News/News\";*/\n/*import Music from \"./components/Music/Music\";*/\n/*import Settings from \"./components/Settings/Settings\";*/\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileCOntainer\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {InitializationAPPthunk} from \"./data/InitializatonReducer\";\nimport Preloader from \"./components/assetss/common/Loader/Loader\";\n// import {WithSuspense} from \"./components/hocs/WithSuspense\";\nimport MessagesContainer from \"./components/Dialogs/Message/MessagesContainer\";\nimport {GetinitionSelector} from \"./data/InitialozationSelectors\";\n/*import NavbarContainer from \"./components/NavBar/NavbarContainer\";*/\nimport {GetNewMessagesCountThunk} from \"./data/DIalogsReduser\";\nimport LoginPage from \"./components/Login/LoginPage\";\n\n/*const Music = React.lazy(() => import('./components/Music/Music'))*/\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.InitializationAPPthunk()\n        this.props.GetNewMessagesCountThunk()\n    }\n\n    render() {\n\n\n        if (!this.props.inition) {\n            return <Preloader/>\n        }\n        return (\n\n            <div className='wrapper'>\n                <HeaderContainer />\n\n                <div className=\"app-wrapper-content\">\n\n                    <Route exact path='/'\n                           render={() => <Redirect to={\"Profile/\"}/>}/>\n\n                    <Route path='/dialogs/'\n                           render={() => <DialogsContainer/>}/>\n                    <Route path='/messages/:userID?'\n                           render={() => <MessagesContainer/>}/>\n\n                    <Route path='/Profile/:userID?'\n                           render={() => <ProfileContainer/>}/>\n\n\n                    <Route exact path='/Users' render={() => <UsersContainer/>}/>\n\n                    <Route exact path='/Login' render={() => <LoginPage/>}/>\n\n             {       /* to the new updates\n                    <Route exact path='/News' render={() => <News/>}/>\n\n                    <Route exact path='/Music' render={WithSuspense(Music)}/>\n\n                    <Route exact path='/Settings' render={() => <Settings/>}/>*/}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst MapStateToProps = (state) => ({inition: GetinitionSelector(state)})\n\nexport default compose(\n    connect(MapStateToProps, {InitializationAPPthunk, GetNewMessagesCountThunk}),\n    withRouter)(App)\n","\nimport React from 'react'\nimport * as serviceWorker from './serviceWorker';\nimport store from './data/redux-store'\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter,HashRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\n/*ussing Hash router couz git can't work correctly with BrowserRouter ,\n           so we need to use anchors\n      /* <HashRouter>*/\n\n/* </HashRouter>,*/\n    ReactDOM.render(\n       <HashRouter basename={process.env.PUBLIC_URL}>\n\n        <Provider store={store}>\n            <App  />\n        </Provider>\n       </HashRouter>,\n        document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/userPhoto.f86bd3d2.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__2XLpg\",\"imgUser\":\"login_imgUser__3RvPz\",\"rememberMe\":\"login_rememberMe__1T4hC\",\"button\":\"login_button__1BAOG\",\"bg\":\"login_bg__3ae0b\",\"bg10\":\"login_bg10__O5xrp\",\"AuthError\":\"login_AuthError__1kfh-\",\"LoginPageAlarm\":\"login_LoginPageAlarm__19tn1\",\"logModalWindow\":\"login_logModalWindow__1r3QB\",\"AuthButton\":\"login_AuthButton__242Z_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ProfileData_contacts__1hcZY\",\"aboutME\":\"ProfileData_aboutME__2RKXo\",\"buttonEditInformation\":\"ProfileData_buttonEditInformation__DJ_Eq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GoBack\":\"FindUser_GoBack__2YgqT\",\"foundArea\":\"FindUser_foundArea__2UM3r\",\"SearchingResult\":\"FindUser_SearchingResult__1rxlW\",\"FoundedUsers\":\"FindUser_FoundedUsers__Z4_bH\",\"FindUserButton\":\"FindUser_FindUserButton__1BxTF\"};"],"sourceRoot":""}